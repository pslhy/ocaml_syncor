code:
 (* Write a function to return the sum of all divisors of a number. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0058
Next Token :  get, Posbility: 0.0108
Next Token :  sum, Posbility: 0.0623
Next Token :  , Posbility: 0.2793
Next Token :  rec, Posbility: 0.5898
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0148
Next Token :  loop, Posbility: 0.0276
Next Token :  find, Posbility: 0.0312
Next Token :  sum, Posbility: 0.1592
Next Token :  , Posbility: 0.6289
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0079
Next Token : fi, Posbility: 0.0146
Next Token : f, Posbility: 0.0166
Next Token : add, Posbility: 0.0310
Next Token : div, Posbility: 0.8008
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec div
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0020
Next Token : sum, Posbility: 0.0148
Next Token : _, Posbility: 0.0403
Next Token : s, Posbility: 0.1099
Next Token : is, Posbility: 0.8125
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divis
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : on, Posbility: 0.0033
Next Token : ive, Posbility: 0.0033
Next Token : ions, Posbility: 0.0033
Next Token : or, Posbility: 0.4883
Next Token : ors, Posbility: 0.4883
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0150
Next Token :  a, Posbility: 0.0193
Next Token : _, Posbility: 0.1108
Next Token :  =, Posbility: 0.3867
Next Token :  , Posbility: 0.3867
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0071
Next Token : m, Posbility: 0.0117
Next Token : (, Posbility: 0.0219
Next Token : x, Posbility: 0.1108
Next Token : n, Posbility: 0.8203
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0047
Next Token :  i, Posbility: 0.0078
Next Token :  acc, Posbility: 0.0128
Next Token :  , Posbility: 0.0571
Next Token :  =, Posbility: 0.8945
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0046
Next Token :  {, Posbility: 0.0097
Next Token :  match, Posbility: 0.0815
Next Token :  , Posbility: 0.1187
Next Token : 
, Posbility: 0.7734
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0049
Next Token :    , Posbility: 0.0092
Next Token : 	, Posbility: 0.0104
Next Token :     , Posbility: 0.1270
Next Token :   , Posbility: 0.8320
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0084
Next Token : List, Posbility: 0.0259
Next Token : let, Posbility: 0.1689
Next Token : match, Posbility: 0.3574
Next Token : if, Posbility: 0.4062
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  N, Posbility: 0.0006
Next Token :  is, Posbility: 0.0008
Next Token :  !, Posbility: 0.0009
Next Token :  not, Posbility: 0.0025
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Mod, Posbility: 0.0008
Next Token : Div, Posbility: 0.0021
Next Token : Int, Posbility: 0.0039
Next Token : (, Posbility: 0.0369
Next Token : n, Posbility: 0.9492
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0161
Next Token :  ==, Posbility: 0.1191
Next Token :  <=, Posbility: 0.1963
Next Token :  , Posbility: 0.3242
Next Token :  =, Posbility: 0.3242
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token :  , Posbility: 0.0090
Next Token :  1, Posbility: 0.4941
Next Token :  0, Posbility: 0.4941
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token :  , Posbility: 0.0039
Next Token : 
, Posbility: 0.0175
Next Token :  ||, Posbility: 0.0175
Next Token :  then, Posbility: 0.9570
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0175
Next Token : 
, Posbility: 0.1289
Next Token :  , Posbility: 0.1289
Next Token :  [], Posbility: 0.3496
Next Token :  0, Posbility: 0.3496
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0022
Next Token :   , Posbility: 0.0047
Next Token :  , Posbility: 0.0305
Next Token :  else, Posbility: 0.2559
Next Token : 
, Posbility: 0.6953
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :       , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :     , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0004
Next Token : |, Posbility: 0.0004
Next Token : let, Posbility: 0.0009
Next Token : elif, Posbility: 0.0046
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0058
Next Token :  match, Posbility: 0.0108
Next Token :  {, Posbility: 0.0201
Next Token : 
, Posbility: 0.1914
Next Token :  , Posbility: 0.7578
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0123
Next Token : div, Posbility: 0.0231
Next Token : (, Posbility: 0.0625
Next Token : n, Posbility: 0.2812
Next Token : if, Posbility: 0.5938
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0006
Next Token :   , Posbility: 0.0007
Next Token :  not, Posbility: 0.0024
Next Token :  is, Posbility: 0.0028
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0014
Next Token : div, Posbility: 0.0016
Next Token : Div, Posbility: 0.0035
Next Token : (, Posbility: 0.0226
Next Token : n, Posbility: 0.9609
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0134
Next Token :  <=, Posbility: 0.0172
Next Token :  %, Posbility: 0.0530
Next Token :  , Posbility: 0.2373
Next Token :  =, Posbility: 0.6445
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 0.0179
Next Token :  1, Posbility: 0.9805
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 0.0007
Next Token : 
, Posbility: 0.0012
Next Token :  ||, Posbility: 0.0059
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1;, Posbility: 0.0021
Next Token : 
, Posbility: 0.0056
Next Token :  , Posbility: 0.0415
Next Token :  0, Posbility: 0.1128
Next Token :  1, Posbility: 0.8320
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0011
Next Token :  +, Posbility: 0.0040
Next Token :  , Posbility: 0.0051
Next Token :  else, Posbility: 0.0157
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :     , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0019
Next Token :  match, Posbility: 0.0059
Next Token :  {, Posbility: 0.0300
Next Token : 
, Posbility: 0.1729
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0189
Next Token : (, Posbility: 0.0454
Next Token : div, Posbility: 0.0515
Next Token : n, Posbility: 0.2305
Next Token : if, Posbility: 0.6250
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0008
Next Token :  even, Posbility: 0.0017
Next Token :  not, Posbility: 0.0024
Next Token :  is, Posbility: 0.0058
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : div, Posbility: 0.0034
Next Token : let, Posbility: 0.0034
Next Token : Div, Posbility: 0.0049
Next Token : (, Posbility: 0.0361
Next Token : n, Posbility: 0.9336
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0192
Next Token :  mod, Posbility: 0.1104
Next Token :  %, Posbility: 0.2061
Next Token :  =, Posbility: 0.2637
Next Token :  , Posbility: 0.3398
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0049
Next Token : /, Posbility: 0.0104
Next Token : %%, Posbility: 0.0361
Next Token : >, Posbility: 0.2090
Next Token : <, Posbility: 0.7266
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0322
Next Token :  10, Posbility: 0.0322
Next Token : >, Posbility: 0.2393
Next Token :  0, Posbility: 0.2393
Next Token :  , Posbility: 0.3945
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0242
Next Token : 1000, Posbility: 0.0273
Next Token : 5, Posbility: 0.0310
Next Token : 3, Posbility: 0.0510
Next Token : 2, Posbility: 0.8008
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0015
Next Token :  *, Posbility: 0.0027
Next Token : 
, Posbility: 0.0040
Next Token :  ||, Posbility: 0.0075
Next Token :  then, Posbility: 0.9766
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0074
Next Token : 
, Posbility: 0.0201
Next Token :  1, Posbility: 0.1484
Next Token :  0, Posbility: 0.4043
Next Token :  , Posbility: 0.4043
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0164
Next Token : div, Posbility: 0.0347
Next Token : (), Posbility: 0.0503
Next Token : 2, Posbility: 0.2256
Next Token : n, Posbility: 0.6133
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0022
Next Token :  *, Posbility: 0.0078
Next Token :  +, Posbility: 0.0242
Next Token :  , Posbility: 0.0510
Next Token : 
, Posbility: 0.9062
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : //, Posbility: 0.0003
Next Token : let, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0024
Next Token :  1, Posbility: 0.0051
Next Token :  {, Posbility: 0.0123
Next Token : 
, Posbility: 0.1030
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0583
Next Token : (, Posbility: 0.0659
Next Token : div, Posbility: 0.0850
Next Token : if, Posbility: 0.2617
Next Token : n, Posbility: 0.4883
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n
 score:False
Error type: noerr
---------------------------
Next Token : *, Posbility: 0.0032
Next Token : 
, Posbility: 0.0042
Next Token :  , Posbility: 0.0830
Next Token :  *, Posbility: 0.1069
Next Token :  +, Posbility: 0.7891
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0019
Next Token :  sum, Posbility: 0.0040
Next Token :  1, Posbility: 0.0040
Next Token : 
, Posbility: 0.0084
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0091
Next Token : n, Posbility: 0.0117
Next Token : if, Posbility: 0.0193
Next Token : (, Posbility: 0.1260
Next Token : div, Posbility: 0.8203
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + div
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0005
Next Token : is, Posbility: 1.0000
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divis
 score:False
Error type: noerr
---------------------------
Next Token : ions, Posbility: 0.0000
Next Token : ories, Posbility: 0.0000
Next Token : ons, Posbility: 0.0001
Next Token : or, Posbility: 0.0006
Next Token : ors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0011
Next Token :  (1, Posbility: 0.0063
Next Token :  ((, Posbility: 0.0171
Next Token : (, Posbility: 0.0361
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors 
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0003
Next Token : (`, Posbility: 0.0005
Next Token : div, Posbility: 0.0009
Next Token : n, Posbility: 0.0059
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : floor, Posbility: 0.0021
Next Token :  , Posbility: 0.0031
Next Token : Div, Posbility: 0.0045
Next Token : div, Posbility: 0.0121
Next Token : n, Posbility: 0.9609
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0029
Next Token : -2, Posbility: 0.0029
Next Token :  –, Posbility: 0.0037
Next Token : -1), Posbility: 0.0742
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : ^, Posbility: 0.0004
Next Token : −, Posbility: 0.0024
Next Token : /, Posbility: 0.0096
Next Token : -, Posbility: 0.9883
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0008
Next Token :  1);, Posbility: 0.0101
Next Token :  2), Posbility: 0.0276
Next Token :  , Posbility: 0.0454
Next Token :  1), Posbility: 0.9141
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0188
Next Token :  , Posbility: 0.0310
Next Token :  +, Posbility: 0.1387
Next Token : 
, Posbility: 0.1777
Next Token : 

, Posbility: 0.6211
---------------------------
code:
 (* Write a function to return the sum of all divisors of a number. *)
let rec divisors n =
  if n = 0 then 0
  else if n = 1 then 1
  else if n < 2 then n
  else n + divisors (n - 1)


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :26.438366651535034

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>