code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  num, Posbility: 0.0139
Next Token :  find, Posbility: 0.0203
Next Token :  count, Posbility: 0.0334
Next Token :  , Posbility: 0.3184
Next Token :  rec, Posbility: 0.4609
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0233
Next Token :  ways, Posbility: 0.0383
Next Token :  find, Posbility: 0.0559
Next Token :  count, Posbility: 0.2207
Next Token :  , Posbility: 0.4688
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0564
Next Token : helper, Posbility: 0.0640
Next Token : n, Posbility: 0.0820
Next Token : dfs, Posbility: 0.0820
Next Token : paint, Posbility: 0.1738
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0327
Next Token :  =, Posbility: 0.0371
Next Token : ing, Posbility: 0.1660
Next Token :  , Posbility: 0.2734
Next Token : _, Posbility: 0.3516
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : the, Posbility: 0.0233
Next Token : helper, Posbility: 0.0264
Next Token : count, Posbility: 0.0559
Next Token : way, Posbility: 0.1719
Next Token : fence, Posbility: 0.2832
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0540
Next Token :  =, Posbility: 0.0540
Next Token : _, Posbility: 0.1465
Next Token :  k, Posbility: 0.1465
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fence, Posbility: 0.0156
Next Token : x, Posbility: 0.0176
Next Token : f, Posbility: 0.0422
Next Token : (, Posbility: 0.1299
Next Token : n, Posbility: 0.6602
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0023
Next Token : _, Posbility: 0.0063
Next Token :  =, Posbility: 0.0869
Next Token :  , Posbility: 0.2354
Next Token :  k, Posbility: 0.6406
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0075
Next Token :  k, Posbility: 0.0109
Next Token :  i, Posbility: 0.0204
Next Token :  , Posbility: 0.3613
Next Token :  =, Posbility: 0.5234
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0060
Next Token :  function, Posbility: 0.0238
Next Token :  match, Posbility: 0.0571
Next Token :  , Posbility: 0.1064
Next Token : 
, Posbility: 0.7891
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0052
Next Token :    , Posbility: 0.0059
Next Token : 	, Posbility: 0.0097
Next Token :     , Posbility: 0.0918
Next Token :   , Posbility: 0.8711
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fun, Posbility: 0.0052
Next Token : (, Posbility: 0.0124
Next Token : let, Posbility: 0.1040
Next Token : match, Posbility: 0.3203
Next Token : if, Posbility: 0.5273
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token : (, Posbility: 0.0020
Next Token :  0, Posbility: 0.0020
Next Token :  k, Posbility: 0.1797
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token : Int, Posbility: 0.0005
Next Token : 2, Posbility: 0.0023
Next Token : (, Posbility: 0.0471
Next Token : n, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0184
Next Token :  ==, Posbility: 0.1357
Next Token :  , Posbility: 0.2246
Next Token :  <=, Posbility: 0.2246
Next Token :  =, Posbility: 0.3691
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0008
Next Token :  , Posbility: 0.0061
Next Token :  1, Posbility: 0.0449
Next Token :  k, Posbility: 0.0449
Next Token :  0, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0063
Next Token :  and, Posbility: 0.0063
Next Token :  ||, Posbility: 0.0172
Next Token :  &&, Posbility: 0.0221
Next Token :  then, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.1934
Next Token :  k, Posbility: 0.1934
Next Token :  0, Posbility: 0.1934
Next Token : 
, Posbility: 0.1934
Next Token :  , Posbility: 0.1934
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.1152
Next Token : return, Posbility: 0.1309
Next Token : 2, Posbility: 0.1309
Next Token : 
, Posbility: 0.1484
Next Token : (, Posbility: 0.1484
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0381
Next Token : if, Posbility: 0.0432
Next Token : fun, Posbility: 0.0806
Next Token : n, Posbility: 0.0913
Next Token : k, Posbility: 0.4102
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0381
Next Token :  *, Posbility: 0.0491
Next Token :  +, Posbility: 0.0918
Next Token :  , Posbility: 0.3203
Next Token : ,, Posbility: 0.4102
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0260
Next Token :  k, Posbility: 0.0708
Next Token :  , Posbility: 0.1030
Next Token :  1), Posbility: 0.1924
Next Token :  0), Posbility: 0.5234
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0016
Next Token :   , Posbility: 0.0045
Next Token :  , Posbility: 0.0137
Next Token :  else, Posbility: 0.2148
Next Token : 
, Posbility: 0.7500
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : |, Posbility: 0.0002
Next Token : let, Posbility: 0.0010
Next Token : elif, Posbility: 0.0015
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0031
Next Token :  match, Posbility: 0.0203
Next Token :  {, Posbility: 0.0552
Next Token : 
, Posbility: 0.3164
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0096
Next Token : paint, Posbility: 0.0295
Next Token : let, Posbility: 0.1699
Next Token : (, Posbility: 0.2471
Next Token : if, Posbility: 0.5234
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0018
Next Token :  ((, Posbility: 0.0018
Next Token :  0, Posbility: 0.0049
Next Token :  , Posbility: 0.2656
Next Token :  k, Posbility: 0.7227
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0154
Next Token :  <=, Posbility: 0.0253
Next Token :  ==, Posbility: 0.0417
Next Token :  , Posbility: 0.0688
Next Token :  =, Posbility: 0.8398
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0008
Next Token :  k, Posbility: 0.0021
Next Token :  , Posbility: 0.0417
Next Token :  1, Posbility: 0.1138
Next Token :  0, Posbility: 0.8398
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0017
Next Token : 
, Posbility: 0.0027
Next Token :  or, Posbility: 0.0027
Next Token :  ||, Posbility: 0.0109
Next Token :  then, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0096
Next Token :  k, Posbility: 0.0096
Next Token : 
, Posbility: 0.0432
Next Token :  0, Posbility: 0.0432
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0141
Next Token : (1,, Posbility: 0.0383
Next Token : (0,, Posbility: 0.1719
Next Token : paint, Posbility: 0.2832
Next Token : (, Posbility: 0.4668
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 0, Posbility: 0.0036
Next Token : 2, Posbility: 0.0234
Next Token : paint, Posbility: 0.0815
Next Token : k, Posbility: 0.1050
Next Token : n, Posbility: 0.7734
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0019
Next Token : -1,, Posbility: 0.0376
Next Token :  +, Posbility: 0.0376
Next Token :  , Posbility: 0.4570
Next Token : ,, Posbility: 0.4570
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0037
Next Token :  k, Posbility: 0.0272
Next Token :  , Posbility: 0.2012
Next Token :  1), Posbility: 0.2012
Next Token :  0), Posbility: 0.5469
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0009
Next Token :   , Posbility: 0.0013
Next Token :  , Posbility: 0.0058
Next Token :  else, Posbility: 0.0075
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0001
Next Token : |, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0078
Next Token :  {, Posbility: 0.0187
Next Token :  match, Posbility: 0.0508
Next Token : 
, Posbility: 0.2910
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0080
Next Token : paint, Posbility: 0.0217
Next Token : let, Posbility: 0.1826
Next Token : (, Posbility: 0.2070
Next Token : if, Posbility: 0.5625
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0018
Next Token :  1, Posbility: 0.0018
Next Token :  ((, Posbility: 0.0018
Next Token :  k, Posbility: 0.2656
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0005
Next Token : let, Posbility: 0.0009
Next Token : 2, Posbility: 0.0039
Next Token : (, Posbility: 0.0369
Next Token : n, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0403
Next Token :  <=, Posbility: 0.0518
Next Token :  +, Posbility: 0.0518
Next Token :  , Posbility: 0.2988
Next Token :  =, Posbility: 0.4922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0005
Next Token :  , Posbility: 0.0277
Next Token :  0, Posbility: 0.2051
Next Token :  k, Posbility: 0.2051
Next Token :  1, Posbility: 0.5586
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  or, Posbility: 0.0062
Next Token :  and, Posbility: 0.0247
Next Token :  ||, Posbility: 0.0593
Next Token :  &&, Posbility: 0.0859
Next Token :  then, Posbility: 0.8164
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0142
Next Token :  1, Posbility: 0.0142
Next Token :  k, Posbility: 0.0388
Next Token : 
, Posbility: 0.1055
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0112
Next Token : (0,, Posbility: 0.0500
Next Token : paint, Posbility: 0.0500
Next Token : (1,, Posbility: 0.0640
Next Token : (, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : max, Posbility: 0.0029
Next Token : 2, Posbility: 0.0211
Next Token : paint, Posbility: 0.0211
Next Token : n, Posbility: 0.0447
Next Token : k, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0045
Next Token : -1,, Posbility: 0.0123
Next Token :  +, Posbility: 0.0552
Next Token :  , Posbility: 0.2471
Next Token : ,, Posbility: 0.6719
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2), Posbility: 0.0251
Next Token :  , Posbility: 0.0684
Next Token :  k, Posbility: 0.1855
Next Token :  0), Posbility: 0.1855
Next Token :  1), Posbility: 0.5039
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0027
Next Token :  *, Posbility: 0.0031
Next Token :  , Posbility: 0.0095
Next Token :  else, Posbility: 0.0156
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : let, Posbility: 0.0007
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0320
Next Token :  match, Posbility: 0.0361
Next Token :  k, Posbility: 0.0361
Next Token : 
, Posbility: 0.2354
Next Token :  , Posbility: 0.6406
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0060
Next Token : paint, Posbility: 0.0442
Next Token : (, Posbility: 0.2246
Next Token : let, Posbility: 0.2246
Next Token : if, Posbility: 0.4766
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0003
Next Token :  0, Posbility: 0.0008
Next Token :  1, Posbility: 0.0022
Next Token :  , Posbility: 0.1187
Next Token :  k, Posbility: 0.8750
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0034
Next Token :  >=, Posbility: 0.0050
Next Token :  ==, Posbility: 0.0135
Next Token :  , Posbility: 0.0223
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  k, Posbility: 0.0024
Next Token :  0, Posbility: 0.0066
Next Token :  , Posbility: 0.0178
Next Token :  1, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0005
Next Token : 
, Posbility: 0.0006
Next Token :  &&, Posbility: 0.0015
Next Token :  ||, Posbility: 0.0025
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0040
Next Token :  1, Posbility: 0.0065
Next Token : 
, Posbility: 0.0065
Next Token :  (1, Posbility: 0.0065
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0061
Next Token : (0,, Posbility: 0.0166
Next Token : (1,, Posbility: 0.0166
Next Token : paint, Posbility: 0.0452
Next Token : (, Posbility: 0.9062
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Paint, Posbility: 0.0005
Next Token : 2, Posbility: 0.0065
Next Token : k, Posbility: 0.0107
Next Token : paint, Posbility: 0.0176
Next Token : n, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1,, Posbility: 0.0021
Next Token :  +, Posbility: 0.0425
Next Token : -1,, Posbility: 0.1157
Next Token : ,, Posbility: 0.3145
Next Token :  , Posbility: 0.5195
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1,, Posbility: 0.0002
Next Token : ,, Posbility: 0.0005
Next Token : /, Posbility: 0.0012
Next Token : −, Posbility: 0.0015
Next Token : -, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  1), Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : 3,, Posbility: 0.0002
Next Token : 2,, Posbility: 0.0179
Next Token : 1,, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0752
Next Token :  0), Posbility: 0.0752
Next Token :  2), Posbility: 0.0752
Next Token :  k, Posbility: 0.2051
Next Token :  1), Posbility: 0.5586
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0031
Next Token :  else, Posbility: 0.0045
Next Token :  , Posbility: 0.0095
Next Token :  +, Posbility: 0.0138
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : elif, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : let, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0106
Next Token :  k, Posbility: 0.0155
Next Token :  {, Posbility: 0.0155
Next Token : 
, Posbility: 0.1885
Next Token :  , Posbility: 0.7461
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0058
Next Token : paint, Posbility: 0.0488
Next Token : let, Posbility: 0.2480
Next Token : (, Posbility: 0.3184
Next Token : if, Posbility: 0.3594
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0018
Next Token :  1, Posbility: 0.0018
Next Token :  ((, Posbility: 0.0018
Next Token :  k, Posbility: 0.2656
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0011
Next Token : let, Posbility: 0.0014
Next Token : 2, Posbility: 0.0039
Next Token : (, Posbility: 0.0327
Next Token : n, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0400
Next Token :  %, Posbility: 0.0400
Next Token :  >=, Posbility: 0.0513
Next Token :  , Posbility: 0.2949
Next Token :  =, Posbility: 0.4863
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0022
Next Token :  1, Posbility: 0.0162
Next Token :  0, Posbility: 0.0442
Next Token :  k, Posbility: 0.0442
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 0.0015
Next Token : 5, Posbility: 0.0015
Next Token : 3, Posbility: 0.0178
Next Token : 2, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0015
Next Token :  ||, Posbility: 0.0086
Next Token :  and, Posbility: 0.0142
Next Token :  &&, Posbility: 0.0928
Next Token :  then, Posbility: 0.8789
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0037
Next Token :  ((, Posbility: 0.0102
Next Token :  k, Posbility: 0.0102
Next Token : 
, Posbility: 0.0457
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (2,, Posbility: 0.0080
Next Token : (0,, Posbility: 0.0116
Next Token : (1,, Posbility: 0.0132
Next Token : paint, Posbility: 0.0149
Next Token : (, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : max, Posbility: 0.0024
Next Token : paint, Posbility: 0.0039
Next Token : n, Posbility: 0.0083
Next Token : 2, Posbility: 0.0137
Next Token : k, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0026
Next Token :  *, Posbility: 0.0317
Next Token :  +, Posbility: 0.0864
Next Token : ,, Posbility: 0.2354
Next Token :  , Posbility: 0.6406
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0002
Next Token : >, Posbility: 0.0003
Next Token : ^, Posbility: 0.0009
Next Token : /, Posbility: 0.0041
Next Token : -, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2), Posbility: 0.0001
Next Token :  1), Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  k, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0016
Next Token : 2, Posbility: 0.0020
Next Token : 3,, Posbility: 0.0026
Next Token : 2,, Posbility: 0.1807
Next Token : 1,, Posbility: 0.8125
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0374
Next Token :  k, Posbility: 0.0374
Next Token :  0), Posbility: 0.0374
Next Token :  1), Posbility: 0.1016
Next Token :  2), Posbility: 0.7500
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0024
Next Token :  +, Posbility: 0.0039
Next Token :  , Posbility: 0.0065
Next Token :  else, Posbility: 0.0200
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0107
Next Token :  {, Posbility: 0.0156
Next Token :  k, Posbility: 0.0330
Next Token : 
, Posbility: 0.1680
Next Token :  , Posbility: 0.7539
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0045
Next Token : paint, Posbility: 0.0486
Next Token : let, Posbility: 0.1914
Next Token : (, Posbility: 0.2178
Next Token : if, Posbility: 0.5195
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0007
Next Token :  1, Posbility: 0.0007
Next Token :  ((, Posbility: 0.0007
Next Token :  , Posbility: 0.2676
Next Token :  k, Posbility: 0.7266
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0019
Next Token :  <=, Posbility: 0.0027
Next Token :  >=, Posbility: 0.0051
Next Token :  , Posbility: 0.0157
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0009
Next Token :  1, Posbility: 0.0025
Next Token :  0, Posbility: 0.0025
Next Token :  k, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : 5, Posbility: 0.0003
Next Token : n, Posbility: 0.0019
Next Token : 3, Posbility: 0.0109
Next Token : 2, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  ||, Posbility: 0.0012
Next Token :  and, Posbility: 0.0015
Next Token :  &&, Posbility: 0.0085
Next Token :  then, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0019
Next Token :  k, Posbility: 0.0019
Next Token :  ((, Posbility: 0.0065
Next Token : 
, Posbility: 0.0177
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0024
Next Token : let, Posbility: 0.0024
Next Token : (0,, Posbility: 0.0024
Next Token : paint, Posbility: 0.0289
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : k, Posbility: 0.0024
Next Token : paint, Posbility: 0.0040
Next Token : 2, Posbility: 0.0066
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0005
Next Token : -1,, Posbility: 0.0023
Next Token :  +, Posbility: 0.0171
Next Token : ,, Posbility: 0.0464
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0001
Next Token : /, Posbility: 0.0006
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  2), Posbility: 0.0001
Next Token :  1, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4,, Posbility: 0.0015
Next Token : 2, Posbility: 0.0025
Next Token : 3,, Posbility: 0.0183
Next Token : 1,, Posbility: 0.3691
Next Token : 2,, Posbility: 0.6094
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0437
Next Token :  k, Posbility: 0.1187
Next Token :  1), Posbility: 0.1187
Next Token :  3), Posbility: 0.3223
Next Token :  2), Posbility: 0.3223
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0063
Next Token :  *, Posbility: 0.0063
Next Token :  else, Posbility: 0.0150
Next Token :  +, Posbility: 0.0408
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0067
Next Token :  ((, Posbility: 0.0097
Next Token :  k, Posbility: 0.0205
Next Token : 
, Posbility: 0.1719
Next Token :  , Posbility: 0.7695
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0044
Next Token : paint, Posbility: 0.0415
Next Token : let, Posbility: 0.1865
Next Token : (, Posbility: 0.2393
Next Token : if, Posbility: 0.5078
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0007
Next Token :  1, Posbility: 0.0007
Next Token :  ((, Posbility: 0.0018
Next Token :  k, Posbility: 0.2676
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0003
Next Token : let, Posbility: 0.0007
Next Token : 2, Posbility: 0.0031
Next Token : (, Posbility: 0.0178
Next Token : n, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0075
Next Token :  %, Posbility: 0.0085
Next Token :  >=, Posbility: 0.0123
Next Token :  , Posbility: 0.0908
Next Token :  =, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0009
Next Token :  1, Posbility: 0.0009
Next Token :  4, Posbility: 0.0025
Next Token :  k, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0005
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 0.0052
Next Token : 2, Posbility: 0.0067
Next Token : 3, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0003
Next Token :  ..., Posbility: 0.0003
Next Token :  ||, Posbility: 0.0005
Next Token :  &&, Posbility: 0.0022
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :  k, Posbility: 0.0013
Next Token :  ((, Posbility: 0.0017
Next Token : 
, Posbility: 0.0096
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0013
Next Token : (1,, Posbility: 0.0015
Next Token : (2,, Posbility: 0.0015
Next Token : paint, Posbility: 0.0028
Next Token : (, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  k, Posbility: 0.0003
Next Token : n, Posbility: 0.0012
Next Token : 2, Posbility: 0.0017
Next Token : k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1,, Posbility: 0.0001
Next Token :  *, Posbility: 0.0002
Next Token :  +, Posbility: 0.0017
Next Token : ,, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -2, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  10,, Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5,, Posbility: 0.0006
Next Token : 4,, Posbility: 0.0036
Next Token : 3,, Posbility: 0.0344
Next Token : 2,, Posbility: 0.4199
Next Token : 1,, Posbility: 0.5391
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0056
Next Token :  1), Posbility: 0.0056
Next Token :  2), Posbility: 0.0410
Next Token :  4), Posbility: 0.1113
Next Token :  3), Posbility: 0.8242
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0005
Next Token :  *, Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token :  else, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : ..., Posbility: 0.0125
Next Token : else, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0026
Next Token :  {, Posbility: 0.0030
Next Token :  k, Posbility: 0.0104
Next Token : 
, Posbility: 0.0410
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0022
Next Token : paint, Posbility: 0.0143
Next Token : let, Posbility: 0.0566
Next Token : (, Posbility: 0.1357
Next Token : if, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0110
Next Token :  k, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  k, Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  4, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : 5, Posbility: 0.0002
Next Token : 2, Posbility: 0.0036
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token :  ||, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0010
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  1, Posbility: 0.0005
Next Token :  ((, Posbility: 0.0012
Next Token : 
, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0007
Next Token : n, Posbility: 0.0008
Next Token : let, Posbility: 0.0008
Next Token : paint, Posbility: 0.0028
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : k, Posbility: 0.0004
Next Token : 3, Posbility: 0.0004
Next Token : 2, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : -1,, Posbility: 0.0001
Next Token :  +, Posbility: 0.0006
Next Token : ,, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -2, Posbility: 0.0000
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0002
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10,, Posbility: 0.0000
Next Token :  3), Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5,, Posbility: 0.0002
Next Token : 4,, Posbility: 0.0044
Next Token : 1,, Posbility: 0.0120
Next Token : 2,, Posbility: 0.1455
Next Token : 3,, Posbility: 0.8359
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0024
Next Token :  1), Posbility: 0.0024
Next Token :  4), Posbility: 0.0065
Next Token :  2), Posbility: 0.0177
Next Token :  3), Posbility: 0.9688
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0004
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0008
Next Token :  else, Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0001
Next Token : //, Posbility: 0.0003
Next Token : let, Posbility: 0.0003
Next Token : ..., Posbility: 0.0004
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0040
Next Token :  ((, Posbility: 0.0059
Next Token :  k, Posbility: 0.0096
Next Token : 
, Posbility: 0.0918
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0025
Next Token : paint, Posbility: 0.0164
Next Token : let, Posbility: 0.0938
Next Token : (, Posbility: 0.1758
Next Token : if, Posbility: 0.6953
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0003
Next Token :  k, Posbility: 0.0293
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0041
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0016
Next Token :  +, Posbility: 0.0021
Next Token :  >=, Posbility: 0.0035
Next Token :  , Posbility: 0.0227
Next Token :  =, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token :  0, Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  k, Posbility: 0.0025
Next Token :  4, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0002
Next Token :  ..., Posbility: 0.0003
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token :  k, Posbility: 0.0005
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (2,, Posbility: 0.0004
Next Token : paint, Posbility: 0.0005
Next Token : (1,, Posbility: 0.0005
Next Token : (0,, Posbility: 0.0007
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token : 2, Posbility: 0.0004
Next Token : n, Posbility: 0.0007
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0003
Next Token : ,, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -2, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5,, Posbility: 0.0001
Next Token : 4,, Posbility: 0.0005
Next Token : 3,, Posbility: 0.0007
Next Token : 2,, Posbility: 0.0474
Next Token : 1,, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0024
Next Token :  3), Posbility: 0.0066
Next Token :  2), Posbility: 0.0066
Next Token :  5), Posbility: 0.0066
Next Token :  4), Posbility: 0.9727
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  else, Posbility: 0.0006
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : else, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0022
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0018
Next Token :  fail, Posbility: 0.0030
Next Token :  k, Posbility: 0.0039
Next Token : 
, Posbility: 0.0325
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0014
Next Token : paint, Posbility: 0.0050
Next Token : let, Posbility: 0.0325
Next Token : (, Posbility: 0.1133
Next Token : if, Posbility: 0.8398
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0052
Next Token :  k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  k, Posbility: 0.0002
Next Token :  , Posbility: 0.0041
Next Token :  4, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0005
Next Token : 
, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0003
Next Token : (0,, Posbility: 0.0005
Next Token : n, Posbility: 0.0006
Next Token : paint, Posbility: 0.0012
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 4, Posbility: 0.0001
Next Token : 3, Posbility: 0.0002
Next Token : k, Posbility: 0.0002
Next Token : 2, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -4, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token : ,, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : -5,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  4, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5,, Posbility: 0.0004
Next Token : 1,, Posbility: 0.0005
Next Token : 3,, Posbility: 0.0019
Next Token : 2,, Posbility: 0.0109
Next Token : 4,, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token :  4, Posbility: 0.0009
Next Token :  2), Posbility: 0.0009
Next Token :  3), Posbility: 0.0067
Next Token :  4), Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  else, Posbility: 0.0004
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : let, Posbility: 0.0003
Next Token : ..., Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0033
Next Token :  k, Posbility: 0.0042
Next Token :  fail, Posbility: 0.0069
Next Token : 
, Posbility: 0.0654
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0047
Next Token : paint, Posbility: 0.0077
Next Token : let, Posbility: 0.0500
Next Token : (, Posbility: 0.1357
Next Token : if, Posbility: 0.7852
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  k, Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0025
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0006
Next Token :  +, Posbility: 0.0008
Next Token :  >=, Posbility: 0.0017
Next Token :  , Posbility: 0.0124
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  4, Posbility: 0.0003
Next Token :  0, Posbility: 0.0006
Next Token :  k, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : 7, Posbility: 0.0003
Next Token : 6, Posbility: 0.0005
Next Token : n, Posbility: 0.0019
Next Token : 5, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0001
Next Token :  ..., Posbility: 0.0001
Next Token :  &&, Posbility: 0.0002
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token : 
, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (2,, Posbility: 0.0002
Next Token : paint, Posbility: 0.0003
Next Token : (1,, Posbility: 0.0004
Next Token : (0,, Posbility: 0.0005
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0002
Next Token :  k, Posbility: 0.0002
Next Token : n, Posbility: 0.0004
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ,, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : −, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4,, Posbility: 0.0002
Next Token : 5,, Posbility: 0.0002
Next Token : 3,, Posbility: 0.0004
Next Token : 2,, Posbility: 0.0140
Next Token : 1,, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2), Posbility: 0.0005
Next Token :  3), Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  4), Posbility: 0.0025
Next Token :  5), Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : elif, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0013
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0013
Next Token :  k, Posbility: 0.0018
Next Token :  fail, Posbility: 0.0057
Next Token : 
, Posbility: 0.0255
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0015
Next Token : paint, Posbility: 0.0028
Next Token : let, Posbility: 0.0184
Next Token : (, Posbility: 0.0825
Next Token : if, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0041
Next Token :  k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  4, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0001
Next Token : 3, Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token : 6, Posbility: 0.0007
Next Token : 5, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0002
Next Token :  k, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token : 
, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token : n, Posbility: 0.0003
Next Token : (0,, Posbility: 0.0004
Next Token : paint, Posbility: 0.0005
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : k, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -5,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  5), Posbility: 0.0000
Next Token : 5,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6,, Posbility: 0.0002
Next Token : 2,, Posbility: 0.0002
Next Token : 3,, Posbility: 0.0006
Next Token : 4,, Posbility: 0.0009
Next Token : 5,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0003
Next Token :  3), Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :  4), Posbility: 0.0025
Next Token :  5), Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : else, Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : in, Posbility: 0.0002
Next Token : ..., Posbility: 0.0002
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0023
Next Token :  k, Posbility: 0.0029
Next Token :  fail, Posbility: 0.0090
Next Token : 
, Posbility: 0.0583
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0048
Next Token : paint, Posbility: 0.0061
Next Token : let, Posbility: 0.0454
Next Token : (, Posbility: 0.1235
Next Token : if, Posbility: 0.8047
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  k, Posbility: 0.0085
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0004
Next Token :  +, Posbility: 0.0005
Next Token :  >=, Posbility: 0.0012
Next Token :  , Posbility: 0.0085
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0002
Next Token :  10, Posbility: 0.0003
Next Token :  0, Posbility: 0.0004
Next Token :  k, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : 5, Posbility: 0.0002
Next Token : 7, Posbility: 0.0003
Next Token : n, Posbility: 0.0004
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  ..., Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (2,, Posbility: 0.0001
Next Token : paint, Posbility: 0.0002
Next Token : (1,, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token : n, Posbility: 0.0004
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ,, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4,, Posbility: 0.0001
Next Token : 6,, Posbility: 0.0002
Next Token : 3,, Posbility: 0.0002
Next Token : 2,, Posbility: 0.0085
Next Token : 1,, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  3), Posbility: 0.0009
Next Token :  k, Posbility: 0.0012
Next Token :  4), Posbility: 0.0012
Next Token :  5), Posbility: 0.0031
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9, Posbility: 0.0001
Next Token : n, Posbility: 0.0003
Next Token : 6)(, Posbility: 0.0005
Next Token : 7, Posbility: 0.0006
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :  k, Posbility: 0.0009
Next Token :  fail, Posbility: 0.0019
Next Token : 
, Posbility: 0.0096
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0009
Next Token : paint, Posbility: 0.0010
Next Token : let, Posbility: 0.0081
Next Token : (, Posbility: 0.0527
Next Token : if, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0022
Next Token :  k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  4, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 8, Posbility: 0.0001
Next Token : 5, Posbility: 0.0006
Next Token : 7, Posbility: 0.0009
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : paint, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : k, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 6,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3,, Posbility: 0.0001
Next Token : 7,, Posbility: 0.0001
Next Token : 5,, Posbility: 0.0002
Next Token : 4,, Posbility: 0.0003
Next Token : 6,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0005
Next Token : 6, Posbility: 0.0007
Next Token :  4), Posbility: 0.0012
Next Token :  5), Posbility: 0.0085
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6)(, Posbility: 0.0000
Next Token : 9, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : 7, Posbility: 0.0006
Next Token : 6, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : )., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : );, Posbility: 0.0002
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token : else, Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : //, Posbility: 0.0002
Next Token : ..., Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0020
Next Token :  k, Posbility: 0.0038
Next Token :  fail, Posbility: 0.0071
Next Token : 
, Posbility: 0.0464
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0030
Next Token : paint, Posbility: 0.0038
Next Token : let, Posbility: 0.0366
Next Token : (, Posbility: 0.1123
Next Token : if, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  k, Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token :  <=, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0008
Next Token :  , Posbility: 0.0067
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  10, Posbility: 0.0002
Next Token :  k, Posbility: 0.0006
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9, Posbility: 0.0001
Next Token : 6, Posbility: 0.0002
Next Token : 8, Posbility: 0.0003
Next Token : n, Posbility: 0.0004
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0001
Next Token :  ?, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (2,, Posbility: 0.0001
Next Token : paint, Posbility: 0.0001
Next Token : (1,, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : ,, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4,, Posbility: 0.0000
Next Token : 7,, Posbility: 0.0001
Next Token : 3,, Posbility: 0.0001
Next Token : 2,, Posbility: 0.0019
Next Token : 1,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token :  k, Posbility: 0.0003
Next Token :  8), Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7,, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : n, Posbility: 0.0002
Next Token : 6, Posbility: 0.0009
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token :  else, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0004
Next Token :  k, Posbility: 0.0007
Next Token :  fail, Posbility: 0.0022
Next Token : 
, Posbility: 0.0075
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0008
Next Token : paint, Posbility: 0.0008
Next Token : let, Posbility: 0.0063
Next Token : (, Posbility: 0.0593
Next Token : if, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  K, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0013
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 6, Posbility: 0.0002
Next Token : 8, Posbility: 0.0003
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : (0,, Posbility: 0.0001
Next Token : paint, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  -=, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -7,, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0,, Posbility: 0.0000
Next Token : 7,, Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 5,, Posbility: 0.0000
Next Token : 6,, Posbility: 0.0001
Next Token : 7,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  3), Posbility: 0.0001
Next Token :  5), Posbility: 0.0002
Next Token :  8), Posbility: 0.0002
Next Token : 7, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 7,, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 6, Posbility: 0.0010
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ),, Posbility: 0.0000
Next Token : )., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : );, Posbility: 0.0002
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  else, Posbility: 0.0002
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : else, Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  
 score:False
Error type: noerr
---------------------------
Next Token : ..., Posbility: 0.0001
Next Token : |, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : //, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0020
Next Token :  k, Posbility: 0.0038
Next Token :  fail, Posbility: 0.0081
Next Token : 
, Posbility: 0.0461
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0033
Next Token : paint, Posbility: 0.0049
Next Token : let, Posbility: 0.0359
Next Token : (, Posbility: 0.1250
Next Token : if, Posbility: 0.8164
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  k, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token :  <=, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0010
Next Token :  , Posbility: 0.0067
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  10, Posbility: 0.0003
Next Token :  k, Posbility: 0.0004
Next Token :  0, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token : 7, Posbility: 0.0002
Next Token : 9, Posbility: 0.0003
Next Token : 2, Posbility: 0.0003
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  k, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (2,, Posbility: 0.0001
Next Token : paint, Posbility: 0.0002
Next Token : (1,, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ,, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8,, Posbility: 0.0000
Next Token : 4,, Posbility: 0.0001
Next Token : 3,, Posbility: 0.0001
Next Token : 2,, Posbility: 0.0041
Next Token : 1,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0004
Next Token :  1), Posbility: 0.0005
Next Token :  k, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token :  8), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : else, Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0013
Next Token :  k, Posbility: 0.0017
Next Token : 
, Posbility: 0.0095
Next Token :  fail, Posbility: 0.0108
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0019
Next Token : raise, Posbility: 0.0025
Next Token : let, Posbility: 0.0126
Next Token : (, Posbility: 0.0933
Next Token : if, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0025
Next Token :  k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 7, Posbility: 0.0003
Next Token : 9, Posbility: 0.0006
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0003
Next Token : paint, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -=, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -8, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -8,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0,, Posbility: 0.0000
Next Token : 8,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token : 6,, Posbility: 0.0001
Next Token : 7,, Posbility: 0.0003
Next Token : 8,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0001
Next Token :  0), Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :  8), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  else, Posbility: 0.0002
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : else, Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : in, Posbility: 0.0002
Next Token : let, Posbility: 0.0007
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0023
Next Token :  error, Posbility: 0.0030
Next Token :  fail, Posbility: 0.0150
Next Token : 
, Posbility: 0.0361
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0050
Next Token : assert, Posbility: 0.0057
Next Token : let, Posbility: 0.0256
Next Token : (, Posbility: 0.1011
Next Token : if, Posbility: 0.8477
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  k, Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0013
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0002
Next Token :  <=, Posbility: 0.0003
Next Token :  >=, Posbility: 0.0006
Next Token :  , Posbility: 0.0052
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  k, Posbility: 0.0006
Next Token :  0, Posbility: 0.0007
Next Token :  10, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : 8, Posbility: 0.0001
Next Token : n, Posbility: 0.0012
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (1,, Posbility: 0.0002
Next Token : paint, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : n, Posbility: 0.0003
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ,, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4,, Posbility: 0.0001
Next Token : 9,, Posbility: 0.0001
Next Token : 3,, Posbility: 0.0001
Next Token : 2,, Posbility: 0.0019
Next Token : 1,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token :  8), Posbility: 0.0002
Next Token :  10), Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9,, Posbility: 0.0000
Next Token : 6, Posbility: 0.0000
Next Token : 7, Posbility: 0.0002
Next Token : n, Posbility: 0.0006
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)

 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0013
Next Token :  k, Posbility: 0.0015
Next Token :  fail, Posbility: 0.0065
Next Token : 
, Posbility: 0.0138
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0015
Next Token : assert, Posbility: 0.0017
Next Token : let, Posbility: 0.0098
Next Token : (, Posbility: 0.0938
Next Token : if, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0025
Next Token :  k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  10, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 7, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 8, Posbility: 0.0003
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token :  fail, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0002
Next Token : paint, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 9,, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : -9,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0,, Posbility: 0.0000
Next Token : 9,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6,, Posbility: 0.0000
Next Token : 9, Posbility: 0.0000
Next Token : 7,, Posbility: 0.0001
Next Token : 8,, Posbility: 0.0001
Next Token : 9,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9, Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token :  10), Posbility: 0.0006
Next Token :  8), Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 9,, Posbility: 0.0000
Next Token : 6, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : 7, Posbility: 0.0001
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0000
Next Token : )., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  else, Posbility: 0.0003
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0004
Next Token : in, Posbility: 0.0006
Next Token : |, Posbility: 0.0006
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0051
Next Token :  k, Posbility: 0.0066
Next Token :  fail, Posbility: 0.0228
Next Token : 
, Posbility: 0.0796
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0072
Next Token : raise, Posbility: 0.0081
Next Token : let, Posbility: 0.0601
Next Token : (, Posbility: 0.1631
Next Token : if, Posbility: 0.7305
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0002
Next Token :  not, Posbility: 0.0006
Next Token :  k, Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0028
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0006
Next Token :  <=, Posbility: 0.0007
Next Token :  >=, Posbility: 0.0017
Next Token :  , Posbility: 0.0124
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 10, Posbility: 0.0003
Next Token :  k, Posbility: 0.0005
Next Token :  , Posbility: 0.0025
Next Token :  0, Posbility: 0.0025
Next Token :  10, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  ?, Posbility: 0.0001
Next Token :  and, Posbility: 0.0002
Next Token :  &&, Posbility: 0.0006
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  k, Posbility: 0.0006
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (1,, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0005
Next Token : paint, Posbility: 0.0005
Next Token : (10,, Posbility: 0.0006
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token :  k, Posbility: 0.0002
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : ,, Posbility: 0.0013
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0,, Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  10,, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5,, Posbility: 0.0000
Next Token : 4,, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0001
Next Token : 2,, Posbility: 0.0067
Next Token : 1,, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 10, Posbility: 0.0004
Next Token :  10, Posbility: 0.0005
Next Token :  0), Posbility: 0.0009
Next Token :  , Posbility: 0.0012
Next Token :  10), Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0006
Next Token :  else, Posbility: 0.0006
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)

 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0010
Next Token :  k, Posbility: 0.0015
Next Token :  fail, Posbility: 0.0066
Next Token : 
, Posbility: 0.0096
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0020
Next Token : assert, Posbility: 0.0022
Next Token : let, Posbility: 0.0099
Next Token : (, Posbility: 0.0835
Next Token : if, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0015
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  11, Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :  10, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0002
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : paint, Posbility: 0.0003
Next Token : (10,, Posbility: 0.0003
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 10, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :  -=, Posbility: 0.0001
Next Token :  -10,, Posbility: 0.0001
Next Token : -10, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -10, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -10,, Posbility: 0.0000
Next Token : 10,, Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  10,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  11, Posbility: 0.0001
Next Token : 10, Posbility: 0.0002
Next Token :  10, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  10), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)

 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : end, Posbility: 0.0004
Next Token : else, Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0002
Next Token : //, Posbility: 0.0002
Next Token : in, Posbility: 0.0005
Next Token : let, Posbility: 0.0013
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0029
Next Token :  error, Posbility: 0.0042
Next Token :  fail, Posbility: 0.0187
Next Token : 
, Posbility: 0.0574
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0084
Next Token : raise, Posbility: 0.0084
Next Token : let, Posbility: 0.0293
Next Token : (, Posbility: 0.0796
Next Token : if, Posbility: 0.8555
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  k, Posbility: 0.0046
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0004
Next Token :  +, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0007
Next Token :  , Posbility: 0.0076
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0012
Next Token :  10, Posbility: 0.0012
Next Token :  20, Posbility: 0.0012
Next Token :  , Posbility: 0.0015
Next Token :  11, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (1,, Posbility: 0.0001
Next Token : (0,, Posbility: 0.0001
Next Token : (10,, Posbility: 0.0001
Next Token : paint, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 10, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token :  k, Posbility: 0.0002
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : ,, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  10,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4,, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0001
Next Token : 11,, Posbility: 0.0005
Next Token : 2,, Posbility: 0.0025
Next Token : 1,, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  20, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  10), Posbility: 0.0003
Next Token :  12, Posbility: 0.0004
Next Token :  11, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : L, Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  else, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0004
Next Token : 
, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0002
Next Token : assert, Posbility: 0.0003
Next Token : let, Posbility: 0.0013
Next Token : (, Posbility: 0.0293
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  12, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  10, Posbility: 0.0002
Next Token :  11, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0000
Next Token : (10,, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : paint, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 10, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  -=, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : -10, Posbility: 0.0000
Next Token : -11, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 11,, Posbility: 0.0000
Next Token :  11, Posbility: 0.0001
Next Token :  10,, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token : 1,, Posbility: 0.0000
Next Token : 9,, Posbility: 0.0000
Next Token : 11,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 11, Posbility: 0.0001
Next Token :  10), Posbility: 0.0001
Next Token :  11, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ),, Posbility: 0.0000
Next Token : )), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : );, Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : ..., Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0009
Next Token :  error, Posbility: 0.0010
Next Token :  fail, Posbility: 0.0035
Next Token : 
, Posbility: 0.0123
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0016
Next Token : assert, Posbility: 0.0023
Next Token : let, Posbility: 0.0056
Next Token : (, Posbility: 0.0527
Next Token : if, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  k, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  20, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  11, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  12, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (10,, Posbility: 0.0000
Next Token : paint, Posbility: 0.0000
Next Token : (1,, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 12,, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 11,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0008
Next Token : 1,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 12, Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token :  10), Posbility: 0.0001
Next Token :  11, Posbility: 0.0003
Next Token :  12, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token : L, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0002
Next Token :  k, Posbility: 0.0002
Next Token :  fail, Posbility: 0.0005
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0002
Next Token : assert, Posbility: 0.0005
Next Token : let, Posbility: 0.0010
Next Token : (, Posbility: 0.0203
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  11, Posbility: 0.0003
Next Token :  12, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (10,, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : paint, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  -=, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -10, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -12, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 12,, Posbility: 0.0000
Next Token :  12, Posbility: 0.0001
Next Token :  10,, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8,, Posbility: 0.0000
Next Token : 1,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0001
Next Token : 11,, Posbility: 0.0002
Next Token : 12,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 12, Posbility: 0.0001
Next Token :  10), Posbility: 0.0001
Next Token :  11, Posbility: 0.0004
Next Token :  12, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : L, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : )), Posbility: 0.0000
Next Token : );, Posbility: 0.0002
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0011
Next Token :  error, Posbility: 0.0016
Next Token :  fail, Posbility: 0.0074
Next Token : 
, Posbility: 0.0177
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : raise, Posbility: 0.0026
Next Token : assert, Posbility: 0.0033
Next Token : let, Posbility: 0.0080
Next Token : (, Posbility: 0.0588
Next Token : if, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  k, Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0005
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0002
Next Token :  , Posbility: 0.0025
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n =
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  14, Posbility: 0.0002
Next Token :  0, Posbility: 0.0006
Next Token :  13, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13
 score:False
Error type: noerr
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then 
 score:False
Error type: noerr
---------------------------
Next Token : (10,, Posbility: 0.0000
Next Token : (1,, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : paint, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k 
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k -
 score:False
Error type: noerr
---------------------------
Next Token :  1), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 
 score:False
Error type: noerr
---------------------------
Next Token : 13,, Posbility: 0.0000
Next Token : 11,, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0004
Next Token : 1,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1,
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  12, Posbility: 0.0000
Next Token :  14, Posbility: 0.0000
Next Token : 13, Posbility: 0.0001
Next Token :  13, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13
 score:False
Error type: noerr
---------------------------
Next Token : )), Posbility: 0.0000
Next Token : L, Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0002
Next Token : 
, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : raise, Posbility: 0.0001
Next Token : assert, Posbility: 0.0001
Next Token : let, Posbility: 0.0005
Next Token : (, Posbility: 0.0140
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if
 score:False
Error type: noerr
---------------------------
Next Token : k, Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k =
 score:False
Error type: noerr
---------------------------
Next Token :  12, Posbility: 0.0000
Next Token :  14, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 13, Posbility: 0.0000
Next Token :  13, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : paint, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n
 score:False
Error type: noerr
---------------------------
Next Token :  -=, Posbility: 0.0000
Next Token :  –, Posbility: 0.0000
Next Token :  -13, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n 
 score:False
Error type: noerr
---------------------------
Next Token : 13,, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n -
 score:False
Error type: noerr
---------------------------
Next Token :  -13, Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token : 13,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 
 score:False
Error type: noerr
---------------------------
Next Token : 14,, Posbility: 0.0000
Next Token : 12,, Posbility: 0.0000
Next Token : 1,, Posbility: 0.0000
Next Token : 11,, Posbility: 0.0000
Next Token : 13,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13,
 score:False
Error type: noerr
---------------------------
Next Token :  11, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  12, Posbility: 0.0000
Next Token : 13, Posbility: 0.0001
Next Token :  13, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13
 score:False
Error type: noerr
---------------------------
Next Token : ),, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : )), Posbility: 0.0000
Next Token : );, Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  error, Posbility: 0.0004
Next Token :  {, Posbility: 0.0005
Next Token :  fail, Posbility: 0.0017
Next Token : 
, Posbility: 0.0075
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : raise, Posbility: 0.0007
Next Token : assert, Posbility: 0.0010
Next Token : let, Posbility: 0.0024
Next Token : (, Posbility: 0.0292
Next Token : if, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  k, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n =
 score:False
Error type: noerr
---------------------------
Next Token :  13, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  15, Posbility: 0.0001
Next Token :  14, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14
 score:False
Error type: noerr
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then 
 score:False
Error type: noerr
---------------------------
Next Token : (2,, Posbility: 0.0000
Next Token : (1,, Posbility: 0.0000
Next Token : paint, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k 
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : -3,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k -
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 
 score:False
Error type: noerr
---------------------------
Next Token : 11,, Posbility: 0.0000
Next Token : 4,, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0002
Next Token : 1,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1,
 score:False
Error type: noerr
---------------------------
Next Token :  10), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token : 14, Posbility: 0.0001
Next Token :  14, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14
 score:False
Error type: noerr
---------------------------
Next Token : )), Posbility: 0.0000
Next Token : L, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0002
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : panic, Posbility: 0.0001
Next Token : assert, Posbility: 0.0002
Next Token : let, Posbility: 0.0004
Next Token : (, Posbility: 0.0140
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if
 score:False
Error type: noerr
---------------------------
Next Token : k, Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k =
 score:False
Error type: noerr
---------------------------
Next Token :  15, Posbility: 0.0000
Next Token : 14, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token :  14, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : paint, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (
 score:False
Error type: noerr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n
 score:False
Error type: noerr
---------------------------
Next Token :  –, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  -=, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n 
 score:False
Error type: noerr
---------------------------
Next Token : -14, Posbility: 0.0000
Next Token : 14,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n -
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 14,, Posbility: 0.0000
Next Token :  14, Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 
 score:False
Error type: noerr
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token : 1,, Posbility: 0.0000
Next Token : 12,, Posbility: 0.0000
Next Token : 13,, Posbility: 0.0000
Next Token : 14,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14,
 score:False
Error type: noerr
---------------------------
Next Token :  15, Posbility: 0.0000
Next Token :  13, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 14, Posbility: 0.0001
Next Token :  14, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14
 score:False
Error type: noerr
---------------------------
Next Token : ),, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : )), Posbility: 0.0000
Next Token : );, Posbility: 0.0001
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :  error, Posbility: 0.0009
Next Token :  fail, Posbility: 0.0024
Next Token : 
, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : raise, Posbility: 0.0011
Next Token : assert, Posbility: 0.0016
Next Token : let, Posbility: 0.0034
Next Token : (, Posbility: 0.0471
Next Token : if, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  k, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  14, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  15, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0002
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then 
 score:False
Error type: noerr
---------------------------
Next Token : (10,, Posbility: 0.0000
Next Token : paint, Posbility: 0.0000
Next Token : (1,, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  -1,, Posbility: 0.0000
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k 
 score:False
Error type: noerr
---------------------------
Next Token : -3,, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k -
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  10,, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 
 score:False
Error type: noerr
---------------------------
Next Token : 5,, Posbility: 0.0000
Next Token : 4,, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0003
Next Token : 1,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1,
 score:False
Error type: noerr
---------------------------
Next Token :  14, Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  16), Posbility: 0.0000
Next Token : 15, Posbility: 0.0001
Next Token :  15, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : L, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : );, Posbility: 0.0000
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else
 score:False
Error type: noerr
---------------------------
Next Token :  error, Posbility: 0.0002
Next Token :  k, Posbility: 0.0002
Next Token :  fail, Posbility: 0.0005
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else 
 score:False
Error type: noerr
---------------------------
Next Token : raise, Posbility: 0.0002
Next Token : assert, Posbility: 0.0004
Next Token : let, Posbility: 0.0011
Next Token : (, Posbility: 0.0330
Next Token : if, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  14, Posbility: 0.0000
Next Token : 15, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  15, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k = 15
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k = 15 then
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k = 15 then 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : paint, Posbility: 0.0000
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k = 15 then (
 score:False
Error type: noerr
---------------------------
Next Token : 15, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k = 15 then (n
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  –, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k = 15 then (n 
 score:False
Error type: noerr
---------------------------
Next Token : 15,, Posbility: 0.0000
Next Token : -15, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors. *)
let rec paint_fence n k =
  if n = 0 then (k, 0)
  else if k = 0 then (n, 0)
  else if n = 1 then (k, 1)
  else if k = 1 then (n - 1, 1)
  else if n = 2 then (k - 1, 2)
  else if k = 2 then (n - 2, 2)
  else if n = 3 then (k - 1, 3)
  else if k = 3 then (n - 3, 3)
  else if n = 4 then (k - 1, 4)
  else if k = 4 then (n - 4, 4)
  else if n = 5 then (k - 1, 5)
  else if k = 5 then (n - 5, 5)
  else if n = 6 then (k - 1, 6)
  else if k = 6 then (n - 6, 6)
  else if n = 7 then (k - 1, 7)
  else if k = 7 then (n - 7, 7)
  else if n = 8 then (k - 1, 8)
  else if k = 8 then (n - 8, 8)
  else if n = 9 then (k - 1, 9)
  else if k = 9 then (n - 9, 9)
  else if n = 10 then (k - 1, 10)
  else if k = 10 then (n - 10, 10)
  else if n = 11 then (k - 1, 11)
  else if k = 11 then (n - 11, 11)
  else if n = 12 then (k - 1, 12)
  else if k = 12 then (n - 12, 12)
  else if n = 13 then (k - 1, 13)
  else if k = 13 then (n - 13, 13)
  else if n = 14 then (k - 1, 14)
  else if k = 14 then (n - 14, 14)
  else if n = 15 then (k - 1, 15)
  else if k = 15 then (n -
 score:False
Error type: noerr
---------------------------


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>