code:
 (* Write a function to reverse each string in a given list of string values. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0159
Next Token :  list, Posbility: 0.0179
Next Token :  strings, Posbility: 0.0261
Next Token :  , Posbility: 0.4102
Next Token :  rec, Posbility: 0.4648
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0070
Next Token :  string, Posbility: 0.0148
Next Token :  list, Posbility: 0.0189
Next Token :  loop, Posbility: 0.0403
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0167
Next Token : map, Posbility: 0.0215
Next Token : r, Posbility: 0.0752
Next Token : rev, Posbility: 0.2617
Next Token : reverse, Posbility: 0.4316
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : d, Posbility: 0.0090
Next Token :  str, Posbility: 0.0090
Next Token :  =, Posbility: 0.0583
Next Token :  , Posbility: 0.1235
Next Token : _, Posbility: 0.7109
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0334
Next Token : each, Posbility: 0.0430
Next Token : string, Posbility: 0.1699
Next Token : strings, Posbility: 0.2480
Next Token : list, Posbility: 0.2480
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0294
Next Token :  l, Posbility: 0.0486
Next Token : _, Posbility: 0.1689
Next Token :  =, Posbility: 0.1689
Next Token :  , Posbility: 0.4609
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0835
Next Token : (, Posbility: 0.0947
Next Token : s, Posbility: 0.1768
Next Token : x, Posbility: 0.1768
Next Token : lst, Posbility: 0.2266
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0072
Next Token :  ~, Posbility: 0.0173
Next Token :  acc, Posbility: 0.0286
Next Token :  , Posbility: 0.0535
Next Token :  =, Posbility: 0.8359
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0026
Next Token :  function, Posbility: 0.0043
Next Token :  , Posbility: 0.0854
Next Token :  match, Posbility: 0.0854
Next Token : 
, Posbility: 0.8125
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0043
Next Token :    , Posbility: 0.0071
Next Token : 	, Posbility: 0.0092
Next Token :     , Posbility: 0.1426
Next Token :   , Posbility: 0.8242
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0054
Next Token : List, Posbility: 0.0515
Next Token : let, Posbility: 0.0850
Next Token : if, Posbility: 0.2031
Next Token : match, Posbility: 0.6289
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token :  [], Posbility: 0.0004
Next Token :  !, Posbility: 0.0015
Next Token :  String, Posbility: 0.0178
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0004
Next Token : L, Posbility: 0.0005
Next Token : (, Posbility: 0.0011
Next Token : List, Posbility: 0.0228
Next Token : lst, Posbility: 0.9727
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0005
Next Token : 
, Posbility: 0.0005
Next Token :  @, Posbility: 0.0005
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0019
Next Token :  , Posbility: 0.0031
Next Token :  [, Posbility: 0.0051
Next Token :  [], Posbility: 0.0200
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0004
Next Token :       , Posbility: 0.0012
Next Token :    , Posbility: 0.0012
Next Token :     , Posbility: 0.0598
Next Token :   , Posbility: 0.9375
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Nil, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : [, Posbility: 0.0137
Next Token : [], Posbility: 0.0255
Next Token : |, Posbility: 0.9609
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  null, Posbility: 0.0009
Next Token :  nil, Posbility: 0.0104
Next Token :  , Posbility: 0.0172
Next Token :  [, Posbility: 0.0283
Next Token :  [], Posbility: 0.9375
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0039
Next Token :  |, Posbility: 0.0039
Next Token :    , Posbility: 0.0051
Next Token :  =>, Posbility: 0.0065
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0001
Next Token : -, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0003
Next Token : ::, Posbility: 0.0012
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0012
Next Token :  None, Posbility: 0.0020
Next Token : 
, Posbility: 0.0069
Next Token :  , Posbility: 0.1787
Next Token :  [], Posbility: 0.8008
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0019
Next Token :   , Posbility: 0.0040
Next Token :  |, Posbility: 0.0051
Next Token :  , Posbility: 0.0107
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : |, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0044
Next Token :  l, Posbility: 0.0044
Next Token :  a, Posbility: 0.0092
Next Token :  [, Posbility: 0.1123
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0393
Next Token : _, Posbility: 0.0649
Next Token : h, Posbility: 0.0835
Next Token : hd, Posbility: 0.2559
Next Token : x, Posbility: 0.4238
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0013
Next Token : :, Posbility: 0.0128
Next Token : s, Posbility: 0.0270
Next Token : ::, Posbility: 0.2559
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : :, Posbility: 0.0013
Next Token : ->, Posbility: 0.0067
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0025
Next Token :  [], Posbility: 0.0028
Next Token :  l, Posbility: 0.0087
Next Token :  rest, Posbility: 0.0830
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : lst, Posbility: 0.0267
Next Token : tail, Posbility: 0.0344
Next Token : y, Posbility: 0.0344
Next Token : _, Posbility: 0.0640
Next Token : x, Posbility: 0.7812
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0007
Next Token :  , Posbility: 0.0011
Next Token : _, Posbility: 0.0024
Next Token : ', Posbility: 0.0109
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0008
Next Token :   , Posbility: 0.0013
Next Token :  =>, Posbility: 0.0031
Next Token :  when, Posbility: 0.0178
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : if, Posbility: 0.0003
Next Token : ::, Posbility: 0.0159
Next Token : ->, Posbility: 0.9844
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0027
Next Token :  1, Posbility: 0.0074
Next Token :  [, Posbility: 0.0332
Next Token : 
, Posbility: 0.0898
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0197
Next Token : (, Posbility: 0.0287
Next Token : rev, Posbility: 0.0287
Next Token : reverse, Posbility: 0.3086
Next Token : x, Posbility: 0.5742
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  ~, Posbility: 0.0017
Next Token : ::, Posbility: 0.0035
Next Token : s, Posbility: 0.3164
Next Token :  , Posbility: 0.6719
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : @@, Posbility: 0.0002
Next Token : ^, Posbility: 0.0059
Next Token : :, Posbility: 0.0067
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0013
Next Token : !, Posbility: 0.0039
Next Token :  !, Posbility: 0.0227
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : rev, Posbility: 0.0003
Next Token : (, Posbility: 0.0177
Next Token : x, Posbility: 0.0177
Next Token : reverse, Posbility: 0.9648
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : d, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0085
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_
 score:False
Error type: noerr
---------------------------
Next Token : string, Posbility: 0.0000
Next Token : rest, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  ~, Posbility: 0.0004
Next Token : (, Posbility: 0.0474
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list 
 score:False
Error type: noerr
---------------------------
Next Token : reverse, Posbility: 0.0000
Next Token : y, Posbility: 0.0002
Next Token : lst, Posbility: 0.0006
Next Token : (, Posbility: 0.0474
Next Token : x, Posbility: 0.9531
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list x
 score:False
Error type: noerr
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0020
Next Token : ), Posbility: 0.0089
Next Token :  , Posbility: 0.0089
Next Token : 

, Posbility: 0.4844
Next Token : 
, Posbility: 0.4844
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs

 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0187
Next Token : in, Posbility: 0.0542
Next Token : end, Posbility: 0.0615
Next Token :   , Posbility: 0.0840
Next Token : let, Posbility: 0.5156
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0162
Next Token :  strings, Posbility: 0.0162
Next Token :  main, Posbility: 0.0825
Next Token :  , Posbility: 0.1973
Next Token :  rec, Posbility: 0.6094
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0100
Next Token :  loop, Posbility: 0.0165
Next Token :  list, Posbility: 0.0187
Next Token :  rec, Posbility: 0.0211
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0219
Next Token : append, Posbility: 0.0219
Next Token : map, Posbility: 0.0361
Next Token : rev, Posbility: 0.1426
Next Token : reverse, Posbility: 0.4980
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : d, Posbility: 0.0042
Next Token :  a, Posbility: 0.0048
Next Token :  =, Posbility: 0.0146
Next Token :  , Posbility: 0.1387
Next Token : _, Posbility: 0.8008
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0248
Next Token : str, Posbility: 0.0361
Next Token : strings, Posbility: 0.1260
Next Token : string, Posbility: 0.2354
Next Token : list, Posbility: 0.3027
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0197
Next Token : 2, Posbility: 0.0603
Next Token :  , Posbility: 0.0684
Next Token : ', Posbility: 0.1445
Next Token : _, Posbility: 0.6484
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : string, Posbility: 0.0540
Next Token : aux, Posbility: 0.0540
Next Token : helper, Posbility: 0.0610
Next Token : rec, Posbility: 0.0889
Next Token : iter, Posbility: 0.0889
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0114
Next Token :  i, Posbility: 0.0187
Next Token : ative, Posbility: 0.0349
Next Token :  =, Posbility: 0.0654
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0019
Next Token : s, Posbility: 0.0035
Next Token : (, Posbility: 0.0074
Next Token : x, Posbility: 0.0107
Next Token : lst, Posbility: 0.9609
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0019
Next Token :  in, Posbility: 0.0021
Next Token :  acc, Posbility: 0.0045
Next Token :  , Posbility: 0.0074
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0006
Next Token :  list, Posbility: 0.0011
Next Token :  match, Posbility: 0.0044
Next Token :  , Posbility: 0.0415
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :    , Posbility: 0.0017
Next Token : let, Posbility: 0.0028
Next Token :     , Posbility: 0.0075
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0071
Next Token : for, Posbility: 0.0071
Next Token : List, Posbility: 0.0674
Next Token : let, Posbility: 0.1426
Next Token : match, Posbility: 0.7227
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  !, Posbility: 0.0003
Next Token :  iter, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Iterator, Posbility: 0.0000
Next Token : Iterable, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : List, Posbility: 0.0010
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  nil, Posbility: 0.0009
Next Token :  [, Posbility: 0.0015
Next Token :  , Posbility: 0.0067
Next Token :  [], Posbility: 0.9883
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0004
Next Token :  as, Posbility: 0.0005
Next Token :  |, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0002
Next Token :  list, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 0.0109
Next Token :  [], Posbility: 0.9844
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  as, Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :  |, Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0009
Next Token :  i, Posbility: 0.0010
Next Token :  [], Posbility: 0.0024
Next Token :  [, Posbility: 0.0096
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0050
Next Token : hd, Posbility: 0.0050
Next Token : (, Posbility: 0.0057
Next Token : _, Posbility: 0.0106
Next Token : x, Posbility: 0.9570
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0003
Next Token : :, Posbility: 0.0007
Next Token : ::, Posbility: 0.0052
Next Token : s, Posbility: 0.0066
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : <, Posbility: 0.0001
Next Token : :, Posbility: 0.0017
Next Token : ->, Posbility: 0.0028
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  [], Posbility: 0.0007
Next Token :  rest, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0005
Next Token : lst, Posbility: 0.0013
Next Token : y, Posbility: 0.0015
Next Token : _, Posbility: 0.0109
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : ,, Posbility: 0.0005
Next Token :  =>, Posbility: 0.0008
Next Token :  when, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : ::, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0076
Next Token :  match, Posbility: 0.0098
Next Token :  {, Posbility: 0.0098
Next Token : 
, Posbility: 0.1738
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0154
Next Token : (, Posbility: 0.0327
Next Token : List, Posbility: 0.0474
Next Token : reverse, Posbility: 0.0781
Next Token : x, Posbility: 0.7422
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0012
Next Token : 
, Posbility: 0.0016
Next Token : ::, Posbility: 0.0023
Next Token : s, Posbility: 0.0669
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : <, Posbility: 0.0004
Next Token : @@, Posbility: 0.0008
Next Token : :, Posbility: 0.0085
Next Token : ^, Posbility: 0.0109
Next Token : ::, Posbility: 0.9805
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0023
Next Token :  iter, Posbility: 0.0131
Next Token : !, Posbility: 0.0167
Next Token :  !, Posbility: 0.0354
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0061
Next Token : List, Posbility: 0.0101
Next Token : (, Posbility: 0.0167
Next Token : x, Posbility: 0.0454
Next Token : reverse, Posbility: 0.9102
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse
 score:False
Error type: noerr
---------------------------
Next Token : d, Posbility: 0.0000
Next Token :  list, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_
 score:False
Error type: noerr
---------------------------
Next Token : lists, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : iter, Posbility: 0.0002
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token :  iter, Posbility: 0.0007
Next Token : (, Posbility: 0.0007
Next Token :  , Posbility: 0.0292
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : inter, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : rec, Posbility: 0.0003
Next Token : iter, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list_iter
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0010
Next Token : (, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list_iter 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : reverse, Posbility: 0.0002
Next Token : lst, Posbility: 0.0006
Next Token : (, Posbility: 0.0059
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list_iter x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list_iter xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0027
Next Token :  in, Posbility: 0.0034
Next Token :  , Posbility: 0.0093
Next Token : 
, Posbility: 0.3105
Next Token : 

, Posbility: 0.6562
---------------------------
code:
 (* Write a function to reverse each string in a given list of string values. *)
let rec reverse_list lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list xs
let rec reverse_list_iter lst =
  match lst with
  | [] -> []
  | x :: xs -> x :: reverse_list_iter xs


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :41.05697751045227

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>