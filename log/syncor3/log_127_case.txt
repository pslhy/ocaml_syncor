code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  make, Posbility: 0.0060
Next Token :  before, Posbility: 0.0266
Next Token :  list, Posbility: 0.0498
Next Token :  , Posbility: 0.3672
Next Token :  rec, Posbility: 0.4727
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0120
Next Token :  make, Posbility: 0.0135
Next Token :  loop, Posbility: 0.0325
Next Token :  list, Posbility: 0.0369
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : insertion, Posbility: 0.0267
Next Token : append, Posbility: 0.0388
Next Token : prepend, Posbility: 0.0500
Next Token : add, Posbility: 0.0933
Next Token : insert, Posbility: 0.6094
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0068
Next Token : Before, Posbility: 0.0113
Next Token :  =, Posbility: 0.0239
Next Token :  , Posbility: 0.1069
Next Token : _, Posbility: 0.7891
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : after, Posbility: 0.0342
Next Token : list, Posbility: 0.0386
Next Token : element, Posbility: 0.0562
Next Token : at, Posbility: 0.1191
Next Token : before, Posbility: 0.5312
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0123
Next Token :  l, Posbility: 0.0334
Next Token :  =, Posbility: 0.1494
Next Token :  , Posbility: 0.3164
Next Token : _, Posbility: 0.4062
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : element, Posbility: 0.0310
Next Token : helper, Posbility: 0.0510
Next Token : list, Posbility: 0.2021
Next Token : all, Posbility: 0.2021
Next Token : each, Posbility: 0.2021
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0188
Next Token :  element, Posbility: 0.0398
Next Token :  =, Posbility: 0.0845
Next Token :  , Posbility: 0.3789
Next Token : _, Posbility: 0.3789
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : item, Posbility: 0.0383
Next Token : list, Posbility: 0.0432
Next Token : elem, Posbility: 0.0918
Next Token : elt, Posbility: 0.1040
Next Token : element, Posbility: 0.5273
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0233
Next Token :  l, Posbility: 0.0493
Next Token :  =, Posbility: 0.0923
Next Token : _, Posbility: 0.1045
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elem, Posbility: 0.0332
Next Token : :, Posbility: 0.0376
Next Token : (, Posbility: 0.0703
Next Token : x, Posbility: 0.2158
Next Token : lst, Posbility: 0.3145
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0176
Next Token :  element, Posbility: 0.0542
Next Token :  =, Posbility: 0.0615
Next Token :  el, Posbility: 0.1147
Next Token :  , Posbility: 0.6602
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elm, Posbility: 0.0234
Next Token : elt, Posbility: 0.1963
Next Token : elem, Posbility: 0.1963
Next Token : x, Posbility: 0.2227
Next Token : e, Posbility: 0.2520
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0033
Next Token :  new, Posbility: 0.0043
Next Token : 
, Posbility: 0.0062
Next Token :  , Posbility: 0.0315
Next Token :  =, Posbility: 0.9219
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0027
Next Token : 

, Posbility: 0.0035
Next Token :  match, Posbility: 0.0481
Next Token :  , Posbility: 0.0796
Next Token : 
, Posbility: 0.8555
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0062
Next Token :    , Posbility: 0.0102
Next Token : 	, Posbility: 0.0148
Next Token :     , Posbility: 0.1406
Next Token :   , Posbility: 0.8086
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0048
Next Token : List, Posbility: 0.0664
Next Token : let, Posbility: 0.0664
Next Token : if, Posbility: 0.2041
Next Token : match, Posbility: 0.6289
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  [, Posbility: 0.0015
Next Token :  !, Posbility: 0.0027
Next Token :  String, Posbility: 0.0075
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : L, Posbility: 0.0005
Next Token : (, Posbility: 0.0024
Next Token : e, Posbility: 0.0065
Next Token : List, Posbility: 0.0177
Next Token : lst, Posbility: 0.9688
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : ., Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : ,, Posbility: 0.0009
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0035
Next Token :  , Posbility: 0.0051
Next Token :  [, Posbility: 0.0057
Next Token :  [], Posbility: 0.0156
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :       , Posbility: 0.0018
Next Token :    , Posbility: 0.0020
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : [, Posbility: 0.0095
Next Token : [], Posbility: 0.0157
Next Token : |, Posbility: 0.9727
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  null, Posbility: 0.0018
Next Token :  nil, Posbility: 0.0104
Next Token :  , Posbility: 0.0221
Next Token :  [, Posbility: 0.0221
Next Token :  [], Posbility: 0.9375
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0038
Next Token :    , Posbility: 0.0063
Next Token :  |, Posbility: 0.0104
Next Token :  =>, Posbility: 0.0134
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0001
Next Token : -, Posbility: 0.0003
Next Token : →, Posbility: 0.0003
Next Token : ::, Posbility: 0.0008
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0020
Next Token : 
, Posbility: 0.0242
Next Token :  , Posbility: 0.1777
Next Token :  [, Posbility: 0.2930
Next Token :  [], Posbility: 0.4844
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0014
Next Token :   , Posbility: 0.0027
Next Token :  , Posbility: 0.0154
Next Token :  |, Posbility: 0.0175
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0069
Next Token :  [], Posbility: 0.0069
Next Token :  el, Posbility: 0.0069
Next Token :  [, Posbility: 0.1387
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0649
Next Token : e, Posbility: 0.0732
Next Token : hd, Posbility: 0.0942
Next Token : _, Posbility: 0.1069
Next Token : x, Posbility: 0.4785
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0020
Next Token : :, Posbility: 0.0117
Next Token : s, Posbility: 0.0408
Next Token : ::, Posbility: 0.3008
Next Token :  , Posbility: 0.6367
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : if, Posbility: 0.0005
Next Token : :, Posbility: 0.0012
Next Token : ->, Posbility: 0.0110
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0033
Next Token :  [], Posbility: 0.0061
Next Token :  l, Posbility: 0.0145
Next Token :  rest, Posbility: 0.0649
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0188
Next Token : lst, Posbility: 0.0310
Next Token : y, Posbility: 0.0398
Next Token : _, Posbility: 0.0452
Next Token : x, Posbility: 0.8008
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.0024
Next Token : ', Posbility: 0.0139
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token :  @, Posbility: 0.0013
Next Token :  =>, Posbility: 0.0027
Next Token :  when, Posbility: 0.0369
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : if, Posbility: 0.0017
Next Token : ::, Posbility: 0.0159
Next Token : ->, Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0022
Next Token :   , Posbility: 0.0037
Next Token :  [, Posbility: 0.1226
Next Token : 
, Posbility: 0.1572
Next Token :  , Posbility: 0.7031
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0330
Next Token : let, Posbility: 0.0330
Next Token : (, Posbility: 0.0544
Next Token : e, Posbility: 0.1484
Next Token : x, Posbility: 0.6641
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0011
Next Token :  |, Posbility: 0.0011
Next Token : ::, Posbility: 0.0135
Next Token : s, Posbility: 0.0325
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : @@, Posbility: 0.0001
Next Token : <, Posbility: 0.0004
Next Token : ^, Posbility: 0.0012
Next Token : :, Posbility: 0.0032
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  ((, Posbility: 0.0007
Next Token : 
, Posbility: 0.0019
Next Token :  [, Posbility: 0.0036
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0019
Next Token : e, Posbility: 0.0374
Next Token : (, Posbility: 0.1016
Next Token : x, Posbility: 0.1016
Next Token : insert, Posbility: 0.7500
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : first, Posbility: 0.0000
Next Token : between, Posbility: 0.0000
Next Token : after, Posbility: 0.0002
Next Token : before, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  each, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : e, Posbility: 0.0000
Next Token : every, Posbility: 0.0000
Next Token : element, Posbility: 0.0001
Next Token : each, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  element, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : elements, Posbility: 0.0000
Next Token : e, Posbility: 0.0000
Next Token : elem, Posbility: 0.0000
Next Token : element, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0007
Next Token : _, Posbility: 0.0014
Next Token :  ~, Posbility: 0.0014
Next Token : (, Posbility: 0.0292
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : e, Posbility: 0.0023
Next Token : lst, Posbility: 0.0063
Next Token : (, Posbility: 0.0469
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element x
 score:False
Error type: noerr
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0004
Next Token :  [, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : lst, Posbility: 0.0002
Next Token : x, Posbility: 0.0012
Next Token : (, Posbility: 0.0110
Next Token : e, Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0081
Next Token : ), Posbility: 0.0221
Next Token :  , Posbility: 0.0364
Next Token : 

, Posbility: 0.3457
Next Token : 
, Posbility: 0.5703
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e

 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0177
Next Token : ;, Posbility: 0.0177
Next Token :   , Posbility: 0.0427
Next Token : end, Posbility: 0.0850
Next Token : let, Posbility: 0.4590
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0140
Next Token :  list, Posbility: 0.0381
Next Token :  main, Posbility: 0.0432
Next Token :  , Posbility: 0.1514
Next Token :  rec, Posbility: 0.6758
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0139
Next Token :  remove, Posbility: 0.0179
Next Token :  rec, Posbility: 0.0229
Next Token :  list, Posbility: 0.0260
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : insertion, Posbility: 0.0095
Next Token : f, Posbility: 0.0108
Next Token : add, Posbility: 0.0139
Next Token : append, Posbility: 0.0259
Next Token : insert, Posbility: 0.7578
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : s, Posbility: 0.0010
Next Token :  , Posbility: 0.0075
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : at, Posbility: 0.0330
Next Token : first, Posbility: 0.0330
Next Token : element, Posbility: 0.0330
Next Token : after, Posbility: 0.0894
Next Token : before, Posbility: 0.6602
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  =, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token :  , Posbility: 0.0292
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0204
Next Token : first, Posbility: 0.0334
Next Token : all, Posbility: 0.0554
Next Token : element, Posbility: 0.0554
Next Token : each, Posbility: 0.6758
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token :  element, Posbility: 0.0011
Next Token :  =, Posbility: 0.0016
Next Token :  , Posbility: 0.0371
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : item, Posbility: 0.0046
Next Token : pair, Posbility: 0.0052
Next Token : index, Posbility: 0.0059
Next Token : list, Posbility: 0.0299
Next Token : element, Posbility: 0.8750
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0094
Next Token : 2, Posbility: 0.0371
Next Token :  , Posbility: 0.0540
Next Token : ', Posbility: 0.1143
Next Token : _, Posbility: 0.7461
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : iter, Posbility: 0.0391
Next Token : helper, Posbility: 0.0503
Next Token : opt, Posbility: 0.0645
Next Token : rec, Posbility: 0.0938
Next Token : list, Posbility: 0.1206
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0148
Next Token :  list, Posbility: 0.0189
Next Token :  =, Posbility: 0.0354
Next Token : _, Posbility: 0.0850
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0028
Next Token : (, Posbility: 0.0126
Next Token : x, Posbility: 0.0267
Next Token : e, Posbility: 0.0439
Next Token : lst, Posbility: 0.8828
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0061
Next Token : s, Posbility: 0.0079
Next Token :  list, Posbility: 0.0079
Next Token :  =, Posbility: 0.0452
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : es, Posbility: 0.0024
Next Token : elem, Posbility: 0.0031
Next Token : x, Posbility: 0.0106
Next Token : lst, Posbility: 0.0106
Next Token : e, Posbility: 0.9570
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0037
Next Token :  l, Posbility: 0.0048
Next Token :  list, Posbility: 0.0167
Next Token :  , Posbility: 0.0400
Next Token :  =, Posbility: 0.9141
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0010
Next Token :  list, Posbility: 0.0012
Next Token :  match, Posbility: 0.0041
Next Token :  , Posbility: 0.1055
Next Token : 
, Posbility: 0.8828
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0004
Next Token :    , Posbility: 0.0013
Next Token : let, Posbility: 0.0013
Next Token :     , Posbility: 0.0067
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0361
Next Token : List, Posbility: 0.0464
Next Token : insert, Posbility: 0.0464
Next Token : let, Posbility: 0.0981
Next Token : match, Posbility: 0.7266
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  list, Posbility: 0.0003
Next Token :  [, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 0.0003
Next Token : insert, Posbility: 0.0003
Next Token : e, Posbility: 0.0067
Next Token : lst, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : ., Posbility: 0.0003
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  [], Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : {, Posbility: 0.0000
Next Token : |[, Posbility: 0.0000
Next Token : [, Posbility: 0.0001
Next Token : case, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0009
Next Token :  l, Posbility: 0.0014
Next Token :  [, Posbility: 0.0104
Next Token :  , Posbility: 0.0466
Next Token :  [], Posbility: 0.9375
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  =>, Posbility: 0.0005
Next Token :  as, Posbility: 0.0009
Next Token :  |, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 0.0002
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [[, Posbility: 0.0009
Next Token : 
, Posbility: 0.0023
Next Token :  [, Posbility: 0.0171
Next Token :  , Posbility: 0.0464
Next Token :  [], Posbility: 0.9297
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  as, Posbility: 0.0003
Next Token :  |, Posbility: 0.0003
Next Token :  , Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0014
Next Token :  l, Posbility: 0.0014
Next Token :  [], Posbility: 0.0135
Next Token :  [, Posbility: 0.0286
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0069
Next Token : head, Posbility: 0.0078
Next Token : e, Posbility: 0.0187
Next Token : _, Posbility: 0.0349
Next Token : x, Posbility: 0.8984
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0005
Next Token : 1, Posbility: 0.0006
Next Token : ::, Posbility: 0.0175
Next Token : s, Posbility: 0.0225
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : :, Posbility: 0.0012
Next Token : ->, Posbility: 0.0052
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  rest, Posbility: 0.0008
Next Token :  l, Posbility: 0.0010
Next Token :  [, Posbility: 0.0017
Next Token :  [], Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : e, Posbility: 0.0014
Next Token : y, Posbility: 0.0039
Next Token : lst, Posbility: 0.0051
Next Token : _, Posbility: 0.0177
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0004
Next Token :  |, Posbility: 0.0004
Next Token : 1, Posbility: 0.0004
Next Token :  when, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : if, Posbility: 0.0006
Next Token : ::, Posbility: 0.0013
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  {, Posbility: 0.0014
Next Token : 
, Posbility: 0.0282
Next Token :  [, Posbility: 0.0282
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0042
Next Token : (, Posbility: 0.0312
Next Token : e, Posbility: 0.0854
Next Token : insert, Posbility: 0.2314
Next Token : x, Posbility: 0.6289
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token : ::, Posbility: 0.0027
Next Token : s, Posbility: 0.0178
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : <, Posbility: 0.0001
Next Token : @@, Posbility: 0.0002
Next Token : ^, Posbility: 0.0009
Next Token : :, Posbility: 0.0041
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0003
Next Token :  !, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0024
Next Token : e, Posbility: 0.0066
Next Token : (, Posbility: 0.0066
Next Token : x, Posbility: 0.0066
Next Token : insert, Posbility: 0.9766
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ed, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_
 score:False
Error type: noerr
---------------------------
Next Token : be, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : between, Posbility: 0.0000
Next Token : after, Posbility: 0.0003
Next Token : before, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  each, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_
 score:False
Error type: noerr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token :  each, Posbility: 0.0000
Next Token : element, Posbility: 0.0000
Next Token : every, Posbility: 0.0000
Next Token : each, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  element, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_
 score:False
Error type: noerr
---------------------------
Next Token : elem, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : elements, Posbility: 0.0000
Next Token : each, Posbility: 0.0003
Next Token : element, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  list, Posbility: 0.0003
Next Token :  , Posbility: 0.0374
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_list
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_list 
 score:False
Error type: noerr
---------------------------
Next Token : insert, Posbility: 0.0003
Next Token : lst, Posbility: 0.0009
Next Token : e, Posbility: 0.0025
Next Token : (, Posbility: 0.0067
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_list x
 score:False
Error type: noerr
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_list xs
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token :  [, Posbility: 0.0012
Next Token : 

, Posbility: 0.0040
Next Token : 
, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_list xs 
 score:False
Error type: noerr
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : lst, Posbility: 0.0001
Next Token : (, Posbility: 0.0041
Next Token : e, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_list xs e
 score:False
Error type: noerr
---------------------------
Next Token : , Posbility: 0.0022
Next Token : ), Posbility: 0.0047
Next Token :  , Posbility: 0.0078
Next Token : 
, Posbility: 0.4258
Next Token : 

, Posbility: 0.5469
---------------------------
code:
 (* Write a function that takes in a list and an element and inserts the element before each element in the list, and returns the resulting list. *)
let rec insert_before_each_element lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element xs e
let rec insert_before_each_element_list lst e =
  match lst with
  | [] -> []
  | x :: xs -> x :: insert_before_each_element_list xs e


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :51.149348735809326

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>