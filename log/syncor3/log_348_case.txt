code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  base, Posbility: 0.0210
Next Token :  power, Posbility: 0.0238
Next Token :  sum, Posbility: 0.1069
Next Token :  , Posbility: 0.1992
Next Token :  rec, Posbility: 0.5430
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fact, Posbility: 0.0199
Next Token :  loop, Posbility: 0.0420
Next Token :  power, Posbility: 0.0613
Next Token :  sum, Posbility: 0.2422
Next Token :  , Posbility: 0.3984
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fi, Posbility: 0.0435
Next Token : helper, Posbility: 0.0435
Next Token : add, Posbility: 0.1182
Next Token : digit, Posbility: 0.1514
Next Token : digits, Posbility: 0.3633
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0115
Next Token : (, Posbility: 0.0148
Next Token :  , Posbility: 0.2305
Next Token :  =, Posbility: 0.2969
Next Token : _, Posbility: 0.3809
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0203
Next Token : up, Posbility: 0.0430
Next Token : to, Posbility: 0.0801
Next Token : of, Posbility: 0.2178
Next Token : sum, Posbility: 0.5234
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0315
Next Token :  base, Posbility: 0.0405
Next Token : _, Posbility: 0.1416
Next Token :  =, Posbility: 0.2324
Next Token :  , Posbility: 0.3848
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0391
Next Token : :, Posbility: 0.0442
Next Token : n, Posbility: 0.1543
Next Token : (, Posbility: 0.1982
Next Token : b, Posbility: 0.4199
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0154
Next Token :  exp, Posbility: 0.0175
Next Token :  k, Posbility: 0.0287
Next Token :  =, Posbility: 0.1001
Next Token :  , Posbility: 0.7383
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0062
Next Token : e, Posbility: 0.0062
Next Token : m, Posbility: 0.0062
Next Token : n, Posbility: 0.0277
Next Token : p, Posbility: 0.9180
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0026
Next Token :  a, Posbility: 0.0030
Next Token :  i, Posbility: 0.0034
Next Token :  , Posbility: 0.0322
Next Token :  =, Posbility: 0.9414
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0026
Next Token :  function, Posbility: 0.0056
Next Token :  match, Posbility: 0.0466
Next Token :  , Posbility: 0.1118
Next Token : 
, Posbility: 0.8242
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0062
Next Token :    , Posbility: 0.0080
Next Token : 	, Posbility: 0.0132
Next Token :     , Posbility: 0.1416
Next Token :   , Posbility: 0.8164
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0044
Next Token : (, Posbility: 0.0105
Next Token : let, Posbility: 0.0776
Next Token : match, Posbility: 0.3066
Next Token : if, Posbility: 0.5742
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0009
Next Token : (, Posbility: 0.0012
Next Token :  int, Posbility: 0.0012
Next Token :  not, Posbility: 0.0019
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0003
Next Token : Int, Posbility: 0.0013
Next Token : (, Posbility: 0.0270
Next Token : b, Posbility: 0.0732
Next Token : p, Posbility: 0.8945
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0047
Next Token :  ==, Posbility: 0.0952
Next Token :  , Posbility: 0.0952
Next Token :  <=, Posbility: 0.0952
Next Token :  =, Posbility: 0.7031
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0003
Next Token :  -1, Posbility: 0.0003
Next Token :  , Posbility: 0.0023
Next Token :  1, Posbility: 0.0471
Next Token :  0, Posbility: 0.9492
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token :  ||, Posbility: 0.0024
Next Token : 
, Posbility: 0.0109
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  base, Posbility: 0.0069
Next Token :  1, Posbility: 0.0659
Next Token :  0, Posbility: 0.1396
Next Token : 
, Posbility: 0.3789
Next Token :  , Posbility: 0.3789
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0219
Next Token : List, Posbility: 0.0361
Next Token : (, Posbility: 0.0464
Next Token : 
, Posbility: 0.0525
Next Token : b, Posbility: 0.7266
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0052
Next Token :  *, Posbility: 0.0109
Next Token :  , Posbility: 0.0204
Next Token :  else, Posbility: 0.4629
Next Token : 
, Posbility: 0.4629
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0007
Next Token :  , Posbility: 0.0012
Next Token :     , Posbility: 0.0025
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0002
Next Token : elif, Posbility: 0.0003
Next Token : then, Posbility: 0.0007
Next Token : let, Posbility: 0.0012
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token :  match, Posbility: 0.0035
Next Token :  {, Posbility: 0.0084
Next Token : 
, Posbility: 0.2168
Next Token :  , Posbility: 0.7539
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0815
Next Token : (, Posbility: 0.1050
Next Token : if, Posbility: 0.1523
Next Token : b, Posbility: 0.1729
Next Token : digits, Posbility: 0.3672
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits
 score:False
Error type: noerr
---------------------------
Next Token :  sum, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  (*, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : of, Posbility: 0.0000
Next Token : prod, Posbility: 0.0000
Next Token : add, Posbility: 0.0001
Next Token : sum, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0101
Next Token :  (*, Posbility: 0.0101
Next Token : (, Posbility: 0.0275
Next Token :  ((, Posbility: 0.0275
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum 
 score:False
Error type: noerr
---------------------------
Next Token : p, Posbility: 0.0009
Next Token : digits, Posbility: 0.0030
Next Token : 
, Posbility: 0.0044
Next Token : b, Posbility: 0.0327
Next Token : (, Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : int, Posbility: 0.0282
Next Token : string, Posbility: 0.0674
Next Token : String, Posbility: 0.0981
Next Token : List, Posbility: 0.0981
Next Token : b, Posbility: 0.3438
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0148
Next Token :  , Posbility: 0.0586
Next Token : *, Posbility: 0.0752
Next Token :  +, Posbility: 0.2617
Next Token :  *, Posbility: 0.5547
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 10, Posbility: 0.0015
Next Token :  base, Posbility: 0.0067
Next Token :  , Posbility: 0.2236
Next Token :  10, Posbility: 0.2871
Next Token :  10), Posbility: 0.4727
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0047
Next Token :  ((, Posbility: 0.0068
Next Token :  %, Posbility: 0.0068
Next Token :  +, Posbility: 0.0737
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10) 
 score:False
Error type: noerr
---------------------------
Next Token : Dec, Posbility: 0.0001
Next Token : dec, Posbility: 0.0002
Next Token : (--, Posbility: 0.0004
Next Token : p, Posbility: 0.0330
Next Token : (, Posbility: 0.9648
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10) (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : Dec, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : dec, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10) (p
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1, Posbility: 0.0016
Next Token :  –, Posbility: 0.0030
Next Token :  -1), Posbility: 0.0039
Next Token : -1), Posbility: 0.0369
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10) (p 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : /, Posbility: 0.0002
Next Token : −, Posbility: 0.0012
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10) (p -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  2), Posbility: 0.0003
Next Token :  1, Posbility: 0.0015
Next Token :  1);, Posbility: 0.0179
Next Token :  1), Posbility: 0.9805
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10) (p - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  ++, Posbility: 0.0168
Next Token :  , Posbility: 0.0245
Next Token :  +, Posbility: 0.0669
Next Token : 
, Posbility: 0.2324
Next Token : 

, Posbility: 0.6328
---------------------------
code:
 (* Write a function that takes base and power as arguments and calculate the sum of all digits of the base to the specified power. *)
let rec digits_sum b p =
  if p = 0 then b
  else digits_sum (b * 10) (p - 1)


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :17.77683711051941

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>