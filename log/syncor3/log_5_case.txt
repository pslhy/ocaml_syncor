code:
 (* Write a function to find squares of individual elements in a list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0154
Next Token :  list, Posbility: 0.0225
Next Token :  find, Posbility: 0.0474
Next Token :  , Posbility: 0.3105
Next Token :  rec, Posbility: 0.5117
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0204
Next Token :  is, Posbility: 0.0231
Next Token :  loop, Posbility: 0.0381
Next Token :  find, Posbility: 0.1328
Next Token :  , Posbility: 0.5977
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0171
Next Token : map, Posbility: 0.0220
Next Token : f, Posbility: 0.0249
Next Token : sq, Posbility: 0.1836
Next Token : square, Posbility: 0.5664
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0044
Next Token :  =, Posbility: 0.0197
Next Token :  , Posbility: 0.0532
Next Token : _, Posbility: 0.2393
Next Token : s, Posbility: 0.6484
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0111
Next Token :  a, Posbility: 0.0111
Next Token : _, Posbility: 0.2236
Next Token :  , Posbility: 0.2871
Next Token :  =, Posbility: 0.3691
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fn, Posbility: 0.0123
Next Token :  , Posbility: 0.0630
Next Token :  fun, Posbility: 0.0630
Next Token : 
, Posbility: 0.2480
Next Token :  function, Posbility: 0.5938
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0040
Next Token : (, Posbility: 0.0066
Next Token :  [], Posbility: 0.0332
Next Token :  , Posbility: 0.1689
Next Token : 
, Posbility: 0.7578
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0131
Next Token :         , Posbility: 0.0148
Next Token : |, Posbility: 0.0752
Next Token :     , Posbility: 0.1240
Next Token :   , Posbility: 0.7109
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0013
Next Token : (, Posbility: 0.0045
Next Token : [, Posbility: 0.0121
Next Token : [], Posbility: 0.0121
Next Token : |, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0037
Next Token :  None, Posbility: 0.0037
Next Token :  [, Posbility: 0.0275
Next Token :  , Posbility: 0.0454
Next Token :  [], Posbility: 0.9102
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0049
Next Token :   , Posbility: 0.0049
Next Token : 
, Posbility: 0.0049
Next Token :  as, Posbility: 0.0172
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0002
Next Token : :, Posbility: 0.0009
Next Token : _, Posbility: 0.0015
Next Token : ::, Posbility: 0.0046
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0009
Next Token : 
, Posbility: 0.0024
Next Token :  0, Posbility: 0.0024
Next Token :  , Posbility: 0.0291
Next Token :  [], Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0019
Next Token :    , Posbility: 0.0027
Next Token :   , Posbility: 0.0073
Next Token :  , Posbility: 0.0137
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : 	, Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0062
Next Token :  i, Posbility: 0.0062
Next Token :  a, Posbility: 0.0132
Next Token :  [, Posbility: 0.2061
Next Token :  , Posbility: 0.7188
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0286
Next Token : h, Posbility: 0.0535
Next Token : (, Posbility: 0.0605
Next Token : _, Posbility: 0.0996
Next Token : x, Posbility: 0.6484
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0019
Next Token : s, Posbility: 0.0143
Next Token : :, Posbility: 0.0237
Next Token : ::, Posbility: 0.4746
Next Token :  , Posbility: 0.4746
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : x, Posbility: 0.0011
Next Token : :, Posbility: 0.0045
Next Token : ->, Posbility: 0.0228
Next Token : ::, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  new, Posbility: 0.0022
Next Token :  list, Posbility: 0.0053
Next Token :  l, Posbility: 0.0088
Next Token :  rest, Posbility: 0.0732
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0107
Next Token : tail, Posbility: 0.0200
Next Token : _, Posbility: 0.0332
Next Token : y, Posbility: 0.0332
Next Token : x, Posbility: 0.8516
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0009
Next Token :  , Posbility: 0.0011
Next Token : _, Posbility: 0.0015
Next Token : ', Posbility: 0.0109
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0018
Next Token :   , Posbility: 0.0030
Next Token : 
, Posbility: 0.0039
Next Token :  when, Posbility: 0.0288
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : if, Posbility: 0.0009
Next Token : ::, Posbility: 0.0085
Next Token : ->, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0031
Next Token :  1, Posbility: 0.0052
Next Token : 
, Posbility: 0.0811
Next Token :  [, Posbility: 0.1338
Next Token :  , Posbility: 0.7656
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0102
Next Token : square, Posbility: 0.0216
Next Token : List, Posbility: 0.0403
Next Token : (, Posbility: 0.0752
Next Token : x, Posbility: 0.8086
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token :  **, Posbility: 0.0074
Next Token : *, Posbility: 0.0156
Next Token : s, Posbility: 0.0374
Next Token :  *, Posbility: 0.4551
Next Token :  , Posbility: 0.4551
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : <, Posbility: 0.0011
Next Token : x, Posbility: 0.0027
Next Token : :, Posbility: 0.0381
Next Token : ^, Posbility: 0.2812
Next Token : ::, Posbility: 0.6719
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token : !, Posbility: 0.0004
Next Token :  [, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0012
Next Token : sq, Posbility: 0.0019
Next Token : (, Posbility: 0.1060
Next Token : x, Posbility: 0.1060
Next Token : square, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0002
Next Token : 
, Posbility: 0.0015
Next Token : (, Posbility: 0.0076
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0110
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares x
 score:False
Error type: noerr
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0011
Next Token : ), Posbility: 0.0018
Next Token :  , Posbility: 0.0030
Next Token : 

, Posbility: 0.2656
Next Token : 
, Posbility: 0.7227
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs

 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0413
Next Token : end, Posbility: 0.1445
Next Token :   , Posbility: 0.1641
Next Token : |, Posbility: 0.1641
Next Token : in, Posbility: 0.2383
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fix, Posbility: 0.0024
Next Token :   , Posbility: 0.0027
Next Token : 

, Posbility: 0.0913
Next Token :  , Posbility: 0.2812
Next Token : 
, Posbility: 0.5938
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0302
Next Token : (, Posbility: 0.0564
Next Token : square, Posbility: 0.1270
Next Token :   , Posbility: 0.2695
Next Token : let, Posbility: 0.3047
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0076
Next Token :  l, Posbility: 0.0098
Next Token :  list, Posbility: 0.0162
Next Token :  , Posbility: 0.3691
Next Token :  rec, Posbility: 0.4727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0183
Next Token :  find, Posbility: 0.0564
Next Token :  rec, Posbility: 0.0723
Next Token :  loop, Posbility: 0.0820
Next Token :  , Posbility: 0.5352
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0140
Next Token : f, Posbility: 0.0179
Next Token : map, Posbility: 0.0261
Next Token : sq, Posbility: 0.0430
Next Token : square, Posbility: 0.6719
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0052
Next Token :  =, Posbility: 0.1055
Next Token :  , Posbility: 0.1357
Next Token : _, Posbility: 0.2236
Next Token : s, Posbility: 0.4727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0786
Next Token : 2, Posbility: 0.1143
Next Token :  , Posbility: 0.1660
Next Token :  =, Posbility: 0.1660
Next Token : _, Posbility: 0.3516
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0693
Next Token : helper, Posbility: 0.0786
Next Token : iter, Posbility: 0.0786
Next Token : rec, Posbility: 0.0786
Next Token : of, Posbility: 0.1670
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0004
Next Token :  a, Posbility: 0.0011
Next Token :  , Posbility: 0.0173
Next Token :  =, Posbility: 0.0286
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lists, Posbility: 0.0378
Next Token : int, Posbility: 0.0486
Next Token : square, Posbility: 0.0549
Next Token : elements, Posbility: 0.0801
Next Token : list, Posbility: 0.2793
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0248
Next Token : _, Posbility: 0.0408
Next Token :  l, Posbility: 0.0674
Next Token :  =, Posbility: 0.3027
Next Token :  , Posbility: 0.4980
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : square, Posbility: 0.0266
Next Token : ls, Posbility: 0.0498
Next Token : (, Posbility: 0.0820
Next Token : lst, Posbility: 0.0820
Next Token : x, Posbility: 0.6055
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0021
Next Token :  in, Posbility: 0.0027
Next Token :  , Posbility: 0.0056
Next Token :  =, Posbility: 0.1455
Next Token : s, Posbility: 0.8359
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0011
Next Token :  in, Posbility: 0.0024
Next Token : _, Posbility: 0.0027
Next Token :  , Posbility: 0.0108
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0048
Next Token :  match, Posbility: 0.0061
Next Token :  function, Posbility: 0.0452
Next Token :  , Posbility: 0.3789
Next Token : 
, Posbility: 0.5508
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0016
Next Token : let, Posbility: 0.0056
Next Token :    , Posbility: 0.0063
Next Token :     , Posbility: 0.0410
Next Token :   , Posbility: 0.9336
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0574
Next Token : square, Posbility: 0.0649
Next Token : if, Posbility: 0.1768
Next Token : let, Posbility: 0.2266
Next Token : match, Posbility: 0.3301
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0006
Next Token :  [, Posbility: 0.0010
Next Token :  String, Posbility: 0.0012
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0011
Next Token : (, Posbility: 0.0062
Next Token : square, Posbility: 0.0217
Next Token : List, Posbility: 0.0359
Next Token : x, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  with, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :  @, Posbility: 0.0005
Next Token :  |, Posbility: 0.0005
Next Token : 
, Posbility: 0.0015
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0013
Next Token :  [, Posbility: 0.0027
Next Token :  , Posbility: 0.0031
Next Token :  [], Posbility: 0.0109
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :       , Posbility: 0.0007
Next Token :    , Posbility: 0.0021
Next Token :     , Posbility: 0.0532
Next Token :   , Posbility: 0.9414
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : |[, Posbility: 0.0001
Next Token : [], Posbility: 0.0006
Next Token : [, Posbility: 0.0017
Next Token : |, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  null, Posbility: 0.0011
Next Token :  nil, Posbility: 0.0030
Next Token :  [, Posbility: 0.0220
Next Token :  , Posbility: 0.0361
Next Token :  [], Posbility: 0.9336
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0015
Next Token : 
, Posbility: 0.0015
Next Token :  =>, Posbility: 0.0024
Next Token :  |, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : â†’, Posbility: 0.0001
Next Token : ::, Posbility: 0.0028
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0009
Next Token :  0, Posbility: 0.0014
Next Token : 
, Posbility: 0.0063
Next Token :  , Posbility: 0.0466
Next Token :  [], Posbility: 0.9375
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :   , Posbility: 0.0009
Next Token :  , Posbility: 0.0075
Next Token :  |, Posbility: 0.0096
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0018
Next Token :  i, Posbility: 0.0038
Next Token :  [], Posbility: 0.0103
Next Token :  [, Posbility: 0.0459
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0107
Next Token : h, Posbility: 0.0107
Next Token : head, Posbility: 0.0156
Next Token : _, Posbility: 0.0796
Next Token : x, Posbility: 0.8555
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0006
Next Token :  |, Posbility: 0.0007
Next Token : s, Posbility: 0.0060
Next Token : ::, Posbility: 0.0942
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : :, Posbility: 0.0015
Next Token : x, Posbility: 0.0015
Next Token : ->, Posbility: 0.0109
Next Token : ::, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0006
Next Token :  l, Posbility: 0.0009
Next Token :  [], Posbility: 0.0084
Next Token :  rest, Posbility: 0.0123
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : square, Posbility: 0.0014
Next Token : tail, Posbility: 0.0023
Next Token : y, Posbility: 0.0106
Next Token : _, Posbility: 0.0287
Next Token : x, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : ', Posbility: 0.0017
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0021
Next Token :  =>, Posbility: 0.0024
Next Token : _, Posbility: 0.0027
Next Token :  when, Posbility: 0.0108
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : if, Posbility: 0.0008
Next Token : ::, Posbility: 0.0017
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0021
Next Token :  1, Posbility: 0.0045
Next Token :  [, Posbility: 0.0547
Next Token : 
, Posbility: 0.0703
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0063
Next Token : let, Posbility: 0.0063
Next Token : (, Posbility: 0.0415
Next Token : square, Posbility: 0.0879
Next Token : x, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0014
Next Token :  +, Posbility: 0.0038
Next Token : s, Posbility: 0.0063
Next Token :  *, Posbility: 0.1611
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0007
Next Token : x, Posbility: 0.0011
Next Token : :, Posbility: 0.0277
Next Token : ^, Posbility: 0.1592
Next Token : ::, Posbility: 0.8086
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token : =, Posbility: 0.0010
Next Token :  [, Posbility: 0.0012
Next Token : !, Posbility: 0.0013
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : sq, Posbility: 0.0005
Next Token : x, Posbility: 0.0104
Next Token : (, Posbility: 0.0466
Next Token : square, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token :  [, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token :  , Posbility: 0.2676
Next Token : _, Posbility: 0.7305
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : to, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : list, Posbility: 0.0002
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : element, Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : rest, Posbility: 0.0001
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0004
Next Token :  [, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token : (, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : square, Posbility: 0.0009
Next Token : (, Posbility: 0.0293
Next Token : x, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0034
Next Token :  , Posbility: 0.0092
Next Token : 

, Posbility: 0.0869
Next Token :  in, Posbility: 0.2363
Next Token : 
, Posbility: 0.6445
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0123
Next Token : end, Posbility: 0.0261
Next Token :   , Posbility: 0.0315
Next Token : let, Posbility: 0.1035
Next Token : in, Posbility: 0.7188
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : finite, Posbility: 0.0001
Next Token : ;, Posbility: 0.0003
Next Token :  , Posbility: 0.0051
Next Token : 

, Posbility: 0.0291
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0146
Next Token : [, Posbility: 0.0240
Next Token : (, Posbility: 0.0449
Next Token : square, Posbility: 0.2012
Next Token : let, Posbility: 0.6211
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0106
Next Token :  list, Posbility: 0.0288
Next Token :  main, Posbility: 0.0288
Next Token :  , Posbility: 0.3965
Next Token :  rec, Posbility: 0.4492
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0137
Next Token :  list, Posbility: 0.0371
Next Token :  rec, Posbility: 0.0371
Next Token :  find, Posbility: 0.0542
Next Token :  , Posbility: 0.6602
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0071
Next Token : f, Posbility: 0.0081
Next Token : map, Posbility: 0.0133
Next Token : sq, Posbility: 0.0193
Next Token : square, Posbility: 0.8203
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token :  =, Posbility: 0.0062
Next Token :  , Posbility: 0.0170
Next Token : _, Posbility: 0.0461
Next Token : s, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0027
Next Token :  =, Posbility: 0.0050
Next Token : 2, Posbility: 0.0073
Next Token :  , Posbility: 0.0176
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : and, Posbility: 0.0047
Next Token : iter, Posbility: 0.0053
Next Token : list, Posbility: 0.0078
Next Token : rec, Posbility: 0.0088
Next Token : of, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : _2_, Posbility: 0.0002
Next Token :  =, Posbility: 0.0013
Next Token :  , Posbility: 0.0036
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : array, Posbility: 0.0120
Next Token : element, Posbility: 0.0136
Next Token : int, Posbility: 0.0225
Next Token : lists, Posbility: 0.0225
Next Token : list, Posbility: 0.6562
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0425
Next Token : 2, Posbility: 0.0698
Next Token : ', Posbility: 0.1152
Next Token :  , Posbility: 0.1904
Next Token : _, Posbility: 0.5156
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0459
Next Token : opt, Posbility: 0.0520
Next Token : of, Posbility: 0.0588
Next Token : iter, Posbility: 0.0664
Next Token : rec, Posbility: 0.0757
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : urs, Posbility: 0.0024
Next Token : _, Posbility: 0.0067
Next Token :  =, Posbility: 0.0381
Next Token : urse, Posbility: 0.2490
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0013
Next Token : n, Posbility: 0.0013
Next Token : (), Posbility: 0.0015
Next Token : (, Posbility: 0.0040
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0085
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0004
Next Token :  i, Posbility: 0.0005
Next Token :  acc, Posbility: 0.0010
Next Token :  , Posbility: 0.0109
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0005
Next Token :  function, Posbility: 0.0048
Next Token :  match, Posbility: 0.0055
Next Token :  , Posbility: 0.0664
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :    , Posbility: 0.0010
Next Token : let, Posbility: 0.0015
Next Token :     , Posbility: 0.0041
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : function, Posbility: 0.0114
Next Token : square, Posbility: 0.0242
Next Token : if, Posbility: 0.0659
Next Token : let, Posbility: 0.0659
Next Token : match, Posbility: 0.8008
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : List, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : square, Posbility: 0.0019
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  with, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  avec, Posbility: 0.0000
Next Token :  WITH, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0002
Next Token :  0, Posbility: 0.0005
Next Token :  [, Posbility: 0.0024
Next Token :  , Posbility: 0.0109
Next Token :  [], Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  as, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  |, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0012
Next Token :  [], Posbility: 0.0019
Next Token :  0, Posbility: 0.0024
Next Token :  [, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0008
Next Token : (, Posbility: 0.0019
Next Token : head, Posbility: 0.0024
Next Token : _, Posbility: 0.0157
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  |, Posbility: 0.0005
Next Token : s, Posbility: 0.0007
Next Token : ::, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : :, Posbility: 0.0007
Next Token : x, Posbility: 0.0008
Next Token : ->, Posbility: 0.0076
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  rest, Posbility: 0.0005
Next Token :  [], Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : tail, Posbility: 0.0005
Next Token : y, Posbility: 0.0009
Next Token : _, Posbility: 0.0097
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0005
Next Token : _, Posbility: 0.0006
Next Token : 
, Posbility: 0.0010
Next Token :  when, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : if, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0023
Next Token :  match, Posbility: 0.0038
Next Token :  [, Posbility: 0.0132
Next Token : 
, Posbility: 0.0459
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0035
Next Token : if, Posbility: 0.0057
Next Token : (, Posbility: 0.0156
Next Token : square, Posbility: 0.1147
Next Token : x, Posbility: 0.8477
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  +, Posbility: 0.0016
Next Token : s, Posbility: 0.0065
Next Token :  *, Posbility: 0.0256
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : @@, Posbility: 0.0002
Next Token : :, Posbility: 0.0074
Next Token : ^, Posbility: 0.0201
Next Token : ::, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0003
Next Token : 
, Posbility: 0.0012
Next Token :  [, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : sq, Posbility: 0.0003
Next Token : (, Posbility: 0.0066
Next Token : x, Posbility: 0.0066
Next Token : square, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0474
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : from, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : rec, Posbility: 0.0009
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : rec, Posbility: 0.0001
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 0.0757
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : re, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : recursive, Posbility: 0.0001
Next Token : rec, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sq, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : square, Posbility: 0.0005
Next Token : (, Posbility: 0.0097
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0036
Next Token :  +, Posbility: 0.0041
Next Token :  in, Posbility: 0.0339
Next Token : 

, Posbility: 0.0723
Next Token : 
, Posbility: 0.8789
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0011
Next Token :   , Posbility: 0.0046
Next Token : (, Posbility: 0.0052
Next Token : let, Posbility: 0.0299
Next Token : in, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0014
Next Token : 

, Posbility: 0.0674
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0071
Next Token : println, Posbility: 0.0125
Next Token : (, Posbility: 0.0598
Next Token : square, Posbility: 0.1836
Next Token : let, Posbility: 0.6406
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0070
Next Token :  list, Posbility: 0.0149
Next Token :  main, Posbility: 0.0149
Next Token :  , Posbility: 0.3398
Next Token :  rec, Posbility: 0.5586
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0106
Next Token :  list, Posbility: 0.0253
Next Token :  rec, Posbility: 0.0287
Next Token :  find, Posbility: 0.0325
Next Token :  , Posbility: 0.7383
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0041
Next Token : f, Posbility: 0.0052
Next Token : map, Posbility: 0.0087
Next Token : sq, Posbility: 0.0098
Next Token : square, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :  =, Posbility: 0.0024
Next Token :  , Posbility: 0.0065
Next Token : _, Posbility: 0.0291
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0017
Next Token :  =, Posbility: 0.0031
Next Token : 2, Posbility: 0.0074
Next Token :  , Posbility: 0.0095
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0039
Next Token : list, Posbility: 0.0107
Next Token : rec, Posbility: 0.0258
Next Token : iter, Posbility: 0.0292
Next Token : of, Posbility: 0.8516
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0028
Next Token : rec, Posbility: 0.0041
Next Token : array, Posbility: 0.0060
Next Token : lists, Posbility: 0.0068
Next Token : list, Posbility: 0.8906
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0077
Next Token : ', Posbility: 0.0184
Next Token :  , Posbility: 0.0344
Next Token : 2, Posbility: 0.0391
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : opt, Posbility: 0.0408
Next Token : loop, Posbility: 0.0464
Next Token : tail, Posbility: 0.0596
Next Token : rec, Posbility: 0.1426
Next Token : iter, Posbility: 0.3887
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0061
Next Token : _, Posbility: 0.0130
Next Token : ative, Posbility: 0.0515
Next Token :  =, Posbility: 0.0747
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : lst, Posbility: 0.0012
Next Token : (, Posbility: 0.0022
Next Token : f, Posbility: 0.0022
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0022
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0009
Next Token :  acc, Posbility: 0.0013
Next Token :  iter, Posbility: 0.0013
Next Token :  , Posbility: 0.0123
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0004
Next Token :  list, Posbility: 0.0005
Next Token :  match, Posbility: 0.0019
Next Token :  , Posbility: 0.0140
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :    , Posbility: 0.0007
Next Token :     , Posbility: 0.0022
Next Token : let, Posbility: 0.0025
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0092
Next Token : for, Posbility: 0.0221
Next Token : List, Posbility: 0.0413
Next Token : let, Posbility: 0.2373
Next Token : match, Posbility: 0.6445
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  iter, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Iterator, Posbility: 0.0001
Next Token : Seq, Posbility: 0.0002
Next Token : (, Posbility: 0.0005
Next Token : List, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  with, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  nil, Posbility: 0.0001
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 0.0041
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  as, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  |, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : yield, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  [];, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  iter, Posbility: 0.0003
Next Token :  i, Posbility: 0.0005
Next Token :  [], Posbility: 0.0012
Next Token :  [, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0009
Next Token : (, Posbility: 0.0013
Next Token : head, Posbility: 0.0019
Next Token : _, Posbility: 0.0123
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  |, Posbility: 0.0002
Next Token : s, Posbility: 0.0004
Next Token : ::, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0001
Next Token : :, Posbility: 0.0005
Next Token : x, Posbility: 0.0005
Next Token : ->, Posbility: 0.0052
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :  acc, Posbility: 0.0001
Next Token :  rest, Posbility: 0.0007
Next Token :  [], Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : tail, Posbility: 0.0005
Next Token : y, Posbility: 0.0005
Next Token : _, Posbility: 0.0124
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : ', Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : 1, Posbility: 0.0004
Next Token : 
, Posbility: 0.0007
Next Token :  when, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0037
Next Token :  [, Posbility: 0.0061
Next Token :  match, Posbility: 0.0129
Next Token : 
, Posbility: 0.1572
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0145
Next Token : square, Posbility: 0.0305
Next Token : let, Posbility: 0.0347
Next Token : List, Posbility: 0.0830
Next Token : x, Posbility: 0.7891
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0006
Next Token : 
, Posbility: 0.0024
Next Token :  *, Posbility: 0.0107
Next Token : s, Posbility: 0.0156
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0003
Next Token : @@, Posbility: 0.0006
Next Token : :, Posbility: 0.0066
Next Token : ^, Posbility: 0.0139
Next Token : ::, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0021
Next Token :  [, Posbility: 0.0073
Next Token : 
, Posbility: 0.0120
Next Token :  iter, Posbility: 0.0154
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sq, Posbility: 0.0030
Next Token : x, Posbility: 0.0767
Next Token : (, Posbility: 0.0767
Next Token : List, Posbility: 0.0767
Next Token : square, Posbility: 0.7305
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token :  [, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.0598
Next Token : _, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0002
Next Token : list, Posbility: 0.0004
Next Token : rec, Posbility: 0.0005
Next Token : iter, Posbility: 0.0110
Next Token : of, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : it, Posbility: 0.0000
Next Token : iterator, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : iter, Posbility: 0.0007
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0006
Next Token : (, Posbility: 0.0009
Next Token :  iter, Posbility: 0.0030
Next Token :  , Posbility: 0.0471
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : iterator, Posbility: 0.0001
Next Token : inter, Posbility: 0.0001
Next Token : it, Posbility: 0.0003
Next Token : rec, Posbility: 0.1191
Next Token : iter, Posbility: 0.8789
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token :  iter, Posbility: 0.0006
Next Token : (, Posbility: 0.0008
Next Token : _, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0001
Next Token : square, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 0.0110
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0039
Next Token :  ++, Posbility: 0.0039
Next Token : 

, Posbility: 0.0688
Next Token :  in, Posbility: 0.0688
Next Token : 
, Posbility: 0.8398
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0013
Next Token :   , Posbility: 0.0024
Next Token : (, Posbility: 0.0029
Next Token : let, Posbility: 0.0198
Next Token : in, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : finite, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0952
Next Token : 
, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0072
Next Token : 

, Posbility: 0.0098
Next Token : square, Posbility: 0.0771
Next Token : (, Posbility: 0.0874
Next Token : let, Posbility: 0.7305
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0074
Next Token :  iter, Posbility: 0.0074
Next Token :  main, Posbility: 0.0084
Next Token :  , Posbility: 0.1895
Next Token :  rec, Posbility: 0.7500
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0066
Next Token :  rec, Posbility: 0.0096
Next Token :  list, Posbility: 0.0109
Next Token :  find, Posbility: 0.0123
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0020
Next Token : f, Posbility: 0.0026
Next Token : map, Posbility: 0.0056
Next Token : sq, Posbility: 0.0056
Next Token : square, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  =, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.0110
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 0.0015
Next Token : 2, Posbility: 0.0022
Next Token :  , Posbility: 0.0032
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0016
Next Token : list, Posbility: 0.0044
Next Token : rec, Posbility: 0.0063
Next Token : iter, Posbility: 0.0172
Next Token : of, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : seq, Posbility: 0.0018
Next Token : lists, Posbility: 0.0030
Next Token : iter, Posbility: 0.0030
Next Token : array, Posbility: 0.0039
Next Token : list, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0024
Next Token :  =, Posbility: 0.0039
Next Token : 2, Posbility: 0.0095
Next Token :  , Posbility: 0.0138
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0189
Next Token : loop, Posbility: 0.0214
Next Token : fold, Posbility: 0.0275
Next Token : rec, Posbility: 0.0513
Next Token : iter, Posbility: 0.6250
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0108
Next Token : ', Posbility: 0.0122
Next Token :  , Posbility: 0.0620
Next Token : 2, Posbility: 0.2773
Next Token : _, Posbility: 0.5898
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : aux, Posbility: 0.0234
Next Token : iter, Posbility: 0.0266
Next Token : tail, Posbility: 0.0640
Next Token : opt, Posbility: 0.1533
Next Token : rec, Posbility: 0.2520
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token : _, Posbility: 0.0031
Next Token : urse, Posbility: 0.0074
Next Token :  =, Posbility: 0.0122
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : f, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  acc, Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  function, Posbility: 0.0002
Next Token :  match, Posbility: 0.0009
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : function, Posbility: 0.0010
Next Token : if, Posbility: 0.0011
Next Token : let, Posbility: 0.0178
Next Token : match, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  iter, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  WITH, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : head, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : ::, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : ->, Posbility: 0.0004
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  rest, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : _, Posbility: 0.0019
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  when, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0003
Next Token :  [, Posbility: 0.0005
Next Token :  match, Posbility: 0.0007
Next Token : 
, Posbility: 0.0076
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0004
Next Token : let, Posbility: 0.0013
Next Token : (, Posbility: 0.0015
Next Token : square, Posbility: 0.0041
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  *, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : @@, Posbility: 0.0002
Next Token : :, Posbility: 0.0002
Next Token : ^, Posbility: 0.0006
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0001
Next Token :  iter, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : sq, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 0.0012
Next Token : square, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : iter, Posbility: 0.0003
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lists, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  iter, Posbility: 0.0001
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : it, Posbility: 0.0001
Next Token : inter, Posbility: 0.0001
Next Token : rec, Posbility: 0.0293
Next Token : iter, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 0.0097
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : recursive, Posbility: 0.0000
Next Token : res, Posbility: 0.0000
Next Token : rev, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : rec, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : square, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : , Posbility: 0.0006
Next Token :  , Posbility: 0.0007
Next Token :  in, Posbility: 0.0063
Next Token : 

, Posbility: 0.0530
Next Token : 
, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0010
Next Token : ;, Posbility: 0.0011
Next Token : (, Posbility: 0.0027
Next Token : let, Posbility: 0.0139
Next Token : in, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0374
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : open, Posbility: 0.0072
Next Token : in, Posbility: 0.0134
Next Token : square, Posbility: 0.0442
Next Token : (, Posbility: 0.0640
Next Token : let, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  main, Posbility: 0.0041
Next Token :  list, Posbility: 0.0067
Next Token :  iter, Posbility: 0.0086
Next Token :  , Posbility: 0.1729
Next Token :  rec, Posbility: 0.7773
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0053
Next Token :  sum, Posbility: 0.0053
Next Token :  find, Posbility: 0.0078
Next Token :  list, Posbility: 0.0088
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0020
Next Token : f, Posbility: 0.0026
Next Token : sq, Posbility: 0.0056
Next Token : map, Posbility: 0.0071
Next Token : square, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token : _, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 0.0012
Next Token : 2, Posbility: 0.0015
Next Token :  , Posbility: 0.0028
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0013
Next Token : list, Posbility: 0.0044
Next Token : rec, Posbility: 0.0044
Next Token : iter, Posbility: 0.0221
Next Token : of, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : seq, Posbility: 0.0019
Next Token : lists, Posbility: 0.0024
Next Token : iter, Posbility: 0.0024
Next Token : array, Posbility: 0.0031
Next Token : list, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0015
Next Token : ', Posbility: 0.0015
Next Token : 2, Posbility: 0.0045
Next Token :  , Posbility: 0.0066
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0420
Next Token : gen, Posbility: 0.0476
Next Token : rec, Posbility: 0.0476
Next Token : fold, Posbility: 0.0540
Next Token : iter, Posbility: 0.4531
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0048
Next Token : i, Posbility: 0.0168
Next Token :  , Posbility: 0.0457
Next Token : 2, Posbility: 0.0854
Next Token : _, Posbility: 0.8086
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : loop, Posbility: 0.0422
Next Token : iter, Posbility: 0.0791
Next Token : rec, Posbility: 0.0791
Next Token : tail, Posbility: 0.0894
Next Token : opt, Posbility: 0.1670
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0037
Next Token : 1, Posbility: 0.0042
Next Token :  =, Posbility: 0.0114
Next Token : _, Posbility: 0.0513
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : lst, Posbility: 0.0005
Next Token : opt, Posbility: 0.0005
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0012
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0002
Next Token :  list, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0097
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  function, Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :  match, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token : let, Posbility: 0.0005
Next Token :     , Posbility: 0.0007
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : if, Posbility: 0.0019
Next Token : try, Posbility: 0.0058
Next Token : let, Posbility: 0.0123
Next Token : match, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :  Optional, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : option, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : List, Posbility: 0.0012
Next Token : Option, Posbility: 0.0017
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  with, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  WITH, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token :  null, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0009
Next Token :  None, Posbility: 0.0009
Next Token :  [, Posbility: 0.0025
Next Token :  , Posbility: 0.0067
Next Token :  [], Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  |, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0024
Next Token :  nil, Posbility: 0.0024
Next Token :  None, Posbility: 0.0065
Next Token :  , Posbility: 0.0177
Next Token :  [], Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0001
Next Token :  *, Posbility: 0.0001
Next Token :  |, Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0015
Next Token :  None, Posbility: 0.0015
Next Token :  [], Posbility: 0.0015
Next Token :  Some, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0001
Next Token : Nil, Posbility: 0.0002
Next Token : (, Posbility: 0.0006
Next Token : _, Posbility: 0.0059
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  |, Posbility: 0.0002
Next Token : s, Posbility: 0.0003
Next Token : ::, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : :, Posbility: 0.0004
Next Token : ->, Posbility: 0.0019
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :  nil, Posbility: 0.0002
Next Token :  None, Posbility: 0.0002
Next Token :  [], Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (), Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : _, Posbility: 0.0110
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  |, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  when, Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  some, Posbility: 0.0013
Next Token :  match, Posbility: 0.0098
Next Token : 
, Posbility: 0.0267
Next Token :  Some, Posbility: 0.0728
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0039
Next Token : if, Posbility: 0.0039
Next Token : Option, Posbility: 0.0084
Next Token : square, Posbility: 0.0084
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0002
Next Token :  |, Posbility: 0.0003
Next Token : 
, Posbility: 0.0007
Next Token : s, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : @@, Posbility: 0.0007
Next Token : ^, Posbility: 0.0008
Next Token : :, Posbility: 0.0010
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ?, Posbility: 0.0003
Next Token :  match, Posbility: 0.0003
Next Token :  Some, Posbility: 0.0005
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : sq, Posbility: 0.0002
Next Token : x, Posbility: 0.0012
Next Token : (, Posbility: 0.0025
Next Token : square, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : opt, Posbility: 0.0000
Next Token : iter, Posbility: 0.0002
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lists, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : opt, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  iter, Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : iterate, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : opt, Posbility: 0.0009
Next Token : rec, Posbility: 0.0015
Next Token : iter, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : op, Posbility: 0.0000
Next Token : optional, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : rec, Posbility: 0.0067
Next Token : opt, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : opt, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token :  in, Posbility: 0.0135
Next Token : 

, Posbility: 0.0366
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0004
Next Token : ```, Posbility: 0.0004
Next Token : (, Posbility: 0.0012
Next Token : let, Posbility: 0.0085
Next Token : in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0674
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0066
Next Token : 

, Posbility: 0.0085
Next Token : square, Posbility: 0.0123
Next Token : (, Posbility: 0.0488
Next Token : let, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0011
Next Token :  list, Posbility: 0.0020
Next Token :  iter, Posbility: 0.0029
Next Token :  , Posbility: 0.0747
Next Token :  rec, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0016
Next Token :  find, Posbility: 0.0019
Next Token :  sum, Posbility: 0.0027
Next Token :  list, Posbility: 0.0035
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0005
Next Token : add, Posbility: 0.0005
Next Token : sq, Posbility: 0.0013
Next Token : map, Posbility: 0.0022
Next Token : square, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0028
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : 2, Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0012
Next Token : list, Posbility: 0.0015
Next Token : opt, Posbility: 0.0024
Next Token : iter, Posbility: 0.0031
Next Token : of, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : array, Posbility: 0.0015
Next Token : seq, Posbility: 0.0015
Next Token : option, Posbility: 0.0019
Next Token : opt, Posbility: 0.0051
Next Token : list, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0004
Next Token :  =, Posbility: 0.0013
Next Token : 2, Posbility: 0.0019
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gen, Posbility: 0.0089
Next Token : fold, Posbility: 0.0114
Next Token : rec, Posbility: 0.0510
Next Token : opt, Posbility: 0.2598
Next Token : iter, Posbility: 0.5508
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0009
Next Token : opt, Posbility: 0.0011
Next Token :  , Posbility: 0.0084
Next Token : 2, Posbility: 0.0122
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : seq, Posbility: 0.0022
Next Token : list, Posbility: 0.0036
Next Token : iter, Posbility: 0.0036
Next Token : rec, Posbility: 0.0342
Next Token : opt, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0008
Next Token : 1, Posbility: 0.0019
Next Token :  , Posbility: 0.0121
Next Token : 2, Posbility: 0.0226
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ex, Posbility: 0.0029
Next Token : rev, Posbility: 0.0029
Next Token : tail, Posbility: 0.0033
Next Token : opt, Posbility: 0.0166
Next Token : rec, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token : urse, Posbility: 0.0004
Next Token :  =, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  function, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  match, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : try, Posbility: 0.0002
Next Token : let, Posbility: 0.0012
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : square, Posbility: 0.0000
Next Token : Option, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  WITH, Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  nil, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ()->, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  nil, Posbility: 0.0001
Next Token :  None, Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  Some, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  nil, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0005
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  when, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0002
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : square, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : @@, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Square, Posbility: 0.0000
Next Token : sq, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : square, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : opt, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  iter, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : inter, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : opt, Posbility: 0.0002
Next Token : rec, Posbility: 0.0015
Next Token : iter, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : opts, Posbility: 0.0000
Next Token : optional, Posbility: 0.0000
Next Token : op, Posbility: 0.0000
Next Token : rec, Posbility: 0.0041
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : iter, Posbility: 0.0000
Next Token : red, Posbility: 0.0000
Next Token : res, Posbility: 0.0000
Next Token : rev, Posbility: 0.0000
Next Token : rec, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : , Posbility: 0.0005
Next Token :  in, Posbility: 0.0031
Next Token : 

, Posbility: 0.0371
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0005
Next Token : ```, Posbility: 0.0015
Next Token : (, Posbility: 0.0031
Next Token : let, Posbility: 0.0177
Next Token : in, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0374
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : module, Posbility: 0.0087
Next Token : in, Posbility: 0.0267
Next Token : square, Posbility: 0.0391
Next Token : (, Posbility: 0.0645
Next Token : let, Posbility: 0.7812
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0018
Next Token :  list, Posbility: 0.0044
Next Token :  iter, Posbility: 0.0073
Next Token :  , Posbility: 0.1289
Next Token :  rec, Posbility: 0.8398
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0026
Next Token :  sum, Posbility: 0.0030
Next Token :  find, Posbility: 0.0038
Next Token :  list, Posbility: 0.0056
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0011
Next Token : add, Posbility: 0.0011
Next Token : sq, Posbility: 0.0024
Next Token : map, Posbility: 0.0051
Next Token : square, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : 2, Posbility: 0.0007
Next Token :  =, Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0013
Next Token : list, Posbility: 0.0019
Next Token : opt, Posbility: 0.0027
Next Token : iter, Posbility: 0.0051
Next Token : of, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : array, Posbility: 0.0015
Next Token : seq, Posbility: 0.0019
Next Token : option, Posbility: 0.0024
Next Token : opt, Posbility: 0.0065
Next Token : list, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token : 2, Posbility: 0.0017
Next Token :  =, Posbility: 0.0022
Next Token :  , Posbility: 0.0059
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gen, Posbility: 0.0148
Next Token : fold, Posbility: 0.0190
Next Token : rec, Posbility: 0.0403
Next Token : opt, Posbility: 0.1807
Next Token : iter, Posbility: 0.5586
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : opt, Posbility: 0.0011
Next Token : i, Posbility: 0.0015
Next Token : 2, Posbility: 0.0084
Next Token :  , Posbility: 0.0108
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0104
Next Token : iter, Posbility: 0.0104
Next Token : lazy, Posbility: 0.0104
Next Token : rec, Posbility: 0.0410
Next Token : opt, Posbility: 0.7266
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0023
Next Token : 1, Posbility: 0.0023
Next Token : 2, Posbility: 0.0248
Next Token :  , Posbility: 0.0359
Next Token : _, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ex, Posbility: 0.0297
Next Token : iter, Posbility: 0.0432
Next Token : tail, Posbility: 0.0432
Next Token : rec, Posbility: 0.1709
Next Token : opt, Posbility: 0.1934
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0018
Next Token : 1, Posbility: 0.0021
Next Token :  =, Posbility: 0.0118
Next Token : _, Posbility: 0.0283
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : (), Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  function, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  match, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : if, Posbility: 0.0002
Next Token : try, Posbility: 0.0005
Next Token : let, Posbility: 0.0019
Next Token : match, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : square, Posbility: 0.0000
Next Token : Option, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  WITH, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0001
Next Token :  None, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  |, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  None, Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :  [], Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  Some, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  [], Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  nil, Posbility: 0.0000
Next Token :  None, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0012
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  when, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token :  match, Posbility: 0.0006
Next Token :  Some, Posbility: 0.0022
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : square, Posbility: 0.0008
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ??, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : @@, Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : sq, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : square, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : opt, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lists, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : opt, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  iter, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : iterate, Posbility: 0.0000
Next Token : it, Posbility: 0.0000
Next Token : rec, Posbility: 0.0003
Next Token : opt, Posbility: 0.0003
Next Token : iter, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : op, Posbility: 0.0000
Next Token : optional, Posbility: 0.0000
Next Token : rec, Posbility: 0.0001
Next Token : iter, Posbility: 0.0003
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0076
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : optional, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : op, Posbility: 0.0000
Next Token : rec, Posbility: 0.0041
Next Token : opt, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : , Posbility: 0.0003
Next Token :  in, Posbility: 0.0035
Next Token : 

, Posbility: 0.0259
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : module, Posbility: 0.0003
Next Token : ```, Posbility: 0.0014
Next Token : (, Posbility: 0.0031
Next Token : let, Posbility: 0.0157
Next Token : in, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : , Posbility: 0.0000
Next Token : ;, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0535
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0052
Next Token : module, Posbility: 0.0087
Next Token : in, Posbility: 0.0266
Next Token : (, Posbility: 0.0388
Next Token : let, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0005
Next Token :  list, Posbility: 0.0010
Next Token :  iter, Posbility: 0.0018
Next Token :  , Posbility: 0.0371
Next Token :  rec, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0013
Next Token :  sum, Posbility: 0.0015
Next Token :  loop, Posbility: 0.0015
Next Token :  list, Posbility: 0.0031
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0003
Next Token : add, Posbility: 0.0004
Next Token : sq, Posbility: 0.0009
Next Token : map, Posbility: 0.0017
Next Token : square, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec square
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0013
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 2, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0006
Next Token : list, Posbility: 0.0010
Next Token : opt, Posbility: 0.0019
Next Token : iter, Posbility: 0.0028
Next Token : of, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : seq, Posbility: 0.0006
Next Token : lists, Posbility: 0.0006
Next Token : option, Posbility: 0.0007
Next Token : opt, Posbility: 0.0015
Next Token : list, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token : 2, Posbility: 0.0006
Next Token :  =, Posbility: 0.0012
Next Token :  , Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : gen, Posbility: 0.0063
Next Token : fold, Posbility: 0.0063
Next Token : rec, Posbility: 0.0221
Next Token : opt, Posbility: 0.0679
Next Token : iter, Posbility: 0.8281
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : opt, Posbility: 0.0002
Next Token : 3, Posbility: 0.0002
Next Token : 2, Posbility: 0.0013
Next Token :  , Posbility: 0.0036
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0011
Next Token : seq, Posbility: 0.0014
Next Token : iter, Posbility: 0.0039
Next Token : rec, Posbility: 0.0107
Next Token : opt, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : option, Posbility: 0.0002
Next Token : optional, Posbility: 0.0003
Next Token : iter, Posbility: 0.0007
Next Token : rec, Posbility: 0.0109
Next Token : opt, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token : 2, Posbility: 0.0025
Next Token :  , Posbility: 0.0028
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : res, Posbility: 0.0003
Next Token : rev, Posbility: 0.0003
Next Token : iter, Posbility: 0.0015
Next Token : opt, Posbility: 0.0040
Next Token : rec, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token :  =, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : try, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : square, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  WITH, Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with

 score:False
Error type: noerr
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  |
 score:False
Error type: noerr
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | []
 score:False
Error type: noerr
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] ->
 score:False
Error type: noerr
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  |
 score:False
Error type: noerr
---------------------------
Next Token :  Some, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | 
 score:False
Error type: noerr
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x ::
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  nil, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: 
 score:False
Error type: noerr
---------------------------
Next Token : X, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs
 score:False
Error type: noerr
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :  when, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs ->
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : square, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : Â·, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x ::
 score:False
Error type: noerr
---------------------------
Next Token :  rec, Posbility: 0.0000
Next Token : square, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: 
 score:False
Error type: noerr
---------------------------
Next Token : squared, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : sq, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : square, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: square
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : opt, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : iter, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  iter, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_
 score:False
Error type: noerr
---------------------------
Next Token : it, Posbility: 0.0000
Next Token : iterate, Posbility: 0.0000
Next Token : opt, Posbility: 0.0001
Next Token : rec, Posbility: 0.0003
Next Token : iter, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter
 score:False
Error type: noerr
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_
 score:False
Error type: noerr
---------------------------
Next Token : optional, Posbility: 0.0000
Next Token : op, Posbility: 0.0000
Next Token : iter, Posbility: 0.0001
Next Token : rec, Posbility: 0.0001
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_
 score:False
Error type: noerr
---------------------------
Next Token : opts, Posbility: 0.0000
Next Token : optional, Posbility: 0.0000
Next Token : op, Posbility: 0.0000
Next Token : rec, Posbility: 0.0006
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_
 score:False
Error type: noerr
---------------------------
Next Token : rc, Posbility: 0.0000
Next Token : rev, Posbility: 0.0000
Next Token : res, Posbility: 0.0000
Next Token : red, Posbility: 0.0000
Next Token : rec, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : , Posbility: 0.0005
Next Token :  in, Posbility: 0.0027
Next Token : 

, Posbility: 0.0371
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs

 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0009
Next Token : ```, Posbility: 0.0014
Next Token : (, Posbility: 0.0060
Next Token : let, Posbility: 0.0255
Next Token : in, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
 score:False
Error type: noerr
---------------------------
Next Token : , Posbility: 0.0000
Next Token : ;, Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0374
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in

 score:False
Error type: noerr
---------------------------
Next Token : module, Posbility: 0.0145
Next Token : in, Posbility: 0.0211
Next Token : square, Posbility: 0.0349
Next Token : (, Posbility: 0.0649
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let
 score:False
Error type: noerr
---------------------------
Next Token :  test, Posbility: 0.0015
Next Token :  list, Posbility: 0.0032
Next Token :  iter, Posbility: 0.0059
Next Token :  , Posbility: 0.0928
Next Token :  rec, Posbility: 0.8789
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec
 score:False
Error type: noerr
---------------------------
Next Token :  iter, Posbility: 0.0023
Next Token :  loop, Posbility: 0.0023
Next Token :  find, Posbility: 0.0030
Next Token :  list, Posbility: 0.0056
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec 
 score:False
Error type: noerr
---------------------------
Next Token : add, Posbility: 0.0011
Next Token : f, Posbility: 0.0013
Next Token : sq, Posbility: 0.0019
Next Token : map, Posbility: 0.0045
Next Token : square, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec square
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0028
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : 2, Posbility: 0.0006
Next Token :  =, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_
 score:False
Error type: noerr
---------------------------
Next Token : rec, Posbility: 0.0011
Next Token : list, Posbility: 0.0017
Next Token : opt, Posbility: 0.0024
Next Token : iter, Posbility: 0.0040
Next Token : of, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of
 score:False
Error type: noerr
---------------------------
Next Token : _1_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_
 score:False
Error type: noerr
---------------------------
Next Token : array, Posbility: 0.0019
Next Token : seq, Posbility: 0.0024
Next Token : option, Posbility: 0.0039
Next Token : opt, Posbility: 0.0083
Next Token : list, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token : 2, Posbility: 0.0013
Next Token :  =, Posbility: 0.0035
Next Token :  , Posbility: 0.0085
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_
 score:False
Error type: noerr
---------------------------
Next Token : gen, Posbility: 0.0142
Next Token : fold, Posbility: 0.0142
Next Token : rec, Posbility: 0.0386
Next Token : opt, Posbility: 0.1523
Next Token : iter, Posbility: 0.6055
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter
 score:False
Error type: noerr
---------------------------
Next Token : opt, Posbility: 0.0004
Next Token : 3, Posbility: 0.0005
Next Token : 2, Posbility: 0.0045
Next Token :  , Posbility: 0.0075
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0089
Next Token : seq, Posbility: 0.0089
Next Token : iter, Posbility: 0.0115
Next Token : rec, Posbility: 0.0400
Next Token : opt, Posbility: 0.8008
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0003
Next Token :  =, Posbility: 0.0004
Next Token : 2, Posbility: 0.0025
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_
 score:False
Error type: noerr
---------------------------
Next Token : none, Posbility: 0.0052
Next Token : list, Posbility: 0.0086
Next Token : iter, Posbility: 0.0111
Next Token : rec, Posbility: 0.1050
Next Token : opt, Posbility: 0.7773
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0011
Next Token : 1, Posbility: 0.0011
Next Token : 2, Posbility: 0.0107
Next Token :  , Posbility: 0.0226
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0017
Next Token : loop, Posbility: 0.0022
Next Token : iter, Posbility: 0.0210
Next Token : rec, Posbility: 0.0269
Next Token : opt, Posbility: 0.8906
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token : _, Posbility: 0.0156
Next Token :  =, Posbility: 0.0177
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  function, Posbility: 0.0000
Next Token :  match, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  
 score:False
Error type: noerr
---------------------------
Next Token : try, Posbility: 0.0000
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : match, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : square, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match x
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  WITH, Posbility: 0.0000
Next Token :  avec, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
  |
 score:False
Error type: noerr
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
  | []
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
  | [] 
 score:False
Error type: noerr
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
  | [] ->
 score:False
Error type: noerr
---------------------------
Next Token :  nil, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  [], Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find squares of individual elements in a list. *)
let rec squares = function
  | [] -> []
  | x :: xs -> x :: squares xs
in
let rec squares_of_list xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list xs
in
let rec squares_of_list_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_rec xs
in
let rec squares_of_list_iter xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter xs
in
let rec squares_of_list_iter_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_rec xs
in
let rec squares_of_list_iter_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt xs
in
let rec squares_of_list_iter_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_rec xs
in
let rec squares_of_list_iter_opt_opt xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt xs
in
let rec squares_of_list_iter_opt_opt_rec xs =
  match xs with
  | [] -> []
  | x :: xs -> x :: squares_of_list_iter_opt_opt_rec xs
in
let rec squares_of_list_iter_opt_opt_opt xs =
  match xs with
  | [] -> []

 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>