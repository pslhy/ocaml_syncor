code:
 (* Write a function to convert more than one list to nested dictionary. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  make, Posbility: 0.0188
Next Token :  to, Posbility: 0.0212
Next Token :  convert, Posbility: 0.0309
Next Token :  , Posbility: 0.2285
Next Token :  rec, Posbility: 0.5469
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0315
Next Token :  make, Posbility: 0.0457
Next Token :  to, Posbility: 0.0518
Next Token :  convert, Posbility: 0.1099
Next Token :  , Posbility: 0.4922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0420
Next Token : mk, Posbility: 0.0420
Next Token : map, Posbility: 0.0613
Next Token : flatten, Posbility: 0.0889
Next Token : dict, Posbility: 0.1465
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0267
Next Token : s, Posbility: 0.0303
Next Token :  , Posbility: 0.0442
Next Token :  =, Posbility: 0.1738
Next Token : _, Posbility: 0.5352
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0330
Next Token : helper, Posbility: 0.0479
Next Token : list, Posbility: 0.0698
Next Token : to, Posbility: 0.0894
Next Token : of, Posbility: 0.3535
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0014
Next Token :  list, Posbility: 0.0039
Next Token :  =, Posbility: 0.0065
Next Token :  , Posbility: 0.0176
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nested, Posbility: 0.0074
Next Token : pairs, Posbility: 0.0201
Next Token : dict, Posbility: 0.0547
Next Token : lists, Posbility: 0.4043
Next Token : list, Posbility: 0.4043
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0184
Next Token :  l, Posbility: 0.0645
Next Token : _, Posbility: 0.1367
Next Token :  =, Posbility: 0.1758
Next Token :  , Posbility: 0.4766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0381
Next Token : (, Posbility: 0.0918
Next Token : d, Posbility: 0.1040
Next Token : x, Posbility: 0.1709
Next Token : lst, Posbility: 0.2832
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0114
Next Token : s, Posbility: 0.0114
Next Token :  , Posbility: 0.0398
Next Token :  acc, Posbility: 0.0398
Next Token :  =, Posbility: 0.7969
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0052
Next Token :  function, Posbility: 0.0141
Next Token :  match, Posbility: 0.0339
Next Token :  , Posbility: 0.0630
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0049
Next Token : 	, Posbility: 0.0091
Next Token :    , Posbility: 0.0117
Next Token :     , Posbility: 0.1416
Next Token :   , Posbility: 0.8164
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0095
Next Token : List, Posbility: 0.0427
Next Token : if, Posbility: 0.1025
Next Token : let, Posbility: 0.2168
Next Token : match, Posbility: 0.5898
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  [, Posbility: 0.0009
Next Token :  !, Posbility: 0.0010
Next Token :  String, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0004
Next Token : L, Posbility: 0.0005
Next Token : (, Posbility: 0.0017
Next Token : List, Posbility: 0.0140
Next Token : lst, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token : ., Posbility: 0.0005
Next Token :  =, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0024
Next Token :  , Posbility: 0.0031
Next Token :  [, Posbility: 0.0074
Next Token :  [], Posbility: 0.0200
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :       , Posbility: 0.0018
Next Token :    , Posbility: 0.0020
Next Token :     , Posbility: 0.0752
Next Token :   , Posbility: 0.9180
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : [], Posbility: 0.0251
Next Token : [, Posbility: 0.0286
Next Token : |, Posbility: 0.9453
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  null, Posbility: 0.0010
Next Token :  nil, Posbility: 0.0097
Next Token :  , Posbility: 0.0339
Next Token :  [, Posbility: 0.0718
Next Token :  [], Posbility: 0.8750
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0050
Next Token :   , Posbility: 0.0050
Next Token :  |, Posbility: 0.0082
Next Token :  =>, Posbility: 0.0106
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : -, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0003
Next Token : ::, Posbility: 0.0025
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0245
Next Token :  [], Posbility: 0.0405
Next Token : 
, Posbility: 0.0859
Next Token :  {, Posbility: 0.2988
Next Token :  , Posbility: 0.4941
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0432
Next Token : dict, Posbility: 0.0811
Next Token : (, Posbility: 0.0918
Next Token : (), Posbility: 0.0918
Next Token : Dict, Posbility: 0.1709
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token :  {, Posbility: 0.0013
Next Token :  [], Posbility: 0.0015
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : init, Posbility: 0.0072
Next Token : of, Posbility: 0.0173
Next Token : make, Posbility: 0.0684
Next Token : create, Posbility: 0.2109
Next Token : empty, Posbility: 0.6523
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0043
Next Token :  |, Posbility: 0.0132
Next Token :  , Posbility: 0.0150
Next Token : (), Posbility: 0.0281
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0109
Next Token :  {, Posbility: 0.0124
Next Token :  l, Posbility: 0.0232
Next Token :  [, Posbility: 0.1934
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0491
Next Token : (, Posbility: 0.0630
Next Token : _, Posbility: 0.1040
Next Token : x, Posbility: 0.2500
Next Token : hd, Posbility: 0.3633
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0029
Next Token : ,, Posbility: 0.0128
Next Token : :, Posbility: 0.0128
Next Token : ::, Posbility: 0.4785
Next Token :  , Posbility: 0.4785
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : hd, Posbility: 0.0001
Next Token : :, Posbility: 0.0046
Next Token : ->, Posbility: 0.0046
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  l, Posbility: 0.0004
Next Token :  rest, Posbility: 0.0031
Next Token :  [], Posbility: 0.0109
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0047
Next Token : t, Posbility: 0.0212
Next Token : _, Posbility: 0.0240
Next Token : hd, Posbility: 0.0309
Next Token : tl, Posbility: 0.9023
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0009
Next Token :  =>, Posbility: 0.0028
Next Token :   , Posbility: 0.0031
Next Token :  when, Posbility: 0.0045
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0002
Next Token : if, Posbility: 0.0003
Next Token : ::, Posbility: 0.0110
Next Token : ->, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {", Posbility: 0.0013
Next Token :   , Posbility: 0.0021
Next Token :  {, Posbility: 0.0286
Next Token :  , Posbility: 0.3066
Next Token : 
, Posbility: 0.6484
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0118
Next Token :    , Posbility: 0.0134
Next Token :      , Posbility: 0.0249
Next Token :       , Posbility: 0.4414
Next Token :     , Posbility: 0.5000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0144
Next Token : match, Posbility: 0.0305
Next Token : (, Posbility: 0.0347
Next Token : Dict, Posbility: 0.0732
Next Token : let, Posbility: 0.7852
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0199
Next Token :  open, Posbility: 0.0255
Next Token :  key, Posbility: 0.0420
Next Token :  rec, Posbility: 0.2754
Next Token :  , Posbility: 0.4531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : kv, Posbility: 0.0249
Next Token : (, Posbility: 0.0767
Next Token : dict, Posbility: 0.1260
Next Token : d, Posbility: 0.1836
Next Token : hd, Posbility: 0.2676
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0278
Next Token : ,, Posbility: 0.0356
Next Token : ', Posbility: 0.1099
Next Token :  =, Posbility: 0.2324
Next Token : _, Posbility: 0.4922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0315
Next Token : d, Posbility: 0.0518
Next Token : val, Posbility: 0.0518
Next Token : key, Posbility: 0.1406
Next Token : dict, Posbility: 0.3828
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0013
Next Token :  , Posbility: 0.0017
Next Token : _, Posbility: 0.0045
Next Token : ,, Posbility: 0.0096
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {", Posbility: 0.0008
Next Token :   , Posbility: 0.0009
Next Token :  {, Posbility: 0.0056
Next Token : 
, Posbility: 0.0369
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0038
Next Token : (, Posbility: 0.0063
Next Token : hd, Posbility: 0.0063
Next Token : Dict, Posbility: 0.0283
Next Token : dict, Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  {, Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : to, Posbility: 0.0001
Next Token : helper, Posbility: 0.0001
Next Token : from, Posbility: 0.0006
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0004
Next Token : one, Posbility: 0.0004
Next Token : string, Posbility: 0.0007
Next Token : pair, Posbility: 0.0010
Next Token : list, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0012
Next Token : (, Posbility: 0.0017
Next Token :  ~, Posbility: 0.0019
Next Token :  [, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0040
Next Token : tl, Posbility: 0.0065
Next Token : lst, Posbility: 0.0065
Next Token : (, Posbility: 0.0107
Next Token : hd, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0004
Next Token :  , Posbility: 0.0007
Next Token :  |, Posbility: 0.0017
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token : 

, Posbility: 0.0028
Next Token :  , Posbility: 0.0059
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :         , Posbility: 0.0003
Next Token :       , Posbility: 0.0007
Next Token :    , Posbility: 0.0067
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0211
Next Token : hd, Posbility: 0.0393
Next Token : (, Posbility: 0.0505
Next Token : Dict, Posbility: 0.2559
Next Token : let, Posbility: 0.5430
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0060
Next Token :  key, Posbility: 0.0088
Next Token :  new, Posbility: 0.0347
Next Token :  rec, Posbility: 0.2559
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0222
Next Token : dict, Posbility: 0.0366
Next Token : tail, Posbility: 0.0535
Next Token : hd, Posbility: 0.3066
Next Token : tl, Posbility: 0.4473
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : h, Posbility: 0.0003
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0005
Next Token : dic, Posbility: 0.0005
Next Token : lst, Posbility: 0.0015
Next Token : list, Posbility: 0.0066
Next Token : dict, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 0.0024
Next Token : s, Posbility: 0.0096
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  list, Posbility: 0.0004
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0007
Next Token : lst, Posbility: 0.0007
Next Token : map, Posbility: 0.0009
Next Token : Dict, Posbility: 0.0009
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : concat, Posbility: 0.0000
Next Token : list, Posbility: 0.0001
Next Token : from, Posbility: 0.0001
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0000
Next Token : pair, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : hd, Posbility: 0.0000
Next Token : tail, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token : ;, Posbility: 0.0005
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :  in, Posbility: 0.0015
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0004
Next Token :       , Posbility: 0.0006
Next Token :   , Posbility: 0.0007
Next Token :    , Posbility: 0.0601
Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0093
Next Token : if, Posbility: 0.0120
Next Token : (, Posbility: 0.0605
Next Token : Dict, Posbility: 0.3945
Next Token : let, Posbility: 0.4473
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0172
Next Token :  key, Posbility: 0.0250
Next Token :  new, Posbility: 0.0413
Next Token :  rec, Posbility: 0.1855
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : merged, Posbility: 0.0466
Next Token : (, Posbility: 0.0598
Next Token : d, Posbility: 0.0679
Next Token : dict, Posbility: 0.0986
Next Token : hd, Posbility: 0.3027
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0038
Next Token :  , Posbility: 0.0049
Next Token : ,, Posbility: 0.0103
Next Token :  =, Posbility: 0.0405
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0425
Next Token : val, Posbility: 0.0425
Next Token : lst, Posbility: 0.0425
Next Token : dict, Posbility: 0.1895
Next Token : key, Posbility: 0.3125
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0021
Next Token :  , Posbility: 0.0021
Next Token : _, Posbility: 0.0156
Next Token : ,, Posbility: 0.1157
Next Token :  =, Posbility: 0.8555
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0142
Next Token : 
, Posbility: 0.0233
Next Token :  match, Posbility: 0.0233
Next Token :  String, Posbility: 0.1045
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0198
Next Token : head, Posbility: 0.0223
Next Token : Dict, Posbility: 0.1650
Next Token : List, Posbility: 0.2119
Next Token : hd, Posbility: 0.3496
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0258
Next Token :  , Posbility: 0.0332
Next Token : [0], Posbility: 0.0796
Next Token : ., Posbility: 0.0898
Next Token : _, Posbility: 0.6641
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0002
Next Token : name, Posbility: 0.0002
Next Token : key, Posbility: 0.0003
Next Token : list, Posbility: 0.0022
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0087
Next Token :  [, Posbility: 0.0099
Next Token : [, Posbility: 0.0210
Next Token :  , Posbility: 0.0270
Next Token : ., Posbility: 0.8906
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0344
Next Token : Key, Posbility: 0.0728
Next Token : Keys, Posbility: 0.1060
Next Token : keys, Posbility: 0.1543
Next Token : key, Posbility: 0.4746
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0077
Next Token :  , Posbility: 0.0128
Next Token : ;, Posbility: 0.0238
Next Token : _, Posbility: 0.0305
Next Token :  in, Posbility: 0.8906
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 0.0009
Next Token : 

, Posbility: 0.0040
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0005
Next Token :   , Posbility: 0.0007
Next Token :       , Posbility: 0.0010
Next Token :    , Posbility: 0.0085
Next Token :     , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0247
Next Token : match, Posbility: 0.0280
Next Token : (, Posbility: 0.0408
Next Token : Dict, Posbility: 0.1250
Next Token : let, Posbility: 0.7227
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  value, Posbility: 0.0074
Next Token :  key, Posbility: 0.0095
Next Token :  rec, Posbility: 0.0256
Next Token :  new, Posbility: 0.0422
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0079
Next Token : td, Posbility: 0.0079
Next Token : val, Posbility: 0.0216
Next Token : hd, Posbility: 0.4355
Next Token : tl, Posbility: 0.4355
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : h, Posbility: 0.0002
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0062
Next Token : val, Posbility: 0.0170
Next Token : value, Posbility: 0.0170
Next Token : dict, Posbility: 0.0170
Next Token : key, Posbility: 0.9258
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :   , Posbility: 0.0009
Next Token : _, Posbility: 0.0036
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0008
Next Token :  match, Posbility: 0.0008
Next Token :  String, Posbility: 0.0017
Next Token : 
, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0024
Next Token : dict, Posbility: 0.0024
Next Token : (, Posbility: 0.0039
Next Token : Dict, Posbility: 0.0107
Next Token : tl, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : [0]., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0000
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0001
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0]., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : keys, Posbility: 0.0002
Next Token : first, Posbility: 0.0002
Next Token : value, Posbility: 0.0003
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0005
Next Token :       , Posbility: 0.0009
Next Token :   , Posbility: 0.0011
Next Token :    , Posbility: 0.0179
Next Token :     , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0249
Next Token : (, Posbility: 0.0527
Next Token : if, Posbility: 0.0527
Next Token : Dict, Posbility: 0.2363
Next Token : let, Posbility: 0.5664
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  value, Posbility: 0.0132
Next Token :  key, Posbility: 0.0132
Next Token :  new, Posbility: 0.0593
Next Token :  rec, Posbility: 0.0762
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0187
Next Token : dict, Posbility: 0.0211
Next Token : merged, Posbility: 0.0239
Next Token : val, Posbility: 0.0396
Next Token : hd, Posbility: 0.6992
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 0.0004
Next Token :  =, Posbility: 0.0076
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : data, Posbility: 0.0197
Next Token : v, Posbility: 0.0197
Next Token : key, Posbility: 0.0197
Next Token : value, Posbility: 0.3945
Next Token : val, Posbility: 0.3945
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : ,, Posbility: 0.0007
Next Token : _, Posbility: 0.0046
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0008
Next Token :  Some, Posbility: 0.0031
Next Token : 
, Posbility: 0.0040
Next Token :  {, Posbility: 0.0051
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0049
Next Token : head, Posbility: 0.0063
Next Token : (, Posbility: 0.0081
Next Token : Dict, Posbility: 0.0220
Next Token : hd, Posbility: 0.9336
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token : ., Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0001
Next Token : val, Posbility: 0.0002
Next Token : list, Posbility: 0.0002
Next Token : key, Posbility: 0.0007
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 0.0005
Next Token : [, Posbility: 0.0013
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0037
Next Token : data, Posbility: 0.0054
Next Token : (, Posbility: 0.0114
Next Token : value, Posbility: 0.3340
Next Token : val, Posbility: 0.6211
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0027
Next Token :  , Posbility: 0.0035
Next Token :  |, Posbility: 0.0040
Next Token : _, Posbility: 0.0051
Next Token :  in, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val in
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0276
Next Token : ex, Posbility: 0.0400
Next Token : or, Posbility: 0.0962
Next Token : list, Posbility: 0.1235
Next Token : opt, Posbility: 0.2041
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0054
Next Token :  |, Posbility: 0.0089
Next Token : _, Posbility: 0.0101
Next Token :  , Posbility: 0.0398
Next Token :  in, Posbility: 0.9102
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :    , Posbility: 0.0006
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Dict, Posbility: 0.0030
Next Token : (, Posbility: 0.0064
Next Token : if, Posbility: 0.0135
Next Token : match, Posbility: 0.0223
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  new, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : td, Posbility: 0.0003
Next Token : val, Posbility: 0.0007
Next Token : (, Posbility: 0.0009
Next Token : hd, Posbility: 0.0025
Next Token : tl, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0002
Next Token : vals, Posbility: 0.0002
Next Token : dict, Posbility: 0.0002
Next Token : key, Posbility: 0.0007
Next Token : val, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0004
Next Token :  match, Posbility: 0.0007
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hd, Posbility: 0.0003
Next Token : if, Posbility: 0.0005
Next Token : Dict, Posbility: 0.0005
Next Token : (, Posbility: 0.0015
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : opt, Posbility: 0.0001
Next Token : key, Posbility: 0.0001
Next Token : value, Posbility: 0.0002
Next Token : get, Posbility: 0.0004
Next Token : val, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : (), Posbility: 0.0001
Next Token :  in, Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : option, Posbility: 0.0003
Next Token : optional, Posbility: 0.0003
Next Token : list, Posbility: 0.0003
Next Token : op, Posbility: 0.0003
Next Token : opt, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0259
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0007
Next Token :       , Posbility: 0.0013
Next Token :   , Posbility: 0.0015
Next Token :    , Posbility: 0.0259
Next Token :     , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0442
Next Token : match, Posbility: 0.1060
Next Token : Dict, Posbility: 0.1367
Next Token : if, Posbility: 0.1748
Next Token : let, Posbility: 0.4766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0187
Next Token :  key, Posbility: 0.0239
Next Token :  rec, Posbility: 0.0947
Next Token :  new, Posbility: 0.1074
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : d, Posbility: 0.0334
Next Token : merged, Posbility: 0.0334
Next Token : dict, Posbility: 0.0381
Next Token : val, Posbility: 0.0430
Next Token : hd, Posbility: 0.5234
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0005
Next Token :  , Posbility: 0.0009
Next Token : s, Posbility: 0.0015
Next Token :  =, Posbility: 0.0258
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : new, Posbility: 0.0388
Next Token : rest, Posbility: 0.0498
Next Token : key, Posbility: 0.0640
Next Token : val, Posbility: 0.1357
Next Token : dict, Posbility: 0.1533
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0059
Next Token : 2, Posbility: 0.0339
Next Token : _, Posbility: 0.1953
Next Token : ', Posbility: 0.1953
Next Token :  =, Posbility: 0.5312
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Hash, Posbility: 0.0038
Next Token :  match, Posbility: 0.0131
Next Token :  {, Posbility: 0.0356
Next Token : 
, Posbility: 0.2051
Next Token :  , Posbility: 0.7148
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dict, Posbility: 0.0276
Next Token : if, Posbility: 0.0454
Next Token : (, Posbility: 0.0659
Next Token : hd, Posbility: 0.1582
Next Token : Dict, Posbility: 0.5547
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 0.0006
Next Token : (, Posbility: 0.0008
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : set, Posbility: 0.0305
Next Token : assoc, Posbility: 0.0347
Next Token : insert, Posbility: 0.0830
Next Token : make, Posbility: 0.0942
Next Token : add, Posbility: 0.5430
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0028
Next Token :  ~, Posbility: 0.0052
Next Token :  {, Posbility: 0.0060
Next Token : _, Posbility: 0.0928
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0023
Next Token : tl, Posbility: 0.0023
Next Token : Dict, Posbility: 0.0023
Next Token : (, Posbility: 0.0469
Next Token : hd, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token :  key, Posbility: 0.0012
Next Token : ., Posbility: 0.0013
Next Token :  , Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : keys, Posbility: 0.0000
Next Token : val, Posbility: 0.0066
Next Token : dict, Posbility: 0.0178
Next Token : key, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0015
Next Token :  true, Posbility: 0.0017
Next Token :  [], Posbility: 0.0019
Next Token :  ~, Posbility: 0.0095
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0040
Next Token : Option, Posbility: 0.0040
Next Token : tl, Posbility: 0.0085
Next Token : (, Posbility: 0.1719
Next Token : hd, Posbility: 0.7695
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token : ., Posbility: 0.0003
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0001
Next Token : value, Posbility: 0.0003
Next Token : key, Posbility: 0.0009
Next Token : dict, Posbility: 0.0179
Next Token : val, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0021
Next Token :  Some, Posbility: 0.0024
Next Token : ;, Posbility: 0.0031
Next Token :  None, Posbility: 0.0035
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dict, Posbility: 0.0009
Next Token : lst, Posbility: 0.0009
Next Token : Dict, Posbility: 0.0038
Next Token : (, Posbility: 0.0469
Next Token : hd, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  in, Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0014
Next Token :  |, Posbility: 0.0023
Next Token :  , Posbility: 0.0038
Next Token : ;, Posbility: 0.0469
Next Token :  in, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0005
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0050
Next Token : match, Posbility: 0.0050
Next Token : (, Posbility: 0.0082
Next Token : Dict, Posbility: 0.0175
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  new, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : td, Posbility: 0.0003
Next Token : dict, Posbility: 0.0003
Next Token : hd, Posbility: 0.0025
Next Token : tl, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0002
Next Token : list, Posbility: 0.0007
Next Token : key, Posbility: 0.0015
Next Token : val, Posbility: 0.0041
Next Token : dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token : 
, Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0007
Next Token : List, Posbility: 0.0007
Next Token : dict, Posbility: 0.0009
Next Token : tl, Posbility: 0.0012
Next Token : Dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : merge, Posbility: 0.0012
Next Token : delete, Posbility: 0.0015
Next Token : replace, Posbility: 0.0019
Next Token : remove, Posbility: 0.0085
Next Token : add, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0002
Next Token : _, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0001
Next Token : td, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : hd, Posbility: 0.0009
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : name, Posbility: 0.0000
Next Token : keys, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0001
Next Token :  None, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (), Posbility: 0.0001
Next Token : (, Posbility: 0.0012
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : vals, Posbility: 0.0000
Next Token : dict, Posbility: 0.0003
Next Token : val, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : td, Posbility: 0.0001
Next Token : hl, Posbility: 0.0001
Next Token : hd, Posbility: 0.0025
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : df, Posbility: 0.0000
Next Token : dist, Posbility: 0.0000
Next Token : dic, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0003
Next Token :       , Posbility: 0.0005
Next Token :   , Posbility: 0.0009
Next Token :    , Posbility: 0.0259
Next Token :     , Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0216
Next Token : dict, Posbility: 0.0245
Next Token : (, Posbility: 0.0518
Next Token : Dict, Posbility: 0.3828
Next Token : let, Posbility: 0.4336
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0124
Next Token :  res, Posbility: 0.0262
Next Token :  new, Posbility: 0.0713
Next Token :  rec, Posbility: 0.0913
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tl, Posbility: 0.0403
Next Token : lst, Posbility: 0.0518
Next Token : d, Posbility: 0.0586
Next Token : dict, Posbility: 0.2314
Next Token : hd, Posbility: 0.2969
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0014
Next Token : ,, Posbility: 0.0038
Next Token : s, Posbility: 0.0038
Next Token :  =, Posbility: 0.0664
Next Token : _, Posbility: 0.9180
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0288
Next Token : list, Posbility: 0.0476
Next Token : val, Posbility: 0.0786
Next Token : key, Posbility: 0.1006
Next Token : dict, Posbility: 0.4512
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0036
Next Token : s, Posbility: 0.0059
Next Token : ,, Posbility: 0.0437
Next Token : _, Posbility: 0.0559
Next Token :  =, Posbility: 0.8750
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Hash, Posbility: 0.0011
Next Token :  {, Posbility: 0.0038
Next Token :  match, Posbility: 0.0063
Next Token : 
, Posbility: 0.0464
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0095
Next Token : List, Posbility: 0.0156
Next Token : hd, Posbility: 0.0156
Next Token : dict, Posbility: 0.0703
Next Token : Dict, Posbility: 0.8555
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0013
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0148
Next Token : update, Posbility: 0.0190
Next Token : remove, Posbility: 0.0216
Next Token : merge, Posbility: 0.0457
Next Token : add, Posbility: 0.8125
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0036
Next Token :  ', Posbility: 0.0046
Next Token : _, Posbility: 0.0630
Next Token :  ", Posbility: 0.1338
Next Token :  , Posbility: 0.7695
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tl, Posbility: 0.0043
Next Token : head, Posbility: 0.0055
Next Token : Dict, Posbility: 0.0055
Next Token : (, Posbility: 0.0356
Next Token : hd, Posbility: 0.9219
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0005
Next Token :  key, Posbility: 0.0008
Next Token : ., Posbility: 0.0075
Next Token :  , Posbility: 0.0109
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0002
Next Token : list, Posbility: 0.0014
Next Token : val, Posbility: 0.0062
Next Token : dict, Posbility: 0.0752
Next Token : key, Posbility: 0.9141
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0088
Next Token :  "", Posbility: 0.0088
Next Token :  ", Posbility: 0.0187
Next Token :  [, Posbility: 0.0187
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0156
Next Token : tl, Posbility: 0.0177
Next Token : Dict, Posbility: 0.1309
Next Token : (, Posbility: 0.2441
Next Token : hd, Posbility: 0.5156
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token : ., Posbility: 0.0007
Next Token :  in, Posbility: 0.0066
Next Token :  , Posbility: 0.0139
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0003
Next Token : list, Posbility: 0.0038
Next Token : key, Posbility: 0.0170
Next Token : val, Posbility: 0.0461
Next Token : dict, Posbility: 0.9297
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0034
Next Token : ., Posbility: 0.0104
Next Token : _, Posbility: 0.0250
Next Token :  , Posbility: 0.3047
Next Token :  in, Posbility: 0.6445
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0002
Next Token :   , Posbility: 0.0010
Next Token : 

, Posbility: 0.0027
Next Token :  , Posbility: 0.0179
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0004
Next Token :       , Posbility: 0.0006
Next Token :    , Posbility: 0.0229
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0229
Next Token : (, Posbility: 0.0483
Next Token : hd, Posbility: 0.0623
Next Token : Dict, Posbility: 0.1914
Next Token : let, Posbility: 0.5898
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0021
Next Token :  res, Posbility: 0.0027
Next Token :  rec, Posbility: 0.0035
Next Token :  new, Posbility: 0.0058
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : td, Posbility: 0.0022
Next Token : (, Posbility: 0.0060
Next Token : dict, Posbility: 0.0162
Next Token : hd, Posbility: 0.0442
Next Token : tl, Posbility: 0.8867
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0003
Next Token : list, Posbility: 0.0065
Next Token : val, Posbility: 0.0065
Next Token : key, Posbility: 0.0108
Next Token : dict, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : s, Posbility: 0.0004
Next Token :  in, Posbility: 0.0005
Next Token : _, Posbility: 0.0022
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Add, Posbility: 0.0001
Next Token :  match, Posbility: 0.0006
Next Token :  {, Posbility: 0.0007
Next Token : 
, Posbility: 0.0109
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0040
Next Token : tl, Posbility: 0.0040
Next Token : hd, Posbility: 0.0040
Next Token : dict, Posbility: 0.0066
Next Token : Dict, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0011
Next Token : update, Posbility: 0.0019
Next Token : remove, Posbility: 0.0051
Next Token : merge, Posbility: 0.0137
Next Token : add, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token :  ", Posbility: 0.0013
Next Token : _, Posbility: 0.0046
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0002
Next Token : td, Posbility: 0.0003
Next Token : (, Posbility: 0.0025
Next Token : hd, Posbility: 0.0067
Next Token : tl, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : dict, Posbility: 0.0004
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0003
Next Token :  [], Posbility: 0.0004
Next Token :  [, Posbility: 0.0006
Next Token :  None, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : hd, Posbility: 0.0008
Next Token : Dict, Posbility: 0.0012
Next Token : (, Posbility: 0.0025
Next Token : tl, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0001
Next Token : val, Posbility: 0.0229
Next Token : dict, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0097
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :       , Posbility: 0.0005
Next Token :   , Posbility: 0.0011
Next Token :    , Posbility: 0.0330
Next Token :     , Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0215
Next Token : hd, Posbility: 0.0354
Next Token : (, Posbility: 0.0583
Next Token : Dict, Posbility: 0.2969
Next Token : let, Posbility: 0.4883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0117
Next Token :  res, Posbility: 0.0249
Next Token :  new, Posbility: 0.0464
Next Token :  rec, Posbility: 0.0767
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tl, Posbility: 0.0302
Next Token : lst, Posbility: 0.0386
Next Token : d, Posbility: 0.0496
Next Token : dict, Posbility: 0.1348
Next Token : hd, Posbility: 0.4707
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0008
Next Token : ,, Posbility: 0.0018
Next Token : s, Posbility: 0.0024
Next Token :  =, Posbility: 0.0371
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0149
Next Token : lst, Posbility: 0.0149
Next Token : key, Posbility: 0.0405
Next Token : val, Posbility: 0.0405
Next Token : dict, Posbility: 0.8125
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0013
Next Token : s, Posbility: 0.0016
Next Token : ,, Posbility: 0.0121
Next Token : _, Posbility: 0.0156
Next Token :  =, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Hash, Posbility: 0.0004
Next Token :  match, Posbility: 0.0011
Next Token :  {, Posbility: 0.0031
Next Token : 
, Posbility: 0.0291
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0036
Next Token : hd, Posbility: 0.0060
Next Token : List, Posbility: 0.0099
Next Token : dict, Posbility: 0.0728
Next Token : Dict, Posbility: 0.8906
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0006
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0054
Next Token : assoc, Posbility: 0.0054
Next Token : update, Posbility: 0.0114
Next Token : merge, Posbility: 0.0349
Next Token : add, Posbility: 0.9023
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0011
Next Token : 
, Posbility: 0.0014
Next Token : _, Posbility: 0.0220
Next Token :  ", Posbility: 0.0283
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Dict, Posbility: 0.0022
Next Token : head, Posbility: 0.0036
Next Token : (, Posbility: 0.0265
Next Token : tl, Posbility: 0.0718
Next Token : hd, Posbility: 0.8750
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  key, Posbility: 0.0001
Next Token : ., Posbility: 0.0006
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0001
Next Token : list, Posbility: 0.0009
Next Token : val, Posbility: 0.0171
Next Token : dict, Posbility: 0.0464
Next Token : key, Posbility: 0.9336
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0027
Next Token :  ", Posbility: 0.0050
Next Token :  {, Posbility: 0.0064
Next Token :  [, Posbility: 0.0106
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0067
Next Token : tl, Posbility: 0.0182
Next Token : Dict, Posbility: 0.0635
Next Token : (, Posbility: 0.1045
Next Token : hd, Posbility: 0.7734
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : ., Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  in, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0002
Next Token : list, Posbility: 0.0009
Next Token : key, Posbility: 0.0015
Next Token : val, Posbility: 0.0292
Next Token : dict, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token : ., Posbility: 0.0019
Next Token : _, Posbility: 0.0021
Next Token :  , Posbility: 0.0140
Next Token :  in, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : 

, Posbility: 0.0028
Next Token :  , Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0007
Next Token :       , Posbility: 0.0008
Next Token :    , Posbility: 0.0259
Next Token :     , Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0189
Next Token : (, Posbility: 0.0400
Next Token : hd, Posbility: 0.0850
Next Token : Dict, Posbility: 0.1582
Next Token : let, Posbility: 0.6250
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0021
Next Token :  res, Posbility: 0.0027
Next Token :  new, Posbility: 0.0040
Next Token :  rec, Posbility: 0.0040
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0020
Next Token : (, Posbility: 0.0055
Next Token : dict, Posbility: 0.0150
Next Token : hd, Posbility: 0.1108
Next Token : tl, Posbility: 0.8203
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0003
Next Token : key, Posbility: 0.0066
Next Token : list, Posbility: 0.0066
Next Token : val, Posbility: 0.0066
Next Token : dict, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Next Token : _, Posbility: 0.0012
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Add, Posbility: 0.0001
Next Token :  match, Posbility: 0.0004
Next Token :  {, Posbility: 0.0007
Next Token : 
, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0040
Next Token : dict, Posbility: 0.0040
Next Token : tl, Posbility: 0.0040
Next Token : hd, Posbility: 0.0051
Next Token : Dict, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0006
Next Token : update, Posbility: 0.0011
Next Token : remove, Posbility: 0.0011
Next Token : merge, Posbility: 0.0096
Next Token : add, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  ", Posbility: 0.0019
Next Token : _, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0002
Next Token : td, Posbility: 0.0003
Next Token : (, Posbility: 0.0025
Next Token : hd, Posbility: 0.0067
Next Token : tl, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0002
Next Token : dict, Posbility: 0.0005
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token :  None, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : Dict, Posbility: 0.0002
Next Token : hd, Posbility: 0.0005
Next Token : (, Posbility: 0.0008
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0059
Next Token : dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token :  , Posbility: 0.0017
Next Token : 

, Posbility: 0.0076
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :       , Posbility: 0.0005
Next Token :   , Posbility: 0.0013
Next Token :    , Posbility: 0.0330
Next Token :     , Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0151
Next Token : hd, Posbility: 0.0410
Next Token : (, Posbility: 0.0466
Next Token : Dict, Posbility: 0.1836
Next Token : let, Posbility: 0.6406
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0058
Next Token :  res, Posbility: 0.0109
Next Token :  new, Posbility: 0.0179
Next Token :  rec, Posbility: 0.0381
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : d, Posbility: 0.0253
Next Token : lst, Posbility: 0.0253
Next Token : tl, Posbility: 0.0325
Next Token : dict, Posbility: 0.0688
Next Token : hd, Posbility: 0.6523
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : ,, Posbility: 0.0005
Next Token : s, Posbility: 0.0012
Next Token :  =, Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0057
Next Token : list, Posbility: 0.0154
Next Token : key, Posbility: 0.0420
Next Token : val, Posbility: 0.0420
Next Token : dict, Posbility: 0.8438
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token : s, Posbility: 0.0007
Next Token : ,, Posbility: 0.0040
Next Token : _, Posbility: 0.0066
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  match, Posbility: 0.0003
Next Token :  {, Posbility: 0.0019
Next Token : 
, Posbility: 0.0140
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0023
Next Token : List, Posbility: 0.0049
Next Token : hd, Posbility: 0.0049
Next Token : dict, Posbility: 0.0366
Next Token : Dict, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : set, Posbility: 0.0027
Next Token : assoc, Posbility: 0.0030
Next Token : update, Posbility: 0.0050
Next Token : merge, Posbility: 0.0197
Next Token : add, Posbility: 0.9492
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0005
Next Token : 
, Posbility: 0.0008
Next Token : _, Posbility: 0.0084
Next Token :  ", Posbility: 0.0108
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (", Posbility: 0.0003
Next Token : head, Posbility: 0.0009
Next Token : (, Posbility: 0.0064
Next Token : tl, Posbility: 0.0289
Next Token : hd, Posbility: 0.9570
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : ., Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0003
Next Token : val, Posbility: 0.0040
Next Token : dict, Posbility: 0.0109
Next Token : key, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0007
Next Token :  ", Posbility: 0.0012
Next Token :  {, Posbility: 0.0013
Next Token :  [, Posbility: 0.0028
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0009
Next Token : tl, Posbility: 0.0065
Next Token : Dict, Posbility: 0.0065
Next Token : (, Posbility: 0.0107
Next Token : hd, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0001
Next Token : key, Posbility: 0.0003
Next Token : list, Posbility: 0.0005
Next Token : val, Posbility: 0.0179
Next Token : dict, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0012
Next Token :  , Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :    , Posbility: 0.0067
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0094
Next Token : (, Posbility: 0.0199
Next Token : hd, Posbility: 0.0199
Next Token : Dict, Posbility: 0.0698
Next Token : let, Posbility: 0.8477
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0004
Next Token :  res, Posbility: 0.0005
Next Token :  new, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0009
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0009
Next Token : dict, Posbility: 0.0009
Next Token : hd, Posbility: 0.0178
Next Token : tl, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dic, Posbility: 0.0001
Next Token : key, Posbility: 0.0013
Next Token : val, Posbility: 0.0013
Next Token : list, Posbility: 0.0019
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Add, Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0015
Next Token : dict, Posbility: 0.0015
Next Token : tl, Posbility: 0.0015
Next Token : hd, Posbility: 0.0022
Next Token : Dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0002
Next Token : remove, Posbility: 0.0002
Next Token : update, Posbility: 0.0003
Next Token : merge, Posbility: 0.0028
Next Token : add, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  ", Posbility: 0.0009
Next Token : _, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0001
Next Token : td, Posbility: 0.0002
Next Token : (, Posbility: 0.0009
Next Token : hd, Posbility: 0.0067
Next Token : tl, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : dict, Posbility: 0.0001
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : Dict, Posbility: 0.0000
Next Token : hd, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0019
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0007
Next Token :   , Posbility: 0.0016
Next Token :    , Posbility: 0.0371
Next Token :     , Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0132
Next Token : (, Posbility: 0.0361
Next Token : hd, Posbility: 0.0464
Next Token : Dict, Posbility: 0.1260
Next Token : let, Posbility: 0.7227
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0029
Next Token :  res, Posbility: 0.0062
Next Token :  new, Posbility: 0.0091
Next Token :  rec, Posbility: 0.0192
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0093
Next Token : d, Posbility: 0.0093
Next Token : dict, Posbility: 0.0254
Next Token : tl, Posbility: 0.0254
Next Token : hd, Posbility: 0.8398
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : ,, Posbility: 0.0002
Next Token : s, Posbility: 0.0004
Next Token :  =, Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0014
Next Token : list, Posbility: 0.0063
Next Token : key, Posbility: 0.0171
Next Token : val, Posbility: 0.0281
Next Token : dict, Posbility: 0.9297
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : ,, Posbility: 0.0012
Next Token : _, Posbility: 0.0022
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0001
Next Token :  match, Posbility: 0.0002
Next Token :  {, Posbility: 0.0009
Next Token : 
, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0011
Next Token : List, Posbility: 0.0031
Next Token : hd, Posbility: 0.0045
Next Token : dict, Posbility: 0.0200
Next Token : Dict, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0010
Next Token : assoc, Posbility: 0.0011
Next Token : update, Posbility: 0.0015
Next Token : merge, Posbility: 0.0075
Next Token : add, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0005
Next Token : 
, Posbility: 0.0005
Next Token : _, Posbility: 0.0045
Next Token :  ", Posbility: 0.0075
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ht, Posbility: 0.0003
Next Token : head, Posbility: 0.0009
Next Token : (, Posbility: 0.0040
Next Token : tl, Posbility: 0.0178
Next Token : hd, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0001
Next Token : val, Posbility: 0.0012
Next Token : dict, Posbility: 0.0032
Next Token : key, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0002
Next Token :  ~, Posbility: 0.0002
Next Token :  ", Posbility: 0.0003
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0003
Next Token : Dict, Posbility: 0.0015
Next Token : tl, Posbility: 0.0017
Next Token : (, Posbility: 0.0025
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0000
Next Token : key, Posbility: 0.0001
Next Token : list, Posbility: 0.0001
Next Token : val, Posbility: 0.0052
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :    , Posbility: 0.0017
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0038
Next Token : (, Posbility: 0.0081
Next Token : hd, Posbility: 0.0081
Next Token : Dict, Posbility: 0.0283
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  result, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : dict, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : hd, Posbility: 0.0067
Next Token : tl, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0004
Next Token : val, Posbility: 0.0005
Next Token : list, Posbility: 0.0009
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Add, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dict, Posbility: 0.0005
Next Token : List, Posbility: 0.0006
Next Token : tl, Posbility: 0.0009
Next Token : hd, Posbility: 0.0010
Next Token : Dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : remove, Posbility: 0.0001
Next Token : update, Posbility: 0.0001
Next Token : map, Posbility: 0.0001
Next Token : merge, Posbility: 0.0013
Next Token : add, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  ", Posbility: 0.0004
Next Token : _, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0001
Next Token : td, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : hd, Posbility: 0.0041
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : keys, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : Dict, Posbility: 0.0000
Next Token : hd, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0006
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :   , Posbility: 0.0011
Next Token :    , Posbility: 0.0330
Next Token :     , Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0113
Next Token : (, Posbility: 0.0271
Next Token : hd, Posbility: 0.0308
Next Token : Dict, Posbility: 0.0947
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0014
Next Token :  res, Posbility: 0.0031
Next Token :  new, Posbility: 0.0045
Next Token :  rec, Posbility: 0.0094
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0023
Next Token : head, Posbility: 0.0023
Next Token : dict, Posbility: 0.0063
Next Token : tl, Posbility: 0.0172
Next Token : hd, Posbility: 0.9414
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0007
Next Token : list, Posbility: 0.0039
Next Token : key, Posbility: 0.0107
Next Token : val, Posbility: 0.0107
Next Token : dict, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : ,, Posbility: 0.0006
Next Token : _, Posbility: 0.0012
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :  {, Posbility: 0.0005
Next Token : 
, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : List, Posbility: 0.0019
Next Token : hd, Posbility: 0.0051
Next Token : dict, Posbility: 0.0096
Next Token : Dict, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0005
Next Token : assoc, Posbility: 0.0006
Next Token : update, Posbility: 0.0008
Next Token : merge, Posbility: 0.0046
Next Token : add, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0019
Next Token :  ", Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ht, Posbility: 0.0002
Next Token : head, Posbility: 0.0005
Next Token : (, Posbility: 0.0024
Next Token : tl, Posbility: 0.0085
Next Token : hd, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0004
Next Token : dict, Posbility: 0.0009
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Dict, Posbility: 0.0003
Next Token : tl, Posbility: 0.0006
Next Token : (, Posbility: 0.0009
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0019
Next Token : dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :    , Posbility: 0.0010
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0019
Next Token : hd, Posbility: 0.0039
Next Token : (, Posbility: 0.0051
Next Token : Dict, Posbility: 0.0138
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dict, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : hd, Posbility: 0.0041
Next Token : tl, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0002
Next Token : val, Posbility: 0.0003
Next Token : list, Posbility: 0.0006
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Add, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dict, Posbility: 0.0004
Next Token : List, Posbility: 0.0004
Next Token : hd, Posbility: 0.0005
Next Token : tl, Posbility: 0.0007
Next Token : Dict, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : update, Posbility: 0.0000
Next Token : remove, Posbility: 0.0000
Next Token : map, Posbility: 0.0001
Next Token : merge, Posbility: 0.0005
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : td, Posbility: 0.0000
Next Token : hl, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : hd, Posbility: 0.0028
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : keys, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : Dict, Posbility: 0.0000
Next Token : hd, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0006
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0076
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0005
Next Token :   , Posbility: 0.0006
Next Token :    , Posbility: 0.0259
Next Token :     , Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0115
Next Token : (, Posbility: 0.0276
Next Token : hd, Posbility: 0.0312
Next Token : Dict, Posbility: 0.0850
Next Token : let, Posbility: 0.8047
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0008
Next Token :  res, Posbility: 0.0013
Next Token :  new, Posbility: 0.0019
Next Token :  rec, Posbility: 0.0045
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0024
Next Token : head, Posbility: 0.0024
Next Token : dict, Posbility: 0.0039
Next Token : tl, Posbility: 0.0106
Next Token : hd, Posbility: 0.9531
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0005
Next Token : list, Posbility: 0.0040
Next Token : key, Posbility: 0.0084
Next Token : val, Posbility: 0.0107
Next Token : dict, Posbility: 0.9688
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : ,, Posbility: 0.0004
Next Token : _, Posbility: 0.0009
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  {, Posbility: 0.0004
Next Token : 
, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : List, Posbility: 0.0012
Next Token : hd, Posbility: 0.0040
Next Token : dict, Posbility: 0.0052
Next Token : Dict, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assoc, Posbility: 0.0004
Next Token : update, Posbility: 0.0004
Next Token : map, Posbility: 0.0005
Next Token : merge, Posbility: 0.0028
Next Token : add, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : _, Posbility: 0.0015
Next Token :  ", Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ht, Posbility: 0.0001
Next Token : head, Posbility: 0.0004
Next Token : (, Posbility: 0.0017
Next Token : tl, Posbility: 0.0052
Next Token : hd, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0002
Next Token : dict, Posbility: 0.0005
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Dict, Posbility: 0.0001
Next Token : tl, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0015
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :    , Posbility: 0.0006
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0013
Next Token : (, Posbility: 0.0035
Next Token : hd, Posbility: 0.0040
Next Token : Dict, Posbility: 0.0085
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hl, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : hd, Posbility: 0.0032
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0001
Next Token : val, Posbility: 0.0001
Next Token : list, Posbility: 0.0005
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0002
Next Token : dict, Posbility: 0.0002
Next Token : hd, Posbility: 0.0002
Next Token : tl, Posbility: 0.0003
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : update, Posbility: 0.0000
Next Token : combine, Posbility: 0.0000
Next Token : map, Posbility: 0.0001
Next Token : merge, Posbility: 0.0003
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : td, Posbility: 0.0000
Next Token : hl, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 0.0019
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : keys, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Dict, Posbility: 0.0000
Next Token : hl, Posbility: 0.0000
Next Token : hd, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0007
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :   , Posbility: 0.0008
Next Token :    , Posbility: 0.0229
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0084
Next Token : (, Posbility: 0.0203
Next Token : hd, Posbility: 0.0260
Next Token : Dict, Posbility: 0.0549
Next Token : let, Posbility: 0.8594
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0006
Next Token :  res, Posbility: 0.0010
Next Token :  new, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0036
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0014
Next Token : head, Posbility: 0.0014
Next Token : (, Posbility: 0.0024
Next Token : tl, Posbility: 0.0107
Next Token : hd, Posbility: 0.9648
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: noerr
---------------------------
Next Token : value, Posbility: 0.0003
Next Token : list, Posbility: 0.0024
Next Token : key, Posbility: 0.0045
Next Token : val, Posbility: 0.0075
Next Token : dict, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 0.0002
Next Token : _, Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : List, Posbility: 0.0009
Next Token : dict, Posbility: 0.0036
Next Token : hd, Posbility: 0.0052
Next Token : Dict, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: noerr
---------------------------
Next Token : assoc, Posbility: 0.0002
Next Token : update, Posbility: 0.0003
Next Token : map, Posbility: 0.0004
Next Token : merge, Posbility: 0.0019
Next Token : add, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: noerr
---------------------------
Next Token :  ', Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0010
Next Token :  ", Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: noerr
---------------------------
Next Token : ht, Posbility: 0.0001
Next Token : head, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : tl, Posbility: 0.0017
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: noerr
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : dict, Posbility: 0.0002
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: noerr
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : Dict, Posbility: 0.0001
Next Token : tl, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: noerr
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0007
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0006
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0012
Next Token : hd, Posbility: 0.0022
Next Token : (, Posbility: 0.0028
Next Token : Dict, Posbility: 0.0075
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : hl, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 0.0017
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: noerr
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : key, Posbility: 0.0001
Next Token : list, Posbility: 0.0004
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: noerr
---------------------------
Next Token : hd, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : dict, Posbility: 0.0002
Next Token : tl, Posbility: 0.0002
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: noerr
---------------------------
Next Token : combine, Posbility: 0.0000
Next Token : addAll, Posbility: 0.0000
Next Token : map, Posbility: 0.0001
Next Token : merge, Posbility: 0.0002
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: noerr
---------------------------
Next Token :  ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: noerr
---------------------------
Next Token : td, Posbility: 0.0000
Next Token : hl, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 0.0015
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: noerr
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: noerr
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : keys, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: noerr
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : til, Posbility: 0.0000
Next Token : hd, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: noerr
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0008
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :   , Posbility: 0.0008
Next Token :    , Posbility: 0.0229
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0083
Next Token : (, Posbility: 0.0256
Next Token : hd, Posbility: 0.0330
Next Token : Dict, Posbility: 0.0542
Next Token : let, Posbility: 0.8477
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0004
Next Token :  res, Posbility: 0.0006
Next Token :  new, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0025
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : head, Posbility: 0.0015
Next Token : dict, Posbility: 0.0015
Next Token : (, Posbility: 0.0024
Next Token : tl, Posbility: 0.0066
Next Token : hd, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: noerr
---------------------------
Next Token : value, Posbility: 0.0003
Next Token : list, Posbility: 0.0024
Next Token : key, Posbility: 0.0045
Next Token : val, Posbility: 0.0059
Next Token : dict, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 0.0002
Next Token : _, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : List, Posbility: 0.0006
Next Token : dict, Posbility: 0.0025
Next Token : hd, Posbility: 0.0046
Next Token : Dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: noerr
---------------------------
Next Token : assoc, Posbility: 0.0002
Next Token : update, Posbility: 0.0002
Next Token : map, Posbility: 0.0003
Next Token : merge, Posbility: 0.0013
Next Token : add, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ', Posbility: 0.0001
Next Token : _, Posbility: 0.0008
Next Token :  ", Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: noerr
---------------------------
Next Token : HD, Posbility: 0.0001
Next Token : head, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : tl, Posbility: 0.0009
Next Token : hd, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: noerr
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : dict, Posbility: 0.0001
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: noerr
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : Dict, Posbility: 0.0001
Next Token : tl, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: noerr
---------------------------
Next Token : key, Posbility: 0.0000
Next Token : dic, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0002
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0006
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0008
Next Token : hd, Posbility: 0.0019
Next Token : (, Posbility: 0.0024
Next Token : Dict, Posbility: 0.0059
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  rec, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 0.0013
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: noerr
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : key, Posbility: 0.0001
Next Token : list, Posbility: 0.0002
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: noerr
---------------------------
Next Token : hd, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : dict, Posbility: 0.0001
Next Token : tl, Posbility: 0.0002
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: noerr
---------------------------
Next Token : sub, Posbility: 0.0000
Next Token : combine, Posbility: 0.0000
Next Token : map, Posbility: 0.0000
Next Token : merge, Posbility: 0.0002
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: noerr
---------------------------
Next Token : sl, Posbility: 0.0000
Next Token : hl, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 0.0008
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: noerr
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: noerr
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: noerr
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : til, Posbility: 0.0000
Next Token : hd, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: noerr
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0002
Next Token :   , Posbility: 0.0007
Next Token :    , Posbility: 0.0159
Next Token :     , Posbility: 0.9844
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0067
Next Token : (, Posbility: 0.0234
Next Token : hd, Posbility: 0.0234
Next Token : Dict, Posbility: 0.0388
Next Token : let, Posbility: 0.8828
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0004
Next Token :  res, Posbility: 0.0006
Next Token :  new, Posbility: 0.0008
Next Token :  rec, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0011
Next Token : head, Posbility: 0.0015
Next Token : (, Posbility: 0.0024
Next Token : tl, Posbility: 0.0084
Next Token : hd, Posbility: 0.9727
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: noerr
---------------------------
Next Token : value, Posbility: 0.0002
Next Token : list, Posbility: 0.0019
Next Token : key, Posbility: 0.0028
Next Token : val, Posbility: 0.0052
Next Token : dict, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 0.0005
Next Token : dict, Posbility: 0.0022
Next Token : hd, Posbility: 0.0052
Next Token : Dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: noerr
---------------------------
Next Token : assoc, Posbility: 0.0002
Next Token : update, Posbility: 0.0002
Next Token : map, Posbility: 0.0003
Next Token : merge, Posbility: 0.0013
Next Token : add, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: noerr
---------------------------
Next Token :  ', Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0006
Next Token :  ", Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: noerr
---------------------------
Next Token : HD, Posbility: 0.0000
Next Token : head, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : tl, Posbility: 0.0007
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: noerr
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : dict, Posbility: 0.0001
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: noerr
---------------------------
Next Token : Dict, Posbility: 0.0000
Next Token : HD, Posbility: 0.0000
Next Token : tl, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: noerr
---------------------------
Next Token : key, Posbility: 0.0000
Next Token : dic, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0003
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :    , Posbility: 0.0005
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0005
Next Token : hd, Posbility: 0.0017
Next Token : (, Posbility: 0.0019
Next Token : Dict, Posbility: 0.0046
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  rec, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : hl, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 0.0013
Next Token : tl, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_
 score:False
Error type: noerr
---------------------------
Next Token : dic, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : key, Posbility: 0.0001
Next Token : list, Posbility: 0.0002
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : dict, Posbility: 0.0001
Next Token : tl, Posbility: 0.0001
Next Token : Dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.
 score:False
Error type: noerr
---------------------------
Next Token : sub, Posbility: 0.0000
Next Token : combine, Posbility: 0.0000
Next Token : map, Posbility: 0.0000
Next Token : merge, Posbility: 0.0001
Next Token : add, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add 
 score:False
Error type: noerr
---------------------------
Next Token : tm, Posbility: 0.0000
Next Token : hl, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 0.0006
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl
 score:False
Error type: noerr
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_
 score:False
Error type: noerr
---------------------------
Next Token : keys, Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key 
 score:False
Error type: noerr
---------------------------
Next Token : hl, Posbility: 0.0000
Next Token : til, Posbility: 0.0000
Next Token : hd, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : tl, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_
 score:False
Error type: noerr
---------------------------
Next Token : dictionary, Posbility: 0.0000
Next Token : key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :       , Posbility: 0.0004
Next Token :   , Posbility: 0.0007
Next Token :    , Posbility: 0.0203
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0060
Next Token : (, Posbility: 0.0210
Next Token : hd, Posbility: 0.0238
Next Token : Dict, Posbility: 0.0347
Next Token : let, Posbility: 0.8945
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0003
Next Token :  res, Posbility: 0.0004
Next Token :  new, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0013
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0009
Next Token : head, Posbility: 0.0011
Next Token : (, Posbility: 0.0019
Next Token : tl, Posbility: 0.0051
Next Token : hd, Posbility: 0.9766
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_
 score:False
Error type: noerr
---------------------------
Next Token : value, Posbility: 0.0001
Next Token : list, Posbility: 0.0012
Next Token : key, Posbility: 0.0022
Next Token : val, Posbility: 0.0028
Next Token : dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 0.0004
Next Token : dict, Posbility: 0.0012
Next Token : hd, Posbility: 0.0046
Next Token : Dict, Posbility: 0.9922
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.
 score:False
Error type: noerr
---------------------------
Next Token : assoc, Posbility: 0.0001
Next Token : update, Posbility: 0.0001
Next Token : map, Posbility: 0.0003
Next Token : merge, Posbility: 0.0008
Next Token : add, Posbility: 0.9961
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ', Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token :  ", Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add 
 score:False
Error type: noerr
---------------------------
Next Token : HD, Posbility: 0.0000
Next Token : head, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : tl, Posbility: 0.0006
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_
 score:False
Error type: noerr
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0000
Next Token : dict, Posbility: 0.0000
Next Token : key, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key 
 score:False
Error type: noerr
---------------------------
Next Token : Dict, Posbility: 0.0000
Next Token : HD, Posbility: 0.0000
Next Token : tl, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : hd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_
 score:False
Error type: noerr
---------------------------
Next Token : map, Posbility: 0.0000
Next Token : dic, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : val, Posbility: 0.0001
Next Token : dict, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to convert more than one list to nested dictionary. *)
let rec dict_of_list lst =
  match lst with
  | [] -> Dict.empty
  | hd :: tl ->
    let hd_dict = dict_of_list hd in
    let tl_dict = dict_of_list tl in
    let hd_key = hd_dict.key in
    let tl_key = tl_dict.key in
    let hd_val = hd_dict.val_opt in
    let tl_val = tl_dict.val_opt in
    let hd_dict = Dict.add hd_key hd_val hd_dict in
    let tl_dict = Dict.add tl_key tl_val tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in
    let tl_dict = Dict.add tl_key tl_dict in
    let hd_dict = Dict.add hd_key hd_dict in

 score:False
Error type: noerr
---------------------------


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>