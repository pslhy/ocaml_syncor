code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0630
Next Token :  check, Posbility: 0.0630
Next Token :  sub, Posbility: 0.1328
Next Token :  is, Posbility: 0.2197
Next Token :  rec, Posbility: 0.4648
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0148
Next Token :  check, Posbility: 0.1094
Next Token :  , Posbility: 0.1592
Next Token :  sub, Posbility: 0.2314
Next Token :  is, Posbility: 0.3359
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0017
Next Token : -, Posbility: 0.0022
Next Token : sub, Posbility: 0.0210
Next Token : Sub, Posbility: 0.0732
Next Token : _, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0023
Next Token : a, Posbility: 0.0038
Next Token : list, Posbility: 0.0063
Next Token : subset, Posbility: 0.0104
Next Token : sub, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0023
Next Token : seq, Posbility: 0.0062
Next Token :  =, Posbility: 0.0167
Next Token : _, Posbility: 0.0454
Next Token : list, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0204
Next Token : _, Posbility: 0.0913
Next Token :  l, Posbility: 0.0913
Next Token :  =, Posbility: 0.1172
Next Token :  , Posbility: 0.5234
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0554
Next Token : L, Posbility: 0.0554
Next Token : (, Posbility: 0.1172
Next Token : lst, Posbility: 0.1328
Next Token : x, Posbility: 0.3184
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0096
Next Token :  l, Posbility: 0.0432
Next Token :  =, Posbility: 0.0432
Next Token : s, Posbility: 0.3613
Next Token :  , Posbility: 0.4648
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0038
Next Token : (, Posbility: 0.0043
Next Token : s, Posbility: 0.0049
Next Token : x, Posbility: 0.0356
Next Token : y, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0032
Next Token :  l, Posbility: 0.0047
Next Token :  i, Posbility: 0.0060
Next Token :  , Posbility: 0.0645
Next Token :  =, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0027
Next Token :  function, Posbility: 0.0226
Next Token :  match, Posbility: 0.0479
Next Token :  , Posbility: 0.0693
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0066
Next Token :    , Posbility: 0.0159
Next Token : 	, Posbility: 0.0179
Next Token :     , Posbility: 0.1699
Next Token :   , Posbility: 0.7617
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : try, Posbility: 0.0041
Next Token : (, Posbility: 0.0076
Next Token : let, Posbility: 0.0723
Next Token : if, Posbility: 0.2852
Next Token : match, Posbility: 0.6055
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0015
Next Token : (, Posbility: 0.0024
Next Token :  String, Posbility: 0.0031
Next Token :  [, Posbility: 0.0052
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0010
Next Token : (, Posbility: 0.0522
Next Token : List, Posbility: 0.0522
Next Token : y, Posbility: 0.0669
Next Token : x, Posbility: 0.8164
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0028
Next Token :  =, Posbility: 0.0047
Next Token :  , Posbility: 0.0210
Next Token : ,, Posbility: 0.2559
Next Token :  with, Posbility: 0.6953
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0032
Next Token :  , Posbility: 0.0086
Next Token :  [, Posbility: 0.0206
Next Token :  [], Posbility: 0.0815
Next Token : 
, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0011
Next Token :       , Posbility: 0.0020
Next Token :    , Posbility: 0.0033
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9062
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : None, Posbility: 0.0003
Next Token : [, Posbility: 0.0137
Next Token : [], Posbility: 0.0255
Next Token : |, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0062
Next Token :  [, Posbility: 0.0167
Next Token :  , Posbility: 0.0276
Next Token :  nil, Posbility: 0.0276
Next Token :  [], Posbility: 0.9141
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0062
Next Token :    , Posbility: 0.0070
Next Token :  when, Posbility: 0.0130
Next Token :  |, Posbility: 0.0276
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0008
Next Token : _, Posbility: 0.0012
Next Token : if, Posbility: 0.0031
Next Token : ::, Posbility: 0.0059
Next Token : ->, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0435
Next Token :  is, Posbility: 0.0435
Next Token :  false, Posbility: 0.1943
Next Token :  , Posbility: 0.3203
Next Token :  true, Posbility: 0.3203
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0044
Next Token :  |, Posbility: 0.0105
Next Token :  , Posbility: 0.0135
Next Token : ;, Posbility: 0.0135
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : when, Posbility: 0.0001
Next Token : ;, Posbility: 0.0007
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0069
Next Token :  a, Posbility: 0.0187
Next Token :  [], Posbility: 0.0396
Next Token :  [, Posbility: 0.1074
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0332
Next Token : h, Posbility: 0.0427
Next Token : hd, Posbility: 0.1021
Next Token : _, Posbility: 0.1689
Next Token : x, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0391
Next Token : s, Posbility: 0.0645
Next Token : ', Posbility: 0.1367
Next Token :  , Posbility: 0.2891
Next Token : ::, Posbility: 0.3711
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : [], Posbility: 0.0117
Next Token : t, Posbility: 0.0217
Next Token : _, Posbility: 0.0591
Next Token : y, Posbility: 0.1816
Next Token : x, Posbility: 0.5625
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0095
Next Token : x, Posbility: 0.0121
Next Token : 1, Posbility: 0.0156
Next Token : ', Posbility: 0.0698
Next Token : s, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0052
Next Token :  =>, Posbility: 0.0052
Next Token : 1, Posbility: 0.0087
Next Token :  when, Posbility: 0.1738
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0002
Next Token :  when, Posbility: 0.0002
Next Token : if, Posbility: 0.0074
Next Token : ::, Posbility: 0.0258
Next Token : ->, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0125
Next Token :  match, Posbility: 0.0435
Next Token :  , Posbility: 0.2500
Next Token :  is, Posbility: 0.2500
Next Token : 
, Posbility: 0.4121
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0198
Next Token :      , Posbility: 0.0889
Next Token :    , Posbility: 0.0889
Next Token :     , Posbility: 0.3984
Next Token :       , Posbility: 0.3984
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0245
Next Token : y, Posbility: 0.0591
Next Token : match, Posbility: 0.2637
Next Token : let, Posbility: 0.2988
Next Token : if, Posbility: 0.2988
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0141
Next Token :  String, Posbility: 0.0298
Next Token :  is, Posbility: 0.0630
Next Token :  not, Posbility: 0.0811
Next Token :  , Posbility: 0.7695
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0172
Next Token : (, Posbility: 0.0413
Next Token : List, Posbility: 0.2090
Next Token : x, Posbility: 0.2676
Next Token : y, Posbility: 0.3906
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0019
Next Token :  , Posbility: 0.0065
Next Token :  is, Posbility: 0.0107
Next Token :  ==, Posbility: 0.0137
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  0, Posbility: 0.0003
Next Token :  [, Posbility: 0.0036
Next Token :  , Posbility: 0.1187
Next Token :  [], Posbility: 0.8750
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0023
Next Token :  , Posbility: 0.0063
Next Token :  ||, Posbility: 0.0103
Next Token : 
, Posbility: 0.0464
Next Token :  then, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0049
Next Token :  , Posbility: 0.0132
Next Token : 
, Posbility: 0.0972
Next Token :  false, Posbility: 0.1602
Next Token :  true, Posbility: 0.7188
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0010
Next Token :   , Posbility: 0.0019
Next Token :  , Posbility: 0.0107
Next Token :  else, Posbility: 0.1309
Next Token : 
, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :         , Posbility: 0.0009
Next Token :     , Posbility: 0.0013
Next Token :      , Posbility: 0.0032
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      
 score:False
Error type: noerr
---------------------------
Next Token : els, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : |, Posbility: 0.0002
Next Token : elif, Posbility: 0.0022
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0076
Next Token :  match, Posbility: 0.0339
Next Token :  is, Posbility: 0.1523
Next Token : 
, Posbility: 0.3223
Next Token :  , Posbility: 0.4688
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0571
Next Token : (, Posbility: 0.0649
Next Token : let, Posbility: 0.1553
Next Token : x, Posbility: 0.1758
Next Token : if, Posbility: 0.4219
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0049
Next Token :  is, Posbility: 0.0150
Next Token :  not, Posbility: 0.0150
Next Token :  String, Posbility: 0.0170
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0265
Next Token : head, Posbility: 0.0265
Next Token : List, Posbility: 0.0437
Next Token : y, Posbility: 0.3242
Next Token : x, Posbility: 0.5352
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0068
Next Token : [0], Posbility: 0.0078
Next Token : s, Posbility: 0.0574
Next Token :  , Posbility: 0.1069
Next Token :  =, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : [], Posbility: 0.0002
Next Token :  [, Posbility: 0.0103
Next Token :  [], Posbility: 0.2656
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : head, Posbility: 0.0003
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 0.0471
Next Token : y, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0121
Next Token :  [, Posbility: 0.0137
Next Token : ', Posbility: 0.0226
Next Token : [0], Posbility: 0.1299
Next Token :  then, Posbility: 0.7500
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0123
Next Token : 
, Posbility: 0.0334
Next Token :  false, Posbility: 0.0334
Next Token :  is, Posbility: 0.2471
Next Token :  true, Posbility: 0.6719
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  --, Posbility: 0.0008
Next Token :  , Posbility: 0.0045
Next Token :  else, Posbility: 0.0201
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0008
Next Token :      , Posbility: 0.0019
Next Token :           , Posbility: 0.0022
Next Token :         , Posbility: 0.0025
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : |, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0076
Next Token :  false, Posbility: 0.0142
Next Token : 
, Posbility: 0.1191
Next Token :  , Posbility: 0.3672
Next Token :  is, Posbility: 0.4727
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_
 score:False
Error type: noerr
---------------------------
Next Token : subset, Posbility: 0.0001
Next Token : eq, Posbility: 0.0002
Next Token : cons, Posbility: 0.0002
Next Token : equal, Posbility: 0.0002
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sub
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : sub, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  [, Posbility: 0.0009
Next Token : _, Posbility: 0.0013
Next Token : (, Posbility: 0.0109
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist 
 score:False
Error type: noerr
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0002
Next Token : (, Posbility: 0.0703
Next Token : y, Posbility: 0.0703
Next Token : x, Posbility: 0.8594
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist x
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : ', Posbility: 0.0007
Next Token :  , Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  ~, Posbility: 0.0007
Next Token :  [, Posbility: 0.0025
Next Token :  [], Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs 
 score:False
Error type: noerr
---------------------------
Next Token : rem, Posbility: 0.0003
Next Token : tail, Posbility: 0.0012
Next Token : x, Posbility: 0.0148
Next Token : y, Posbility: 0.4902
Next Token : (, Posbility: 0.4902
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : remove, Posbility: 0.0074
Next Token : drop, Posbility: 0.0095
Next Token : List, Posbility: 0.1309
Next Token : x, Posbility: 0.3555
Next Token : y, Posbility: 0.4023
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0014
Next Token : :, Posbility: 0.0023
Next Token : -, Posbility: 0.0044
Next Token : ::, Posbility: 0.0287
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0024
Next Token : x, Posbility: 0.0074
Next Token : :, Posbility: 0.0903
Next Token : -, Posbility: 0.1318
Next Token : ::, Posbility: 0.7578
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0015
Next Token :  nil, Posbility: 0.0024
Next Token :  [, Posbility: 0.0040
Next Token :  [], Posbility: 0.0051
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0052
Next Token : (, Posbility: 0.0233
Next Token : y, Posbility: 0.1045
Next Token : x, Posbility: 0.1523
Next Token : []), Posbility: 0.6836
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0042
Next Token :  then, Posbility: 0.0400
Next Token :  else, Posbility: 0.0664
Next Token : 

, Posbility: 0.2314
Next Token : 
, Posbility: 0.6289
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])

 score:False
Error type: noerr
---------------------------
Next Token : else, Posbility: 0.0317
Next Token :     , Posbility: 0.0557
Next Token :       , Posbility: 0.0864
Next Token : end, Posbility: 0.1338
Next Token :   , Posbility: 0.5977
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0055
Next Token : end, Posbility: 0.0062
Next Token : ;, Posbility: 0.1094
Next Token : in, Posbility: 0.1406
Next Token : |, Posbility: 0.7148
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0009
Next Token :  nil, Posbility: 0.0035
Next Token :  [, Posbility: 0.0122
Next Token :  [], Posbility: 0.2168
Next Token :  , Posbility: 0.7578
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0009
Next Token : (, Posbility: 0.0020
Next Token : y, Posbility: 0.0520
Next Token : x, Posbility: 0.2988
Next Token : _, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0014
Next Token : ,, Posbility: 0.0021
Next Token : x, Posbility: 0.0045
Next Token : ::, Posbility: 0.0200
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0002
Next Token : x, Posbility: 0.0009
Next Token : if, Posbility: 0.0038
Next Token : ::, Posbility: 0.0752
Next Token : ->, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  , Posbility: 0.0065
Next Token :  is, Posbility: 0.0065
Next Token : 
, Posbility: 0.0177
Next Token :  false, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  | _ -> false
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0040
Next Token : ), Posbility: 0.0052
Next Token :  , Posbility: 0.0067
Next Token : 
, Posbility: 0.3633
Next Token : 

, Posbility: 0.5977
---------------------------
code:
 (* Write a  function to check whether a list is sublist of another or not. *)
let rec is_sublist x y =
  match x with
  | [] -> true
  | x::xs ->
      if y = [] then true
      else if x = y then true
      else is_sublist xs (y :: [])
  | _ -> false


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :34.67250871658325

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>