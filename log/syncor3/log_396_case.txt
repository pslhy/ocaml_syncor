code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0325
Next Token :  sum, Posbility: 0.0535
Next Token :  non, Posbility: 0.0688
Next Token :  , Posbility: 0.1133
Next Token :  rec, Posbility: 0.6523
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0540
Next Token :  non, Posbility: 0.0613
Next Token :  find, Posbility: 0.1299
Next Token :  sum, Posbility: 0.2139
Next Token :  , Posbility: 0.3105
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fi, Posbility: 0.0243
Next Token : fold, Posbility: 0.0747
Next Token : f, Posbility: 0.0845
Next Token : helper, Posbility: 0.0845
Next Token : add, Posbility: 0.1089
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : er, Posbility: 0.0152
Next Token : -, Posbility: 0.0283
Next Token :  =, Posbility: 0.0530
Next Token :  , Posbility: 0.1123
Next Token : _, Posbility: 0.6445
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0422
Next Token : all, Posbility: 0.0422
Next Token : sum, Posbility: 0.0615
Next Token : list, Posbility: 0.0791
Next Token : non, Posbility: 0.2148
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0160
Next Token : repeat, Posbility: 0.0160
Next Token : rep, Posbility: 0.0160
Next Token : repeated, Posbility: 0.0435
Next Token : _, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : re, Posbility: 0.0147
Next Token : duplicate, Posbility: 0.0147
Next Token : rep, Posbility: 0.0398
Next Token : repeat, Posbility: 0.1084
Next Token : repeated, Posbility: 0.8008
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0079
Next Token : (, Posbility: 0.0215
Next Token :  =, Posbility: 0.0962
Next Token :  , Posbility: 0.2617
Next Token : _, Posbility: 0.5547
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sum, Posbility: 0.0160
Next Token : list, Posbility: 0.0265
Next Token : elem, Posbility: 0.0437
Next Token : element, Posbility: 0.1045
Next Token : elements, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0197
Next Token : (, Posbility: 0.0223
Next Token : _, Posbility: 0.0776
Next Token :  =, Posbility: 0.1650
Next Token :  , Posbility: 0.5742
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0510
Next Token : :, Posbility: 0.0952
Next Token : lst, Posbility: 0.1226
Next Token : (, Posbility: 0.1572
Next Token : x, Posbility: 0.2285
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0134
Next Token :  acc, Posbility: 0.0530
Next Token :  , Posbility: 0.1846
Next Token : s, Posbility: 0.2373
Next Token :  =, Posbility: 0.4434
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0022
Next Token : 

, Posbility: 0.0024
Next Token :  match, Posbility: 0.0435
Next Token :  , Posbility: 0.0713
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0075
Next Token :    , Posbility: 0.0159
Next Token : 	, Posbility: 0.0159
Next Token :     , Posbility: 0.1709
Next Token :   , Posbility: 0.7656
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0068
Next Token : List, Posbility: 0.0305
Next Token : if, Posbility: 0.1367
Next Token : let, Posbility: 0.2559
Next Token : match, Posbility: 0.5391
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0011
Next Token : 
, Posbility: 0.0013
Next Token :  !, Posbility: 0.0035
Next Token :  String, Posbility: 0.0074
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Set, Posbility: 0.0027
Next Token : Seq, Posbility: 0.0051
Next Token : (, Posbility: 0.0074
Next Token : List, Posbility: 0.1157
Next Token : x, Posbility: 0.8555
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token :  @, Posbility: 0.0015
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0029
Next Token :  , Posbility: 0.0070
Next Token :  [, Posbility: 0.0090
Next Token :  [], Posbility: 0.0583
Next Token : 
, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0008
Next Token :       , Posbility: 0.0020
Next Token :    , Posbility: 0.0032
Next Token :     , Posbility: 0.0947
Next Token :   , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Nil, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : [, Posbility: 0.0217
Next Token : [], Posbility: 0.0520
Next Token : |, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0037
Next Token :  nil, Posbility: 0.0165
Next Token :  [, Posbility: 0.0271
Next Token :  , Posbility: 0.0447
Next Token :  [], Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0063
Next Token :    , Posbility: 0.0081
Next Token :  =>, Posbility: 0.0103
Next Token :  |, Posbility: 0.0170
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0005
Next Token : -, Posbility: 0.0006
Next Token : ::, Posbility: 0.0032
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0116
Next Token :  1, Posbility: 0.0116
Next Token :  , Posbility: 0.0854
Next Token :  [], Posbility: 0.2324
Next Token :  0, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0023
Next Token :   , Posbility: 0.0061
Next Token :  , Posbility: 0.0167
Next Token :  |, Posbility: 0.0454
Next Token : 
, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : |, Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  non, Posbility: 0.0049
Next Token :  a, Posbility: 0.0150
Next Token :  [], Posbility: 0.0150
Next Token :  [, Posbility: 0.2070
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0212
Next Token : h, Posbility: 0.0579
Next Token : hd, Posbility: 0.0654
Next Token : _, Posbility: 0.1387
Next Token : x, Posbility: 0.6211
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0059
Next Token : s, Posbility: 0.0140
Next Token : :, Posbility: 0.0262
Next Token : ::, Posbility: 0.4648
Next Token :  , Posbility: 0.4648
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0003
Next Token : if, Posbility: 0.0019
Next Token : :, Posbility: 0.0045
Next Token : ->, Posbility: 0.0085
Next Token : ::, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0028
Next Token :  acc, Posbility: 0.0032
Next Token :  [], Posbility: 0.0184
Next Token :  rest, Posbility: 0.0728
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0234
Next Token : t, Posbility: 0.0265
Next Token : _, Posbility: 0.0635
Next Token : y, Posbility: 0.1729
Next Token : x, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0023
Next Token : 1, Posbility: 0.0038
Next Token : _, Posbility: 0.0048
Next Token : ', Posbility: 0.0586
Next Token : s, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0013
Next Token :   , Posbility: 0.0036
Next Token :  =>, Posbility: 0.0047
Next Token :  when, Posbility: 0.0938
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0003
Next Token : if, Posbility: 0.0031
Next Token : ::, Posbility: 0.0228
Next Token : ->, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0051
Next Token :  match, Posbility: 0.0139
Next Token :  1, Posbility: 0.0378
Next Token : 
, Posbility: 0.4609
Next Token :  , Posbility: 0.4609
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0596
Next Token : (, Posbility: 0.0674
Next Token : let, Posbility: 0.1113
Next Token : add, Posbility: 0.3418
Next Token : x, Posbility: 0.3418
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0083
Next Token :  *, Posbility: 0.0137
Next Token :  , Posbility: 0.0422
Next Token : s, Posbility: 0.0479
Next Token :  +, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0013
Next Token :  1, Posbility: 0.0019
Next Token : 
, Posbility: 0.0022
Next Token :  sum, Posbility: 0.0028
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0004
Next Token : if, Posbility: 0.0005
Next Token : x, Posbility: 0.0081
Next Token : (, Posbility: 0.0469
Next Token : add, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_
 score:False
Error type: noerr
---------------------------
Next Token : un, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : one, Posbility: 0.0001
Next Token : non, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_
 score:False
Error type: noerr
---------------------------
Next Token : recursive, Posbility: 0.0000
Next Token : duplicate, Posbility: 0.0000
Next Token : rep, Posbility: 0.0000
Next Token : repeat, Posbility: 0.0002
Next Token : repeated, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_repeated
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  elements, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_repeated_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : elt, Posbility: 0.0000
Next Token : elem, Posbility: 0.0000
Next Token : element, Posbility: 0.0008
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_repeated_elements
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token :  ~, Posbility: 0.0006
Next Token : (, Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_repeated_elements 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0110
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_repeated_elements x
 score:False
Error type: noerr
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_repeated_elements xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0040
Next Token : ), Posbility: 0.0067
Next Token :  , Posbility: 0.0067
Next Token : 
, Posbility: 0.3633
Next Token : 

, Posbility: 0.5977
---------------------------
code:
 (* Write a  function to find the sum of non-repeated elements in a given list. *)
let rec add_non_repeated_elements x =
  match x with
  | [] -> 0
  | x :: xs -> x + add_non_repeated_elements xs


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :23.56557321548462

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>