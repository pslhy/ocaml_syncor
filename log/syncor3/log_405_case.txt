code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  compare, Posbility: 0.0098
Next Token :  right, Posbility: 0.0300
Next Token :  find, Posbility: 0.0339
Next Token :  , Posbility: 0.1348
Next Token :  rec, Posbility: 0.6836
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  left, Posbility: 0.0334
Next Token :  right, Posbility: 0.0430
Next Token :  search, Posbility: 0.0552
Next Token :  find, Posbility: 0.1924
Next Token :  , Posbility: 0.4082
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : b, Posbility: 0.0544
Next Token : insertion, Posbility: 0.0618
Next Token : fi, Posbility: 0.0698
Next Token : locate, Posbility: 0.0791
Next Token : insert, Posbility: 0.1152
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0112
Next Token : -, Posbility: 0.0144
Next Token :  =, Posbility: 0.0732
Next Token :  , Posbility: 0.1992
Next Token : _, Posbility: 0.6133
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0620
Next Token : at, Posbility: 0.0620
Next Token : right, Posbility: 0.0620
Next Token : sort, Posbility: 0.0703
Next Token : pos, Posbility: 0.0796
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0613
Next Token :  l, Posbility: 0.0693
Next Token : _, Posbility: 0.0894
Next Token :  =, Posbility: 0.2422
Next Token :  , Posbility: 0.4004
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0352
Next Token : lst, Posbility: 0.0742
Next Token : arr, Posbility: 0.1387
Next Token : (, Posbility: 0.2021
Next Token : x, Posbility: 0.2021
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0315
Next Token :  =, Posbility: 0.0520
Next Token :  v, Posbility: 0.0588
Next Token :  , Posbility: 0.2988
Next Token : s, Posbility: 0.3848
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0188
Next Token :  pos, Posbility: 0.0309
Next Token :  v, Posbility: 0.0510
Next Token :  , Posbility: 0.3770
Next Token :  =, Posbility: 0.3770
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0078
Next Token :  function, Posbility: 0.0447
Next Token :  match, Posbility: 0.0649
Next Token :  , Posbility: 0.0737
Next Token : 
, Posbility: 0.7930
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0041
Next Token : 	, Posbility: 0.0067
Next Token :    , Posbility: 0.0086
Next Token :     , Posbility: 0.0923
Next Token :   , Posbility: 0.8750
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0047
Next Token : List, Posbility: 0.0114
Next Token : if, Posbility: 0.1572
Next Token : let, Posbility: 0.1777
Next Token : match, Posbility: 0.6211
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token :  !, Posbility: 0.0010
Next Token :  [, Posbility: 0.0011
Next Token :  String, Posbility: 0.0075
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0050
Next Token : Array, Posbility: 0.0073
Next Token : (, Posbility: 0.0083
Next Token : List, Posbility: 0.1147
Next Token : x, Posbility: 0.8477
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  with, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 0.0015
Next Token :  |, Posbility: 0.0015
Next Token : ., Posbility: 0.0040
Next Token :  with, Posbility: 0.9883
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0029
Next Token :  , Posbility: 0.0054
Next Token :  [, Posbility: 0.0114
Next Token :  [], Posbility: 0.0659
Next Token : 
, Posbility: 0.9102
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :       , Posbility: 0.0014
Next Token :    , Posbility: 0.0020
Next Token :     , Posbility: 0.0757
Next Token :   , Posbility: 0.9180
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : [, Posbility: 0.0277
Next Token : [], Posbility: 0.0518
Next Token : |, Posbility: 0.9180
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0014
Next Token :  nil, Posbility: 0.0063
Next Token :  , Posbility: 0.0221
Next Token :  [, Posbility: 0.0283
Next Token :  [], Posbility: 0.9375
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0049
Next Token :    , Posbility: 0.0081
Next Token :  =>, Posbility: 0.0103
Next Token :  |, Posbility: 0.0170
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : if, Posbility: 0.0004
Next Token : â†’, Posbility: 0.0004
Next Token : ::, Posbility: 0.0013
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0674
Next Token :  None, Posbility: 0.0674
Next Token :  [], Posbility: 0.0674
Next Token :  , Posbility: 0.1826
Next Token :  0, Posbility: 0.4980
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0026
Next Token :   , Posbility: 0.0055
Next Token :  , Posbility: 0.0216
Next Token :  |, Posbility: 0.0278
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0063
Next Token :  [], Posbility: 0.0118
Next Token :  v, Posbility: 0.0134
Next Token :  [, Posbility: 0.2090
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0245
Next Token : hd, Posbility: 0.0315
Next Token : head, Posbility: 0.0315
Next Token : _, Posbility: 0.1245
Next Token : x, Posbility: 0.7148
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0063
Next Token :  when, Posbility: 0.0081
Next Token : s, Posbility: 0.0172
Next Token : ::, Posbility: 0.3047
Next Token :  , Posbility: 0.6484
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0008
Next Token : <, Posbility: 0.0012
Next Token : ->, Posbility: 0.0036
Next Token : if, Posbility: 0.0052
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0012
Next Token :  others, Posbility: 0.0012
Next Token :  [], Posbility: 0.0022
Next Token :  rest, Posbility: 0.0938
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : y, Posbility: 0.0205
Next Token : t, Posbility: 0.0264
Next Token : tail, Posbility: 0.0435
Next Token : _, Posbility: 0.0918
Next Token : x, Posbility: 0.7695
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 0.0007
Next Token : x, Posbility: 0.0009
Next Token : ', Posbility: 0.0052
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0391
Next Token : _, Posbility: 0.0442
Next Token : ', Posbility: 0.0825
Next Token :  when, Posbility: 0.0938
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : -, Posbility: 0.0006
Next Token : ::, Posbility: 0.0035
Next Token : if, Posbility: 0.0179
Next Token : ->, Posbility: 0.9766
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0027
Next Token :  1, Posbility: 0.0327
Next Token :  match, Posbility: 0.0537
Next Token :  , Posbility: 0.2412
Next Token : 
, Posbility: 0.6562
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0068
Next Token :   , Posbility: 0.0099
Next Token :      , Posbility: 0.0164
Next Token :       , Posbility: 0.4219
Next Token :     , Posbility: 0.5391
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0064
Next Token : (, Posbility: 0.0120
Next Token : match, Posbility: 0.1455
Next Token : if, Posbility: 0.3086
Next Token : let, Posbility: 0.5078
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0269
Next Token :  i, Posbility: 0.0732
Next Token :  rec, Posbility: 0.0938
Next Token :  pos, Posbility: 0.1543
Next Token :  , Posbility: 0.4199
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0635
Next Token : n, Posbility: 0.0635
Next Token : m, Posbility: 0.0718
Next Token : cmp, Posbility: 0.1045
Next Token : x, Posbility: 0.1953
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0476
Next Token : ', Posbility: 0.0786
Next Token : s, Posbility: 0.1011
Next Token :  =, Posbility: 0.1660
Next Token : _, Posbility: 0.3516
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0476
Next Token : comp, Posbility: 0.0476
Next Token :  =, Posbility: 0.0613
Next Token : less, Posbility: 0.0693
Next Token : pos, Posbility: 0.1299
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  :=, Posbility: 0.0006
Next Token :  , Posbility: 0.0009
Next Token : ,, Posbility: 0.0045
Next Token : _, Posbility: 0.0052
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0244
Next Token :  match, Posbility: 0.0244
Next Token :  find, Posbility: 0.0312
Next Token :  compare, Posbility: 0.0312
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0396
Next Token : Array, Posbility: 0.0835
Next Token : insert, Posbility: 0.1562
Next Token : x, Posbility: 0.2002
Next Token : List, Posbility: 0.2266
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : Helpers, Posbility: 0.0005
Next Token : Util, Posbility: 0.0005
Next Token : _, Posbility: 0.0036
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : iter, Posbility: 0.0352
Next Token : indexOf, Posbility: 0.0742
Next Token : index, Posbility: 0.1572
Next Token : mem, Posbility: 0.1787
Next Token : find, Posbility: 0.3340
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0015
Next Token :  ~, Posbility: 0.0019
Next Token :  index, Posbility: 0.0156
Next Token :  , Posbility: 0.2158
Next Token : _, Posbility: 0.7539
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0183
Next Token : idx, Posbility: 0.0302
Next Token : with, Posbility: 0.0386
Next Token : opt, Posbility: 0.0928
Next Token : index, Posbility: 0.6836
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0030
Next Token : (, Posbility: 0.0038
Next Token :  ~, Posbility: 0.0063
Next Token : _, Posbility: 0.0464
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0022
Next Token : Compare, Posbility: 0.0022
Next Token : f, Posbility: 0.0100
Next Token : (, Posbility: 0.4258
Next Token : x, Posbility: 0.5469
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0131
Next Token :  ~, Posbility: 0.0168
Next Token :  in, Posbility: 0.0588
Next Token : s, Posbility: 0.0757
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : <, Posbility: 0.0004
Next Token : (, Posbility: 0.0067
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0039
Next Token :  |, Posbility: 0.0039
Next Token : 
, Posbility: 0.0173
Next Token : ;, Posbility: 0.0173
Next Token :  in, Posbility: 0.9492
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token : 

, Posbility: 0.0036
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0005
Next Token :   , Posbility: 0.0005
Next Token :       , Posbility: 0.0031
Next Token :    , Posbility: 0.0179
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0354
Next Token : x, Posbility: 0.0515
Next Token : let, Posbility: 0.1094
Next Token : match, Posbility: 0.1406
Next Token : if, Posbility: 0.6289
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0006
Next Token :  int, Posbility: 0.0009
Next Token :  0, Posbility: 0.0015
Next Token :  not, Posbility: 0.0036
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Compare, Posbility: 0.0005
Next Token : Int, Posbility: 0.0009
Next Token : List, Posbility: 0.0024
Next Token : (, Posbility: 0.0291
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0035
Next Token :  ==, Posbility: 0.0050
Next Token :  <=, Posbility: 0.0083
Next Token :  , Posbility: 0.0176
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : idx, Posbility: 0.0000
Next Token : is, Posbility: 0.0000
Next Token : position, Posbility: 0.0000
Next Token : index, Posbility: 0.0001
Next Token : pos, Posbility: 1.0000
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0157
Next Token :  <=, Posbility: 0.0157
Next Token :  >=, Posbility: 0.1167
Next Token :  , Posbility: 0.3164
Next Token :  =, Posbility: 0.5234
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0020
Next Token :  Some, Posbility: 0.0054
Next Token :  -1, Posbility: 0.0664
Next Token :  , Posbility: 0.1094
Next Token :  0, Posbility: 0.8047
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0030
Next Token :  ||, Posbility: 0.0106
Next Token :  , Posbility: 0.0120
Next Token : 
, Posbility: 0.0175
Next Token :  then, Posbility: 0.9492
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0013
Next Token :  1, Posbility: 0.0718
Next Token : 
, Posbility: 0.1953
Next Token :  , Posbility: 0.1953
Next Token :  0, Posbility: 0.5312
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0016
Next Token :  +, Posbility: 0.0030
Next Token :  , Posbility: 0.0091
Next Token : 
, Posbility: 0.3418
Next Token :  else, Posbility: 0.6406
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0074
Next Token :  (1, Posbility: 0.0156
Next Token : 
, Posbility: 0.0256
Next Token :  1, Posbility: 0.0898
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0076
Next Token : insert, Posbility: 0.0126
Next Token : if, Posbility: 0.0126
Next Token : (, Posbility: 0.0723
Next Token : x, Posbility: 0.8828
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token :  +, Posbility: 0.0035
Next Token : s, Posbility: 0.0159
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_
 score:False
Error type: noerr
---------------------------
Next Token : index, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : prev, Posbility: 0.0000
Next Token : position, Posbility: 0.0000
Next Token : pos, Posbility: 1.0000
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos
 score:False
Error type: noerr
---------------------------
Next Token : +1, Posbility: 0.0030
Next Token : 
, Posbility: 0.1006
Next Token : 

, Posbility: 0.1289
Next Token :  , Posbility: 0.3516
Next Token :  +, Posbility: 0.3984
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0013
Next Token : 1, Posbility: 0.0034
Next Token :  1;, Posbility: 0.0415
Next Token :  , Posbility: 0.1128
Next Token :  1, Posbility: 0.8320
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0427
Next Token :  +, Posbility: 0.0483
Next Token :  in, Posbility: 0.1689
Next Token : 

, Posbility: 0.3145
Next Token : 
, Posbility: 0.4043
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0194
Next Token : end, Posbility: 0.0530
Next Token :     , Posbility: 0.1118
Next Token : let, Posbility: 0.1348
Next Token :   , Posbility: 0.5703
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0031
Next Token : (, Posbility: 0.0037
Next Token : in, Posbility: 0.0089
Next Token : ;, Posbility: 0.0737
Next Token : |, Posbility: 0.9023
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  otherwise, Posbility: 0.0016
Next Token :  ?, Posbility: 0.0070
Next Token :  [, Posbility: 0.0149
Next Token :  [], Posbility: 0.0356
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0014
Next Token : y, Posbility: 0.0029
Next Token : (, Posbility: 0.0069
Next Token : x, Posbility: 0.4863
Next Token : _, Posbility: 0.4863
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0013
Next Token :  =>, Posbility: 0.0019
Next Token : x, Posbility: 0.0045
Next Token : ::, Posbility: 0.0066
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0002
Next Token : x, Posbility: 0.0037
Next Token : if, Posbility: 0.0062
Next Token : ::, Posbility: 0.1807
Next Token : ->, Posbility: 0.8086
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0101
Next Token :  un, Posbility: 0.0129
Next Token :  fail, Posbility: 0.0273
Next Token : 
, Posbility: 0.2021
Next Token :  , Posbility: 0.7031
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0298
Next Token : assert, Posbility: 0.0383
Next Token : raise, Posbility: 0.0491
Next Token : List, Posbility: 0.1040
Next Token : insert, Posbility: 0.5273
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_
 score:False
Error type: noerr
---------------------------
Next Token : next, Posbility: 0.0001
Next Token : before, Posbility: 0.0001
Next Token : rec, Posbility: 0.0001
Next Token : left, Posbility: 0.0002
Next Token : pos, Posbility: 0.9961
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0021
Next Token :  [, Posbility: 0.0031
Next Token : (, Posbility: 0.0066
Next Token : _, Posbility: 0.0095
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos 
 score:False
Error type: noerr
---------------------------
Next Token : [0, Posbility: 0.0005
Next Token : tail, Posbility: 0.0011
Next Token : List, Posbility: 0.0048
Next Token : x, Posbility: 0.4316
Next Token : (, Posbility: 0.5547
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : sort, Posbility: 0.0037
Next Token : tail, Posbility: 0.0069
Next Token : Array, Posbility: 0.0101
Next Token : List, Posbility: 0.2949
Next Token : x, Posbility: 0.6211
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0009
Next Token : :, Posbility: 0.0042
Next Token : ::, Posbility: 0.0239
Next Token :  , Posbility: 0.1768
Next Token : s, Posbility: 0.7930
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0121
Next Token : :, Posbility: 0.0137
Next Token :  +, Posbility: 0.0156
Next Token :  @, Posbility: 0.0200
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (xs 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0031
Next Token : ^, Posbility: 0.0201
Next Token : :, Posbility: 0.0796
Next Token : ::, Posbility: 0.2158
Next Token : -, Posbility: 0.6641
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (xs -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0079
Next Token : >, Posbility: 0.0102
Next Token :  [, Posbility: 0.0850
Next Token :  1), Posbility: 0.4316
Next Token :  , Posbility: 0.4316
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (xs - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0190
Next Token : []), Posbility: 0.0277
Next Token : [1]), Posbility: 0.0586
Next Token : List, Posbility: 0.1406
Next Token : x, Posbility: 0.7148
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (xs - x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0021
Next Token : );, Posbility: 0.0021
Next Token :  , Posbility: 0.0121
Next Token : s, Posbility: 0.4551
Next Token : ), Posbility: 0.5156
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (xs - x)
 score:False
Error type: noerr
---------------------------
Next Token :  ++, Posbility: 0.0217
Next Token :  , Posbility: 0.0461
Next Token :  +, Posbility: 0.0591
Next Token : 
, Posbility: 0.2656
Next Token : 

, Posbility: 0.5625
---------------------------
code:
 (* Write a function to locate the right insertion point for a specified value in sorted order. *)
let rec insert_pos xs =
  match xs with
  | [] -> 0
  | x :: xs ->
    let x_pos = List.find_index x xs in
    if x_pos = 0 then 0 else x_pos + 1
  | _ -> insert_pos (xs - x)


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :40.47986936569214

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>