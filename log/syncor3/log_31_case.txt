code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pattern, Posbility: 0.0271
Next Token :  is, Posbility: 0.0574
Next Token :  check, Posbility: 0.1768
Next Token :  , Posbility: 0.2002
Next Token :  rec, Posbility: 0.4238
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0359
Next Token :  pattern, Posbility: 0.0461
Next Token :  is, Posbility: 0.0977
Next Token :  check, Posbility: 0.2334
Next Token :  , Posbility: 0.3008
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : print, Posbility: 0.0289
Next Token : dfs, Posbility: 0.0327
Next Token : seq, Posbility: 0.0479
Next Token : pat, Posbility: 0.0613
Next Token : patterns, Posbility: 0.1011
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0090
Next Token :  [, Posbility: 0.0102
Next Token :  , Posbility: 0.0518
Next Token :  =, Posbility: 0.4316
Next Token : _, Posbility: 0.4316
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0275
Next Token : helper, Posbility: 0.0311
Next Token : to, Posbility: 0.0845
Next Token : check, Posbility: 0.1230
Next Token : match, Posbility: 0.2598
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ing, Posbility: 0.0471
Next Token : (, Posbility: 0.0776
Next Token : _, Posbility: 0.1641
Next Token :  =, Posbility: 0.1641
Next Token :  , Posbility: 0.3477
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0474
Next Token : (, Posbility: 0.1133
Next Token : p, Posbility: 0.1133
Next Token : pat, Posbility: 0.1865
Next Token : patterns, Posbility: 0.2715
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  index, Posbility: 0.0613
Next Token :  pattern, Posbility: 0.0693
Next Token :  i, Posbility: 0.1011
Next Token :  =, Posbility: 0.2139
Next Token :  , Posbility: 0.3105
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0569
Next Token : x, Posbility: 0.0728
Next Token : n, Posbility: 0.0728
Next Token : p, Posbility: 0.1201
Next Token : s, Posbility: 0.1367
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0073
Next Token :  pos, Posbility: 0.0154
Next Token :  i, Posbility: 0.0223
Next Token :  , Posbility: 0.0369
Next Token :  =, Posbility: 0.8398
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0029
Next Token :  function, Posbility: 0.0099
Next Token :  , Posbility: 0.0393
Next Token :  match, Posbility: 0.0447
Next Token : 
, Posbility: 0.8945
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0080
Next Token :    , Posbility: 0.0090
Next Token : 	, Posbility: 0.0090
Next Token :     , Posbility: 0.1416
Next Token :   , Posbility: 0.8164
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0078
Next Token : Match, Posbility: 0.0078
Next Token : if, Posbility: 0.1387
Next Token : let, Posbility: 0.1787
Next Token : match, Posbility: 0.6211
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0013
Next Token :  pattern, Posbility: 0.0015
Next Token :  !, Posbility: 0.0051
Next Token :  String, Posbility: 0.0108
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0206
Next Token : (, Posbility: 0.0562
Next Token : List, Posbility: 0.0562
Next Token : patterns, Posbility: 0.4141
Next Token : s, Posbility: 0.4141
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0007
Next Token :  @, Posbility: 0.0011
Next Token : ., Posbility: 0.0052
Next Token :  , Posbility: 0.0066
Next Token :  with, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0057
Next Token :  {, Posbility: 0.0073
Next Token :  [, Posbility: 0.0083
Next Token :  [], Posbility: 0.0136
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :       , Posbility: 0.0018
Next Token :    , Posbility: 0.0023
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ", Posbility: 0.0025
Next Token : (, Posbility: 0.0032
Next Token : [, Posbility: 0.0386
Next Token : [], Posbility: 0.0640
Next Token : |, Posbility: 0.8789
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0242
Next Token :  [, Posbility: 0.0400
Next Token :  "", Posbility: 0.0845
Next Token :  , Posbility: 0.1396
Next Token :  [], Posbility: 0.6250
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0034
Next Token :  =>, Posbility: 0.0082
Next Token :  when, Posbility: 0.0082
Next Token :  |, Posbility: 0.0153
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0004
Next Token : if, Posbility: 0.0022
Next Token : ::, Posbility: 0.0032
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0161
Next Token :  false, Posbility: 0.0718
Next Token : 
, Posbility: 0.1187
Next Token :  , Posbility: 0.1953
Next Token :  true, Posbility: 0.5312
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
 score:False
Error type: noerr
---------------------------
Next Token : ,, Posbility: 0.0044
Next Token :   , Posbility: 0.0050
Next Token :  |, Posbility: 0.0119
Next Token :  , Posbility: 0.0135
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :     , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : [, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0101
Next Token :  [], Posbility: 0.0310
Next Token :  pattern, Posbility: 0.0845
Next Token :  [, Posbility: 0.1787
Next Token :  , Posbility: 0.6211
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0449
Next Token : head, Posbility: 0.0742
Next Token : p, Posbility: 0.0840
Next Token : x, Posbility: 0.0952
Next Token : _, Posbility: 0.4258
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0090
Next Token : ,, Posbility: 0.0102
Next Token :  when, Posbility: 0.0354
Next Token : ::, Posbility: 0.0962
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0006
Next Token : ^, Posbility: 0.0013
Next Token : if, Posbility: 0.0198
Next Token : ->, Posbility: 0.3984
Next Token : ::, Posbility: 0.5781
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0065
Next Token :  [], Posbility: 0.0374
Next Token :  pattern, Posbility: 0.0615
Next Token :  rest, Posbility: 0.0791
Next Token :  , Posbility: 0.7500
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0898
Next Token : tail, Posbility: 0.0898
Next Token : p, Posbility: 0.1021
Next Token : s, Posbility: 0.1484
Next Token : _, Posbility: 0.1680
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0052
Next Token : s, Posbility: 0.0388
Next Token :  when, Posbility: 0.0388
Next Token :  as, Posbility: 0.0820
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0003
Next Token : if, Posbility: 0.0242
Next Token : ::, Posbility: 0.0659
Next Token : ->, Posbility: 0.9102
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0160
Next Token :  !, Posbility: 0.0160
Next Token :  , Posbility: 0.1943
Next Token :  false, Posbility: 0.1943
Next Token : 
, Posbility: 0.5312
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0035
Next Token :    , Posbility: 0.0427
Next Token :      , Posbility: 0.1162
Next Token :     , Posbility: 0.2461
Next Token :       , Posbility: 0.5898
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0184
Next Token : (, Posbility: 0.0269
Next Token : match, Posbility: 0.0825
Next Token : if, Posbility: 0.1060
Next Token : let, Posbility: 0.6914
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0344
Next Token :  len, Posbility: 0.0344
Next Token :  pattern, Posbility: 0.0732
Next Token :  rec, Posbility: 0.1543
Next Token :  , Posbility: 0.4199
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0566
Next Token : pat, Posbility: 0.0728
Next Token : (, Posbility: 0.0825
Next Token : head, Posbility: 0.1196
Next Token : p, Posbility: 0.2539
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0203
Next Token : 0, Posbility: 0.0203
Next Token : 1, Posbility: 0.0203
Next Token : ,, Posbility: 0.0260
Next Token :  =, Posbility: 0.8594
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0064
Next Token :  match, Posbility: 0.0064
Next Token :  String, Posbility: 0.0064
Next Token :  first, Posbility: 0.0064
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0145
Next Token : head, Posbility: 0.0396
Next Token : Pattern, Posbility: 0.0396
Next Token : List, Posbility: 0.2275
Next Token : patterns, Posbility: 0.6172
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0259
Next Token :  , Posbility: 0.0332
Next Token : _, Posbility: 0.1484
Next Token : ., Posbility: 0.1914
Next Token :  in, Posbility: 0.5195
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token : 

, Posbility: 0.0010
Next Token :  match, Posbility: 0.0012
Next Token :  , Posbility: 0.0096
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0014
Next Token :     , Posbility: 0.0014
Next Token :         , Posbility: 0.0044
Next Token :      , Posbility: 0.0417
Next Token :       , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0449
Next Token : p, Posbility: 0.0654
Next Token : match, Posbility: 0.1079
Next Token : if, Posbility: 0.1221
Next Token : let, Posbility: 0.5469
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0181
Next Token :  len, Posbility: 0.0299
Next Token :  pattern, Posbility: 0.0299
Next Token :  rec, Posbility: 0.0811
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0525
Next Token : r, Posbility: 0.0593
Next Token : p, Posbility: 0.0762
Next Token : q, Posbility: 0.1260
Next Token : s, Posbility: 0.2070
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0679
Next Token : _, Posbility: 0.0869
Next Token : 1, Posbility: 0.1118
Next Token : ', Posbility: 0.1270
Next Token :  =, Posbility: 0.5000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0017
Next Token :  string, Posbility: 0.0036
Next Token :  [, Posbility: 0.0126
Next Token :  String, Posbility: 0.0728
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0119
Next Token : Seq, Posbility: 0.0119
Next Token : Char, Posbility: 0.0173
Next Token : List, Posbility: 0.0471
Next Token : s, Posbility: 0.8359
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0010
Next Token : _, Posbility: 0.0010
Next Token :  |, Posbility: 0.0017
Next Token : ., Posbility: 0.0066
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  match, Posbility: 0.0004
Next Token :  , Posbility: 0.0022
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0013
Next Token :   , Posbility: 0.0013
Next Token :     , Posbility: 0.0018
Next Token :      , Posbility: 0.0471
Next Token :       , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0669
Next Token : p, Posbility: 0.0669
Next Token : if, Posbility: 0.0859
Next Token : match, Posbility: 0.0859
Next Token : let, Posbility: 0.5625
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0197
Next Token :  i, Posbility: 0.0222
Next Token :  pattern, Posbility: 0.0253
Next Token :  rec, Posbility: 0.1279
Next Token :  , Posbility: 0.5742
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0474
Next Token : c, Posbility: 0.0474
Next Token : r, Posbility: 0.0474
Next Token : s, Posbility: 0.0884
Next Token : p, Posbility: 0.2119
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0659
Next Token : ,, Posbility: 0.0850
Next Token : 0, Posbility: 0.1089
Next Token : _, Posbility: 0.1396
Next Token :  =, Posbility: 0.4297
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0193
Next Token :  String, Posbility: 0.0193
Next Token :  match, Posbility: 0.0193
Next Token :  [, Posbility: 0.0248
Next Token :  , Posbility: 0.8203
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0250
Next Token : Pattern, Posbility: 0.0284
Next Token : patterns, Posbility: 0.0530
Next Token : List, Posbility: 0.1631
Next Token : p, Posbility: 0.5703
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0243
Next Token :  |, Posbility: 0.0659
Next Token : ., Posbility: 0.1396
Next Token : [0], Posbility: 0.1582
Next Token :  in, Posbility: 0.4297
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  match, Posbility: 0.0010
Next Token : 

, Posbility: 0.0040
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0010
Next Token :   , Posbility: 0.0010
Next Token :     , Posbility: 0.0014
Next Token :      , Posbility: 0.0674
Next Token :       , Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0493
Next Token : p, Posbility: 0.0815
Next Token : if, Posbility: 0.0815
Next Token : match, Posbility: 0.0815
Next Token : let, Posbility: 0.6016
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pattern, Posbility: 0.0052
Next Token :  len, Posbility: 0.0059
Next Token :  i, Posbility: 0.0067
Next Token :  rec, Posbility: 0.0342
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0090
Next Token : (, Posbility: 0.0115
Next Token : q, Posbility: 0.0189
Next Token : p, Posbility: 0.0664
Next Token : s, Posbility: 0.8086
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0021
Next Token : 1, Posbility: 0.0031
Next Token : _, Posbility: 0.0045
Next Token : ', Posbility: 0.0045
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0007
Next Token : 
, Posbility: 0.0013
Next Token :  String, Posbility: 0.0015
Next Token :  [, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : patterns, Posbility: 0.0010
Next Token : List, Posbility: 0.0031
Next Token : p, Posbility: 0.0040
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token :  !, Posbility: 0.0003
Next Token :  |, Posbility: 0.0005
Next Token : 
, Posbility: 0.0008
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0005
Next Token :     , Posbility: 0.0011
Next Token :         , Posbility: 0.0016
Next Token :      , Posbility: 0.0598
Next Token :       , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0583
Next Token : if, Posbility: 0.0752
Next Token : match, Posbility: 0.0850
Next Token : p, Posbility: 0.1089
Next Token : let, Posbility: 0.5547
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0077
Next Token :  first, Posbility: 0.0087
Next Token :  pattern, Posbility: 0.0270
Next Token :  rec, Posbility: 0.1367
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0251
Next Token : (, Posbility: 0.0284
Next Token : c, Posbility: 0.0284
Next Token : s, Posbility: 0.0532
Next Token : p, Posbility: 0.6484
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0055
Next Token : 0, Posbility: 0.0091
Next Token : _, Posbility: 0.0103
Next Token : ,, Posbility: 0.0219
Next Token :  =, Posbility: 0.9297
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0039
Next Token :  [, Posbility: 0.0039
Next Token :  match, Posbility: 0.0039
Next Token :  pattern, Posbility: 0.0050
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0070
Next Token : List, Posbility: 0.0103
Next Token : s, Posbility: 0.0132
Next Token : patterns, Posbility: 0.0247
Next Token : p, Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0007
Next Token :  |, Posbility: 0.0008
Next Token : [0], Posbility: 0.0028
Next Token : ., Posbility: 0.0036
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pattern, Posbility: 0.0001
Next Token : 

, Posbility: 0.0012
Next Token :  match, Posbility: 0.0013
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0005
Next Token :     , Posbility: 0.0006
Next Token :         , Posbility: 0.0012
Next Token :      , Posbility: 0.0674
Next Token :       , Posbility: 0.9297
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0371
Next Token : if, Posbility: 0.0693
Next Token : match, Posbility: 0.0693
Next Token : p, Posbility: 0.0786
Next Token : let, Posbility: 0.6602
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0018
Next Token :  v, Posbility: 0.0023
Next Token :  pattern, Posbility: 0.0043
Next Token :  rec, Posbility: 0.0249
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0037
Next Token : c, Posbility: 0.0037
Next Token : (, Posbility: 0.0061
Next Token : p, Posbility: 0.0452
Next Token : s, Posbility: 0.9062
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0008
Next Token : ', Posbility: 0.0013
Next Token : _, Posbility: 0.0015
Next Token : 1, Posbility: 0.0022
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0004
Next Token :  match, Posbility: 0.0005
Next Token : 
, Posbility: 0.0008
Next Token :  [, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0005
Next Token : patterns, Posbility: 0.0006
Next Token : List, Posbility: 0.0009
Next Token : p, Posbility: 0.0059
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pattern, Posbility: 0.0001
Next Token :  match, Posbility: 0.0005
Next Token :  , Posbility: 0.0019
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0011
Next Token :     , Posbility: 0.0011
Next Token :         , Posbility: 0.0023
Next Token :      , Posbility: 0.0669
Next Token :       , Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0466
Next Token : if, Posbility: 0.0679
Next Token : match, Posbility: 0.0767
Next Token : p, Posbility: 0.1270
Next Token : let, Posbility: 0.5664
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0032
Next Token :  v, Posbility: 0.0041
Next Token :  pattern, Posbility: 0.0143
Next Token :  rec, Posbility: 0.0439
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0073
Next Token : x, Posbility: 0.0073
Next Token : (, Posbility: 0.0155
Next Token : s, Posbility: 0.0422
Next Token : p, Posbility: 0.8477
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0021
Next Token : 0, Posbility: 0.0024
Next Token : _, Posbility: 0.0027
Next Token : ,, Posbility: 0.0051
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  match, Posbility: 0.0007
Next Token :  pattern, Posbility: 0.0008
Next Token :  [, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token : Pattern, Posbility: 0.0015
Next Token : patterns, Posbility: 0.0045
Next Token : s, Posbility: 0.0066
Next Token : p, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  and, Posbility: 0.0002
Next Token : ., Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pattern, Posbility: 0.0000
Next Token :  match, Posbility: 0.0005
Next Token : 

, Posbility: 0.0007
Next Token :  , Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0004
Next Token :     , Posbility: 0.0004
Next Token :         , Posbility: 0.0006
Next Token :      , Posbility: 0.0420
Next Token :       , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0256
Next Token : if, Posbility: 0.0479
Next Token : match, Posbility: 0.0479
Next Token : p, Posbility: 0.0615
Next Token : let, Posbility: 0.7500
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0005
Next Token :  v, Posbility: 0.0007
Next Token :  pattern, Posbility: 0.0015
Next Token :  rec, Posbility: 0.0058
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0014
Next Token : x, Posbility: 0.0014
Next Token : (, Posbility: 0.0024
Next Token : p, Posbility: 0.0177
Next Token : s, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token : ', Posbility: 0.0003
Next Token : _, Posbility: 0.0006
Next Token : 1, Posbility: 0.0008
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token :  [, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : List, Posbility: 0.0003
Next Token : p, Posbility: 0.0022
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pattern, Posbility: 0.0000
Next Token :  match, Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0008
Next Token :           , Posbility: 0.0009
Next Token :         , Posbility: 0.0014
Next Token :      , Posbility: 0.0532
Next Token :       , Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0364
Next Token : if, Posbility: 0.0527
Next Token : match, Posbility: 0.0598
Next Token : p, Posbility: 0.1118
Next Token : let, Posbility: 0.6445
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0016
Next Token :  v, Posbility: 0.0021
Next Token :  pattern, Posbility: 0.0064
Next Token :  rec, Posbility: 0.0173
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0038
Next Token : x, Posbility: 0.0038
Next Token : (, Posbility: 0.0063
Next Token : s, Posbility: 0.0281
Next Token : p, Posbility: 0.9297
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0007
Next Token : _, Posbility: 0.0009
Next Token : 1, Posbility: 0.0009
Next Token : ,, Posbility: 0.0015
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  match, Posbility: 0.0003
Next Token :  pattern, Posbility: 0.0003
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : Pattern, Posbility: 0.0007
Next Token : patterns, Posbility: 0.0017
Next Token : s, Posbility: 0.0032
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0004
Next Token :     , Posbility: 0.0004
Next Token :         , Posbility: 0.0005
Next Token :      , Posbility: 0.0374
Next Token :       , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0154
Next Token : match, Posbility: 0.0255
Next Token : if, Posbility: 0.0327
Next Token : p, Posbility: 0.0420
Next Token : let, Posbility: 0.8438
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0003
Next Token :  res, Posbility: 0.0003
Next Token :  pattern, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0007
Next Token : _, Posbility: 0.0009
Next Token : (, Posbility: 0.0015
Next Token : p, Posbility: 0.0109
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : List, Posbility: 0.0002
Next Token : p, Posbility: 0.0015
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0008
Next Token :           , Posbility: 0.0009
Next Token :         , Posbility: 0.0013
Next Token :      , Posbility: 0.0532
Next Token :       , Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0322
Next Token : if, Posbility: 0.0364
Next Token : match, Posbility: 0.0364
Next Token : p, Posbility: 0.0874
Next Token : let, Posbility: 0.7305
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0007
Next Token :  v, Posbility: 0.0010
Next Token :  pattern, Posbility: 0.0031
Next Token :  rec, Posbility: 0.0058
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0024
Next Token : patterns, Posbility: 0.0024
Next Token : (, Posbility: 0.0039
Next Token : s, Posbility: 0.0176
Next Token : p, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0004
Next Token : _, Posbility: 0.0005
Next Token : 1, Posbility: 0.0005
Next Token : ,, Posbility: 0.0008
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  match, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0003
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : Pattern, Posbility: 0.0004
Next Token : patterns, Posbility: 0.0009
Next Token : s, Posbility: 0.0022
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token :  , Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :         , Posbility: 0.0004
Next Token :      , Posbility: 0.0293
Next Token :       , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0160
Next Token : match, Posbility: 0.0160
Next Token : if, Posbility: 0.0206
Next Token : p, Posbility: 0.0339
Next Token : let, Posbility: 0.8750
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0002
Next Token :  v, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0004
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0009
Next Token : p, Posbility: 0.0067
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0010
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0005
Next Token :     , Posbility: 0.0005
Next Token :         , Posbility: 0.0007
Next Token :      , Posbility: 0.0420
Next Token :       , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0266
Next Token : if, Posbility: 0.0302
Next Token : match, Posbility: 0.0302
Next Token : p, Posbility: 0.0723
Next Token : let, Posbility: 0.7773
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0004
Next Token :  v, Posbility: 0.0006
Next Token :  pattern, Posbility: 0.0019
Next Token :  rec, Posbility: 0.0031
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0015
Next Token : patterns, Posbility: 0.0015
Next Token : (, Posbility: 0.0024
Next Token : s, Posbility: 0.0177
Next Token : p, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token : 1, Posbility: 0.0003
Next Token : ,, Posbility: 0.0004
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : Pattern, Posbility: 0.0003
Next Token : patterns, Posbility: 0.0006
Next Token : s, Posbility: 0.0015
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token :  , Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0229
Next Token :       , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0128
Next Token : match, Posbility: 0.0128
Next Token : if, Posbility: 0.0164
Next Token : p, Posbility: 0.0347
Next Token : let, Posbility: 0.8945
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0007
Next Token : p, Posbility: 0.0052
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0004
Next Token :     , Posbility: 0.0004
Next Token :         , Posbility: 0.0006
Next Token :      , Posbility: 0.0374
Next Token :       , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0197
Next Token : (, Posbility: 0.0223
Next Token : patterns, Posbility: 0.0253
Next Token : p, Posbility: 0.0535
Next Token : let, Posbility: 0.8359
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  v, Posbility: 0.0005
Next Token :  pattern, Posbility: 0.0015
Next Token :  rec, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0011
Next Token : _, Posbility: 0.0015
Next Token : (, Posbility: 0.0019
Next Token : s, Posbility: 0.0139
Next Token : p, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  in, Posbility: 0.0002
Next Token : 1, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0003
Next Token : patterns, Posbility: 0.0005
Next Token : s, Posbility: 0.0013
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0179
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0101
Next Token : if, Posbility: 0.0130
Next Token : patterns, Posbility: 0.0130
Next Token : p, Posbility: 0.0276
Next Token : let, Posbility: 0.9141
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0002
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : p, Posbility: 0.0052
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0007
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :         , Posbility: 0.0005
Next Token :      , Posbility: 0.0330
Next Token :       , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0197
Next Token : (, Posbility: 0.0223
Next Token : patterns, Posbility: 0.0253
Next Token : p, Posbility: 0.0535
Next Token : let, Posbility: 0.8359
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  v, Posbility: 0.0004
Next Token :  pattern, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0017
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0011
Next Token : patterns, Posbility: 0.0011
Next Token : (, Posbility: 0.0019
Next Token : s, Posbility: 0.0139
Next Token : p, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token :  in, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : ', Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0002
Next Token : patterns, Posbility: 0.0004
Next Token : s, Posbility: 0.0012
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0159
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0103
Next Token : if, Posbility: 0.0103
Next Token : patterns, Posbility: 0.0103
Next Token : p, Posbility: 0.0219
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : p, Posbility: 0.0052
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0007
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Next Token :         , Posbility: 0.0005
Next Token :      , Posbility: 0.0330
Next Token :       , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0143
Next Token : (, Posbility: 0.0161
Next Token : patterns, Posbility: 0.0183
Next Token : p, Posbility: 0.0388
Next Token : let, Posbility: 0.8828
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  v, Posbility: 0.0003
Next Token :  pattern, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0013
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0009
Next Token : _, Posbility: 0.0011
Next Token : (, Posbility: 0.0015
Next Token : s, Posbility: 0.0178
Next Token : p, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  in, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0003
Next Token : patterns, Posbility: 0.0004
Next Token : s, Posbility: 0.0010
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0125
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0082
Next Token : if, Posbility: 0.0082
Next Token : patterns, Posbility: 0.0082
Next Token : p, Posbility: 0.0173
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0007
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0004
Next Token :      , Posbility: 0.0259
Next Token :       , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0112
Next Token : (, Posbility: 0.0184
Next Token : patterns, Posbility: 0.0184
Next Token : p, Posbility: 0.0391
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  v, Posbility: 0.0003
Next Token :  pattern, Posbility: 0.0007
Next Token :  rec, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0007
Next Token : _, Posbility: 0.0009
Next Token : (, Posbility: 0.0011
Next Token : s, Posbility: 0.0140
Next Token : p, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0002
Next Token : patterns, Posbility: 0.0003
Next Token : s, Posbility: 0.0009
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0082
Next Token : if, Posbility: 0.0082
Next Token : patterns, Posbility: 0.0082
Next Token : p, Posbility: 0.0172
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0004
Next Token :      , Posbility: 0.0259
Next Token :       , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0112
Next Token : patterns, Posbility: 0.0162
Next Token : (, Posbility: 0.0184
Next Token : p, Posbility: 0.0391
Next Token : let, Posbility: 0.8906
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  v, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0006
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0005
Next Token : _, Posbility: 0.0007
Next Token : (, Posbility: 0.0009
Next Token : s, Posbility: 0.0109
Next Token : p, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0002
Next Token : patterns, Posbility: 0.0002
Next Token : s, Posbility: 0.0009
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0082
Next Token : if, Posbility: 0.0082
Next Token : patterns, Posbility: 0.0082
Next Token : p, Posbility: 0.0135
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0203
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0101
Next Token : (, Posbility: 0.0146
Next Token : patterns, Posbility: 0.0146
Next Token : p, Posbility: 0.0310
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  v, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0004
Next Token : _, Posbility: 0.0007
Next Token : (, Posbility: 0.0009
Next Token : s, Posbility: 0.0109
Next Token : p, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0002
Next Token : patterns, Posbility: 0.0002
Next Token : s, Posbility: 0.0007
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0064
Next Token : (, Posbility: 0.0073
Next Token : patterns, Posbility: 0.0082
Next Token : p, Posbility: 0.0120
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0229
Next Token :       , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0079
Next Token : patterns, Posbility: 0.0115
Next Token : (, Posbility: 0.0131
Next Token : p, Posbility: 0.0315
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0004
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0009
Next Token : s, Posbility: 0.0109
Next Token : p, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0002
Next Token : patterns, Posbility: 0.0002
Next Token : s, Posbility: 0.0006
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0097
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0064
Next Token : if, Posbility: 0.0072
Next Token : (, Posbility: 0.0082
Next Token : p, Posbility: 0.0153
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0203
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0103
Next Token : patterns, Posbility: 0.0116
Next Token : (, Posbility: 0.0149
Next Token : p, Posbility: 0.0245
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0004
Next Token : _, Posbility: 0.0007
Next Token : (, Posbility: 0.0007
Next Token : s, Posbility: 0.0109
Next Token : p, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Pattern, Posbility: 0.0002
Next Token : patterns, Posbility: 0.0002
Next Token : s, Posbility: 0.0006
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0057
Next Token : patterns, Posbility: 0.0065
Next Token : (, Posbility: 0.0073
Next Token : p, Posbility: 0.0106
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0203
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0090
Next Token : patterns, Posbility: 0.0090
Next Token : (, Posbility: 0.0150
Next Token : p, Posbility: 0.0247
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0004
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0007
Next Token : s, Posbility: 0.0109
Next Token : p, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0001
Next Token : patterns, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0006
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0097
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0045
Next Token : patterns, Posbility: 0.0045
Next Token : (, Posbility: 0.0057
Next Token : p, Posbility: 0.0095
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0179
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0081
Next Token : patterns, Posbility: 0.0092
Next Token : (, Posbility: 0.0133
Next Token : p, Posbility: 0.0220
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0003
Next Token :  pattern, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0004
Next Token : patterns, Posbility: 0.0004
Next Token : (, Posbility: 0.0007
Next Token : s, Posbility: 0.0109
Next Token : p, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : s, Posbility: 0.0004
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0076
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0040
Next Token : if, Posbility: 0.0045
Next Token : (, Posbility: 0.0058
Next Token : p, Posbility: 0.0074
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0179
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0071
Next Token : patterns, Posbility: 0.0092
Next Token : (, Posbility: 0.0134
Next Token : p, Posbility: 0.0194
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0085
Next Token : p, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0005
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0067
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0040
Next Token : patterns, Posbility: 0.0045
Next Token : (, Posbility: 0.0058
Next Token : p, Posbility: 0.0065
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0159
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0056
Next Token : patterns, Posbility: 0.0064
Next Token : (, Posbility: 0.0119
Next Token : p, Posbility: 0.0173
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : s, Posbility: 0.0085
Next Token : p, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0001
Next Token : patterns, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0005
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0067
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0040
Next Token : if, Posbility: 0.0045
Next Token : (, Posbility: 0.0058
Next Token : p, Posbility: 0.0074
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0003
Next Token :      , Posbility: 0.0159
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0072
Next Token : patterns, Posbility: 0.0072
Next Token : (, Posbility: 0.0118
Next Token : p, Posbility: 0.0172
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0085
Next Token : p, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Pattern, Posbility: 0.0001
Next Token : patterns, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0067
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0031
Next Token : if, Posbility: 0.0040
Next Token : (, Posbility: 0.0058
Next Token : p, Posbility: 0.0074
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0159
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0044
Next Token : if, Posbility: 0.0056
Next Token : (, Posbility: 0.0120
Next Token : p, Posbility: 0.0154
Next Token : let, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  pattern, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : s, Posbility: 0.0067
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0004
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0076
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0031
Next Token : if, Posbility: 0.0035
Next Token : p, Posbility: 0.0040
Next Token : (, Posbility: 0.0051
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0140
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0050
Next Token : patterns, Posbility: 0.0050
Next Token : (, Posbility: 0.0106
Next Token : p, Posbility: 0.0154
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0052
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0067
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0024
Next Token : patterns, Posbility: 0.0024
Next Token : p, Posbility: 0.0040
Next Token : (, Posbility: 0.0045
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0125
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0057
Next Token : patterns, Posbility: 0.0057
Next Token : (, Posbility: 0.0106
Next Token : p, Posbility: 0.0136
Next Token : let, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0052
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0059
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0024
Next Token : patterns, Posbility: 0.0028
Next Token : p, Posbility: 0.0035
Next Token : (, Posbility: 0.0045
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0140
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0039
Next Token : match, Posbility: 0.0039
Next Token : (, Posbility: 0.0120
Next Token : p, Posbility: 0.0136
Next Token : let, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0067
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0067
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0022
Next Token : if, Posbility: 0.0028
Next Token : p, Posbility: 0.0035
Next Token : (, Posbility: 0.0045
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0052
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0140
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0045
Next Token : patterns, Posbility: 0.0045
Next Token : (, Posbility: 0.0094
Next Token : p, Posbility: 0.0121
Next Token : let, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0067
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0059
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0019
Next Token : if, Posbility: 0.0028
Next Token : p, Posbility: 0.0028
Next Token : (, Posbility: 0.0040
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0031
Next Token : patterns, Posbility: 0.0031
Next Token : (, Posbility: 0.0084
Next Token : p, Posbility: 0.0095
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0052
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0059
Next Token :       , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0024
Next Token : if, Posbility: 0.0028
Next Token : p, Posbility: 0.0035
Next Token : (, Posbility: 0.0045
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0036
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0125
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0031
Next Token : if, Posbility: 0.0039
Next Token : (, Posbility: 0.0084
Next Token : p, Posbility: 0.0107
Next Token : let, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : s, Posbility: 0.0067
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0052
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0017
Next Token : p, Posbility: 0.0022
Next Token : if, Posbility: 0.0024
Next Token : (, Posbility: 0.0036
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0031
Next Token : if, Posbility: 0.0035
Next Token : (, Posbility: 0.0084
Next Token : p, Posbility: 0.0095
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0052
Next Token : p, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0052
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0017
Next Token : if, Posbility: 0.0022
Next Token : p, Posbility: 0.0024
Next Token : (, Posbility: 0.0040
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0097
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0024
Next Token : if, Posbility: 0.0027
Next Token : (, Posbility: 0.0074
Next Token : p, Posbility: 0.0095
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0046
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0041
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0015
Next Token : p, Posbility: 0.0017
Next Token : patterns, Posbility: 0.0017
Next Token : (, Posbility: 0.0031
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0024
Next Token : if, Posbility: 0.0035
Next Token : (, Posbility: 0.0066
Next Token : p, Posbility: 0.0074
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0032
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0046
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0017
Next Token : p, Posbility: 0.0017
Next Token : patterns, Posbility: 0.0017
Next Token : (, Posbility: 0.0031
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0052
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0097
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0024
Next Token : patterns, Posbility: 0.0027
Next Token : (, Posbility: 0.0066
Next Token : p, Posbility: 0.0074
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0032
Next Token : p, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0041
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      
 score:False
Error type: noerr
---------------------------
Next Token : p, Posbility: 0.0017
Next Token : if, Posbility: 0.0019
Next Token : patterns, Posbility: 0.0019
Next Token : (, Posbility: 0.0036
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  pattern, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : patterns, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0046
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Pattern, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : p, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0097
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether it follows the sequence given in the patterns array. *)
let rec patterns_match patterns s =
  match s with
  | [] -> true
  | _ :: _ ->
      let p = patterns in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      let p = p in
      let s = s in
      
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>