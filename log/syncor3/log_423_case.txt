code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0269
Next Token :  find, Posbility: 0.1206
Next Token :  max, Posbility: 0.1553
Next Token :  , Posbility: 0.1992
Next Token :  rec, Posbility: 0.3281
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  maximum, Posbility: 0.0304
Next Token :  count, Posbility: 0.0391
Next Token :  max, Posbility: 0.1748
Next Token :  find, Posbility: 0.2246
Next Token :  , Posbility: 0.2891
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : longest, Posbility: 0.0342
Next Token : upper, Posbility: 0.0498
Next Token : helper, Posbility: 0.0564
Next Token : uppercase, Posbility: 0.1055
Next Token : f, Posbility: 0.1191
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0260
Next Token : (, Posbility: 0.0295
Next Token :  max, Posbility: 0.0908
Next Token :  =, Posbility: 0.1504
Next Token :  , Posbility: 0.4609
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0140
Next Token : :, Posbility: 0.0488
Next Token : (, Posbility: 0.0806
Next Token : x, Posbility: 0.0806
Next Token : s, Posbility: 0.6719
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0081
Next Token :  len, Posbility: 0.0133
Next Token :  i, Posbility: 0.0466
Next Token :  , Posbility: 0.1270
Next Token :  =, Posbility: 0.7266
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0033
Next Token :  function, Posbility: 0.0131
Next Token :  match, Posbility: 0.0664
Next Token :  , Posbility: 0.0967
Next Token : 
, Posbility: 0.8086
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0032
Next Token :    , Posbility: 0.0067
Next Token : 	, Posbility: 0.0067
Next Token :     , Posbility: 0.0928
Next Token :   , Posbility: 0.8789
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0074
Next Token : (, Posbility: 0.0095
Next Token : let, Posbility: 0.2168
Next Token : if, Posbility: 0.3145
Next Token : match, Posbility: 0.4043
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  str, Posbility: 0.0014
Next Token :  S, Posbility: 0.0017
Next Token :  !, Posbility: 0.0054
Next Token :  String, Posbility: 0.4258
Next Token :  , Posbility: 0.5469
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0087
Next Token : (, Posbility: 0.0183
Next Token : List, Posbility: 0.0723
Next Token : Char, Posbility: 0.0723
Next Token : s, Posbility: 0.7773
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0005
Next Token :  =, Posbility: 0.0005
Next Token :  , Posbility: 0.0009
Next Token : ., Posbility: 0.0009
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0035
Next Token :  [, Posbility: 0.0040
Next Token :  {, Posbility: 0.0051
Next Token :  [], Posbility: 0.0084
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :       , Posbility: 0.0014
Next Token :    , Posbility: 0.0018
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : ", Posbility: 0.0045
Next Token : [, Posbility: 0.0094
Next Token : [], Posbility: 0.0226
Next Token : |, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0212
Next Token :  [, Posbility: 0.0212
Next Token :  , Posbility: 0.0579
Next Token :  "", Posbility: 0.1572
Next Token :  [], Posbility: 0.7070
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0038
Next Token :    , Posbility: 0.0049
Next Token :  =>, Posbility: 0.0134
Next Token :  |, Posbility: 0.0221
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : â†’, Posbility: 0.0003
Next Token : ::, Posbility: 0.0010
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0825
Next Token :  None, Posbility: 0.0825
Next Token :  , Posbility: 0.2246
Next Token :  0, Posbility: 0.2246
Next Token :  [], Posbility: 0.2246
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0021
Next Token :   , Posbility: 0.0050
Next Token :  |, Posbility: 0.0120
Next Token :  , Posbility: 0.0154
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  
 score:False
Error type: noerr
---------------------------
Next Token : when, Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0087
Next Token :  a, Posbility: 0.0143
Next Token :  ", Posbility: 0.0183
Next Token :  [, Posbility: 0.1357
Next Token :  , Posbility: 0.7812
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ch, Posbility: 0.0232
Next Token : s, Posbility: 0.0630
Next Token : x, Posbility: 0.2197
Next Token : c, Posbility: 0.2812
Next Token : _, Posbility: 0.2812
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0067
Next Token :   , Posbility: 0.0096
Next Token :  when, Posbility: 0.0298
Next Token : ::, Posbility: 0.2490
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0004
Next Token : :, Posbility: 0.0010
Next Token : if, Posbility: 0.0598
Next Token : ->, Posbility: 0.2090
Next Token : ::, Posbility: 0.7266
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  a, Posbility: 0.0053
Next Token :  ', Posbility: 0.0087
Next Token :  [], Posbility: 0.0391
Next Token :  rest, Posbility: 0.1064
Next Token :  , Posbility: 0.7852
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : cs, Posbility: 0.0583
Next Token : _, Posbility: 0.0659
Next Token : x, Posbility: 0.1235
Next Token : t, Posbility: 0.2617
Next Token : s, Posbility: 0.2969
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0496
Next Token :  when, Posbility: 0.0562
Next Token : 1, Posbility: 0.1050
Next Token : ', Posbility: 0.1963
Next Token :  , Posbility: 0.4707
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : if, Posbility: 0.0249
Next Token : ::, Posbility: 0.0410
Next Token : ->, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0029
Next Token :  [, Posbility: 0.0047
Next Token :  match, Posbility: 0.0211
Next Token :  , Posbility: 0.2559
Next Token : 
, Posbility: 0.6992
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0042
Next Token :   , Posbility: 0.0114
Next Token :      , Posbility: 0.0129
Next Token :     , Posbility: 0.4844
Next Token :       , Posbility: 0.4844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0210
Next Token : f, Posbility: 0.0393
Next Token : match, Posbility: 0.0732
Next Token : if, Posbility: 0.1992
Next Token : let, Posbility: 0.6133
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0211
Next Token :  l, Posbility: 0.0211
Next Token :  max, Posbility: 0.0574
Next Token :  rec, Posbility: 0.0947
Next Token :  , Posbility: 0.5430
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0488
Next Token : cs, Posbility: 0.0488
Next Token : s, Posbility: 0.0913
Next Token : x, Posbility: 0.1172
Next Token : c, Posbility: 0.2188
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0037
Next Token : ,, Posbility: 0.0101
Next Token : 0, Posbility: 0.0276
Next Token : 1, Posbility: 0.0276
Next Token :  =, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0091
Next Token :  first, Posbility: 0.0150
Next Token :  char, Posbility: 0.0150
Next Token :  String, Posbility: 0.1108
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Character, Posbility: 0.0072
Next Token : (, Posbility: 0.0118
Next Token : List, Posbility: 0.1123
Next Token : Char, Posbility: 0.3926
Next Token : s, Posbility: 0.3926
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0093
Next Token : [0]., Posbility: 0.0197
Next Token :  , Posbility: 0.0325
Next Token : [0], Posbility: 0.2393
Next Token : ., Posbility: 0.6484
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0]., Posbility: 0.0140
Next Token : [0]), Posbility: 0.0205
Next Token : [0, Posbility: 0.0713
Next Token : [, Posbility: 0.0811
Next Token : [0], Posbility: 0.7656
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0013
Next Token :  , Posbility: 0.0017
Next Token :  |, Posbility: 0.0022
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token : 

, Posbility: 0.0007
Next Token :  match, Posbility: 0.0007
Next Token :  , Posbility: 0.0140
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0013
Next Token :           , Posbility: 0.0017
Next Token :         , Posbility: 0.0074
Next Token :      , Posbility: 0.0139
Next Token :       , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0256
Next Token : (, Posbility: 0.0422
Next Token : match, Posbility: 0.1152
Next Token : let, Posbility: 0.2441
Next Token : if, Posbility: 0.5156
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0176
Next Token :  is, Posbility: 0.0374
Next Token :  String, Posbility: 0.0615
Next Token :  char, Posbility: 0.1011
Next Token :  , Posbility: 0.7500
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Unicode, Posbility: 0.0145
Next Token : (', Posbility: 0.0186
Next Token : (, Posbility: 0.0347
Next Token : Char, Posbility: 0.2559
Next Token : c, Posbility: 0.6133
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0289
Next Token :  <=, Posbility: 0.0371
Next Token :  , Posbility: 0.2734
Next Token :  =, Posbility: 0.2734
Next Token :  >=, Posbility: 0.3516
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >=
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0011
Next Token :  '0', Posbility: 0.0011
Next Token : ', Posbility: 0.0015
Next Token :  , Posbility: 0.0178
Next Token :  ', Posbility: 0.9727
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= '
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : X, Posbility: 0.0002
Next Token : C, Posbility: 0.0003
Next Token : Z, Posbility: 0.0011
Next Token : a, Posbility: 0.0674
Next Token : A, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 'A
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 'a
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 'Z
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 'C
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 'X
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (', Posbility: 0.0371
Next Token : L, Posbility: 0.0476
Next Token : Char, Posbility: 0.0786
Next Token : 65, Posbility: 0.3105
Next Token : 97, Posbility: 0.3516
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0014
Next Token :  &, Posbility: 0.0021
Next Token :  , Posbility: 0.0035
Next Token :  &&, Posbility: 0.4004
Next Token :  and, Posbility: 0.5820
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  ', Posbility: 0.0002
Next Token :  not, Posbility: 0.0002
Next Token :  char, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 and 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 and char
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 and not
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 and '
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 and  
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  char, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0001
Next Token : Character, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token :  >=, Posbility: 0.0003
Next Token : <, Posbility: 0.0009
Next Token :  , Posbility: 0.0474
Next Token :  <=, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <=
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  100, Posbility: 0.0002
Next Token : 122, Posbility: 0.0002
Next Token :  121, Posbility: 0.0014
Next Token :  , Posbility: 0.0374
Next Token :  122, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0109
Next Token :  and, Posbility: 0.0109
Next Token :  &&, Posbility: 0.0378
Next Token :  , Posbility: 0.0625
Next Token :  then, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0014
Next Token :  [], Posbility: 0.0027
Next Token :  [, Posbility: 0.0120
Next Token :  , Posbility: 0.3965
Next Token : 
, Posbility: 0.5781
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0083
Next Token :          , Posbility: 0.0199
Next Token :       , Posbility: 0.0288
Next Token :           , Posbility: 0.0889
Next Token :         , Posbility: 0.8438
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0221
Next Token : if, Posbility: 0.0250
Next Token : [, Posbility: 0.0320
Next Token : let, Posbility: 0.3457
Next Token : f, Posbility: 0.5039
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0013
Next Token : (, Posbility: 0.0031
Next Token :  ((, Posbility: 0.0058
Next Token :  [, Posbility: 0.0095
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0002
Next Token : (", Posbility: 0.0002
Next Token : ([, Posbility: 0.0005
Next Token : (, Posbility: 0.4355
Next Token : s, Posbility: 0.5586
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0097
Next Token :  @, Posbility: 0.0181
Next Token :  >>, Posbility: 0.0233
Next Token :  , Posbility: 0.0339
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0014
Next Token :   , Posbility: 0.0063
Next Token :         , Posbility: 0.0197
Next Token :     , Posbility: 0.0251
Next Token :       , Posbility: 0.9453
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      
 score:False
Error type: noerr
---------------------------
Next Token : @, Posbility: 0.0002
Next Token : end, Posbility: 0.0002
Next Token : |, Posbility: 0.0004
Next Token : elif, Posbility: 0.0009
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0008
Next Token : :, Posbility: 0.0012
Next Token :  [, Posbility: 0.0014
Next Token :  , Posbility: 0.0947
Next Token : 
, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0026
Next Token :        , Posbility: 0.0063
Next Token :       , Posbility: 0.0134
Next Token :           , Posbility: 0.0364
Next Token :         , Posbility: 0.9375
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0369
Next Token : s, Posbility: 0.0417
Next Token : c, Posbility: 0.0417
Next Token : f, Posbility: 0.3086
Next Token : let, Posbility: 0.4492
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0211
Next Token :  res, Posbility: 0.0272
Next Token :  new, Posbility: 0.0396
Next Token :  rec, Posbility: 0.1216
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : cs, Posbility: 0.0801
Next Token : c, Posbility: 0.0908
Next Token : x, Posbility: 0.1167
Next Token : r, Posbility: 0.1167
Next Token : s, Posbility: 0.1924
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0349
Next Token : 2, Posbility: 0.0649
Next Token : 1, Posbility: 0.1216
Next Token :  =, Posbility: 0.1562
Next Token : ', Posbility: 0.5469
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : =, Posbility: 0.0005
Next Token : ', Posbility: 0.0012
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Remove, Posbility: 0.0068
Next Token :  drop, Posbility: 0.0068
Next Token : 
, Posbility: 0.0239
Next Token :  String, Posbility: 0.1377
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0131
Next Token : f, Posbility: 0.0190
Next Token : Array, Posbility: 0.0244
Next Token : List, Posbility: 0.0850
Next Token : s, Posbility: 0.8086
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >>, Posbility: 0.0048
Next Token : [1:], Posbility: 0.0147
Next Token :  , Posbility: 0.0352
Next Token :  in, Posbility: 0.1230
Next Token : ., Posbility: 0.8008
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : drop, Posbility: 0.0117
Next Token : [1:, Posbility: 0.0219
Next Token : [1:], Posbility: 0.0593
Next Token : (, Posbility: 0.0977
Next Token : [, Posbility: 0.7227
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0002
Next Token : 2., Posbility: 0.0016
Next Token :  1, Posbility: 0.0020
Next Token : 1, Posbility: 0.0674
Next Token : 1., Posbility: 0.9258
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ];, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ], Posbility: 0.0008
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0037
Next Token : ];, Posbility: 0.0047
Next Token : len, Posbility: 0.0069
Next Token : -1], Posbility: 0.0742
Next Token : ], Posbility: 0.9023
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0013
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..] in
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..]

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..] 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..]  
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..] and
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..-1]
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0026
Next Token : -1], Posbility: 0.0131
Next Token : ], Posbility: 0.1240
Next Token :  , Posbility: 0.1406
Next Token : (, Posbility: 0.7148
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ):, Posbility: 0.0011
Next Token : ., Posbility: 0.0014
Next Token :  , Posbility: 0.0020
Next Token : ), Posbility: 0.3750
Next Token : )], Posbility: 0.6172
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0022
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token :   , Posbility: 0.0010
Next Token :  , Posbility: 0.0140
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0007
Next Token :             , Posbility: 0.0012
Next Token :        , Posbility: 0.0024
Next Token :           , Posbility: 0.0075
Next Token :         , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0136
Next Token : match, Posbility: 0.0198
Next Token : if, Posbility: 0.0781
Next Token : let, Posbility: 0.2734
Next Token : f, Posbility: 0.5781
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f
 score:False
Error type: noerr
---------------------------
Next Token : ', Posbility: 0.0049
Next Token :  ~, Posbility: 0.0056
Next Token :  ((, Posbility: 0.0118
Next Token :  [, Posbility: 0.0221
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f 
 score:False
Error type: noerr
---------------------------
Next Token : c, Posbility: 0.0007
Next Token : (", Posbility: 0.0018
Next Token : ([, Posbility: 0.0030
Next Token : (, Posbility: 0.2656
Next Token : s, Posbility: 0.7227
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0016
Next Token : ',, Posbility: 0.0065
Next Token : '), Posbility: 0.0106
Next Token : 
, Posbility: 0.0137
Next Token : ', Posbility: 0.9570
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
 score:False
Error type: noerr
---------------------------
Next Token :  ++, Posbility: 0.0110
Next Token :  , Posbility: 0.0141
Next Token :  +, Posbility: 0.0160
Next Token : 

, Posbility: 0.4121
Next Token : 
, Posbility: 0.5312
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0388
Next Token :     , Posbility: 0.0498
Next Token : 

, Posbility: 0.0498
Next Token :   , Posbility: 0.2383
Next Token : in, Posbility: 0.3926
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : finite, Posbility: 0.0010
Next Token : ;, Posbility: 0.0068
Next Token :  , Posbility: 0.0571
Next Token : 

, Posbility: 0.1367
Next Token : 
, Posbility: 0.7891
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0381
Next Token : max, Posbility: 0.0405
Next Token :   , Posbility: 0.0625
Next Token : f, Posbility: 0.2188
Next Token : let, Posbility: 0.5234
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0408
Next Token :  main, Posbility: 0.1113
Next Token :  max, Posbility: 0.1260
Next Token :  rec, Posbility: 0.3027
Next Token :  , Posbility: 0.3027
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0297
Next Token : m, Posbility: 0.0488
Next Token : g, Posbility: 0.0625
Next Token : (), Posbility: 0.0806
Next Token : f, Posbility: 0.4629
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0659
Next Token : ', Posbility: 0.0659
Next Token :  =, Posbility: 0.0962
Next Token : _, Posbility: 0.1089
Next Token :  , Posbility: 0.4316
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0019
Next Token : (), Posbility: 0.0031
Next Token : (, Posbility: 0.0074
Next Token : x, Posbility: 0.0138
Next Token : s, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0007
Next Token :  , Posbility: 0.0028
Next Token : 1, Posbility: 0.0028
Next Token : 0, Posbility: 0.0052
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0013
Next Token :  match, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0035
Next Token : 
, Posbility: 0.1172
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0039
Next Token : s, Posbility: 0.0050
Next Token : List, Posbility: 0.0064
Next Token : let, Posbility: 0.0073
Next Token : f, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0034
Next Token :  "", Posbility: 0.0034
Next Token :  [, Posbility: 0.0091
Next Token :  [], Posbility: 0.0464
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0002
Next Token : List, Posbility: 0.0002
Next Token : [0, Posbility: 0.0003
Next Token : (, Posbility: 0.0374
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0177
Next Token :  [], Posbility: 0.0258
Next Token :  |, Posbility: 0.0258
Next Token : 
, Posbility: 0.4043
Next Token : 

, Posbility: 0.4570
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s


 score:True
Error type: Syntaxerr.Other_continue
---------------------------
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0437
Next Token : [, Posbility: 0.0598
Next Token : (, Posbility: 0.0767
Next Token : print, Posbility: 0.0869
Next Token : let, Posbility: 0.2676
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0211
Next Token :  main, Posbility: 0.0271
Next Token :  max, Posbility: 0.0947
Next Token :  rec, Posbility: 0.1216
Next Token :  , Posbility: 0.5430
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
let 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
let rec
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
let max
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
let main
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
let result
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0070
Next Token :  [, Posbility: 0.0070
Next Token :  ", Posbility: 0.0359
Next Token : _, Posbility: 0.2988
Next Token :  , Posbility: 0.6328
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [", Posbility: 0.0044
Next Token : (", Posbility: 0.0093
Next Token : s, Posbility: 0.0776
Next Token : (, Posbility: 0.2393
Next Token : f, Posbility: 0.6484
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0161
Next Token :  [, Posbility: 0.0183
Next Token :  "", Posbility: 0.0208
Next Token :  , Posbility: 0.1963
Next Token :  ", Posbility: 0.6875
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0437
Next Token : abc, Posbility: 0.0562
Next Token : ABC, Posbility: 0.0635
Next Token : Hello, Posbility: 0.0718
Next Token : A, Posbility: 0.0718
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0276
Next Token :  string, Posbility: 0.0518
Next Token : a, Posbility: 0.0967
Next Token : bc, Posbility: 0.1592
Next Token :  , Posbility: 0.2041
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0266
Next Token : b, Posbility: 0.0342
Next Token : C, Posbility: 0.0342
Next Token : quick, Posbility: 0.0820
Next Token : B, Posbility: 0.1963
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  O, Posbility: 0.0033
Next Token : ", Posbility: 0.0315
Next Token :  a, Posbility: 0.0315
Next Token :  A, Posbility: 0.0664
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0082
Next Token : B, Posbility: 0.0082
Next Token : AB, Posbility: 0.0222
Next Token : c, Posbility: 0.0415
Next Token : C, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0074
Next Token : ";, Posbility: 0.0139
Next Token :  A, Posbility: 0.0708
Next Token : ", Posbility: 0.1924
Next Token :  , Posbility: 0.6719
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0177
Next Token : AB, Posbility: 0.0177
Next Token : Z, Posbility: 0.0227
Next Token : d, Posbility: 0.0292
Next Token : D, Posbility: 0.7500
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0039
Next Token : ";, Posbility: 0.0121
Next Token :  A, Posbility: 0.0226
Next Token : ", Posbility: 0.1895
Next Token :  , Posbility: 0.7500
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0049
Next Token : F, Posbility: 0.0063
Next Token : e, Posbility: 0.0091
Next Token : ABC, Posbility: 0.0091
Next Token : E, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0023
Next Token : ";, Posbility: 0.0090
Next Token :  A, Posbility: 0.0149
Next Token : ", Posbility: 0.1416
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : FG, Posbility: 0.0027
Next Token : Z, Posbility: 0.0050
Next Token : G, Posbility: 0.0065
Next Token : f, Posbility: 0.0083
Next Token : F, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0047
Next Token :  A, Posbility: 0.0054
Next Token :  GH, Posbility: 0.0188
Next Token : ", Posbility: 0.1572
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0016
Next Token : X, Posbility: 0.0024
Next Token : H, Posbility: 0.0045
Next Token : g, Posbility: 0.0199
Next Token : G, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0036
Next Token :  A, Posbility: 0.0053
Next Token :  I, Posbility: 0.0053
Next Token : ", Posbility: 0.0830
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0006
Next Token : G, Posbility: 0.0012
Next Token : HI, Posbility: 0.0024
Next Token : h, Posbility: 0.0059
Next Token : H, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0011
Next Token :  J, Posbility: 0.0051
Next Token :  , Posbility: 0.0066
Next Token : ", Posbility: 0.0108
Next Token :  I, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : J, Posbility: 0.0024
Next Token : ", Posbility: 0.0035
Next Token :  , Posbility: 0.0075
Next Token :  K, Posbility: 0.0075
Next Token :  J, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0003
Next Token : K, Posbility: 0.0005
Next Token :  , Posbility: 0.0066
Next Token : ", Posbility: 0.0066
Next Token :  K, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0003
Next Token :  M, Posbility: 0.0009
Next Token : ";, Posbility: 0.0009
Next Token : ", Posbility: 0.0292
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0001
Next Token : Z, Posbility: 0.0001
Next Token : X, Posbility: 0.0002
Next Token : \, Posbility: 0.0004
Next Token : L, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  O, Posbility: 0.0005
Next Token :  N, Posbility: 0.0014
Next Token : ", Posbility: 0.0154
Next Token :  , Posbility: 0.0287
Next Token :  M, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0010
Next Token :  O, Posbility: 0.0013
Next Token : ", Posbility: 0.0017
Next Token :  NO, Posbility: 0.0019
Next Token :  N, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token :  , Posbility: 0.0012
Next Token :  P, Posbility: 0.0017
Next Token : ", Posbility: 0.0036
Next Token :  O, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  O, Posbility: 0.0038
Next Token :  Q, Posbility: 0.0043
Next Token : ", Posbility: 0.0278
Next Token :  , Posbility: 0.0405
Next Token :  P, Posbility: 0.9219
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  R, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token :  P, Posbility: 0.0017
Next Token : ", Posbility: 0.0046
Next Token :  Q, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0001
Next Token :  S, Posbility: 0.0004
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 0.0179
Next Token :  R, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0001
Next Token :  R, Posbility: 0.0008
Next Token : ", Posbility: 0.0015
Next Token :  , Posbility: 0.0019
Next Token :  S, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token :  R, Posbility: 0.0001
Next Token :  S, Posbility: 0.0002
Next Token : ", Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : t, Posbility: 0.0003
Next Token : U, Posbility: 0.0004
Next Token : T, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  UC, Posbility: 0.0002
Next Token : ";, Posbility: 0.0002
Next Token :  W, Posbility: 0.0007
Next Token : ", Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Y, Posbility: 0.0000
Next Token : Z, Posbility: 0.0000
Next Token : X, Posbility: 0.0001
Next Token : V, Posbility: 0.0001
Next Token : U, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  I, Posbility: 0.0001
Next Token : ", Posbility: 0.0012
Next Token :  W, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0001
Next Token : U, Posbility: 0.0002
Next Token : Y, Posbility: 0.0003
Next Token : X, Posbility: 0.0009
Next Token : V, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  A, Posbility: 0.0000
Next Token : W, Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 0.0041
Next Token :  W, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  W, Posbility: 0.0001
Next Token : XYZ, Posbility: 0.0004
Next Token : X, Posbility: 0.0025
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : XX, Posbility: 0.0001
Next Token : XYZ, Posbility: 0.0002
Next Token : Z, Posbility: 0.0007
Next Token : Y, Posbility: 0.0022
Next Token : X, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token :  W, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ", Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : X, Posbility: 0.0001
Next Token : YY, Posbility: 0.0001
Next Token : Z, Posbility: 0.0013
Next Token : Y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : Z, Posbility: 0.0009
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : Z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  0, Posbility: 0.0148
Next Token : ";, Posbility: 0.0515
Next Token :  , Posbility: 0.0747
Next Token :  A, Posbility: 0.1089
Next Token : ", Posbility: 0.7109
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0349
Next Token :  |, Posbility: 0.0349
Next Token :  =, Posbility: 0.0447
Next Token : 

, Posbility: 0.2275
Next Token : 
, Posbility: 0.6172
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0400
Next Token : ```, Posbility: 0.0427
Next Token : println, Posbility: 0.0620
Next Token : print, Posbility: 0.0747
Next Token : let, Posbility: 0.3574
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0148
Next Token :  main, Posbility: 0.0850
Next Token :  max, Posbility: 0.1240
Next Token :  rec, Posbility: 0.1240
Next Token :  , Posbility: 0.4902
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
let 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
let rec
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
let max
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
let main
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
let result
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "", Posbility: 0.0098
Next Token : _, Posbility: 0.0111
Next Token :  ", Posbility: 0.0820
Next Token :  "\, Posbility: 0.1738
Next Token :  , Posbility: 0.6875
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (", Posbility: 0.0053
Next Token : s, Posbility: 0.0099
Next Token : ",, Posbility: 0.0145
Next Token : (, Posbility: 0.0447
Next Token : f, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0021
Next Token :  "\, Posbility: 0.0072
Next Token :  "", Posbility: 0.0082
Next Token :  , Posbility: 0.0251
Next Token :  ", Posbility: 0.9453
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 0, Posbility: 0.0182
Next Token : !, Posbility: 0.0206
Next Token : abc, Posbility: 0.0265
Next Token : A, Posbility: 0.0928
Next Token : a, Posbility: 0.5312
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0013
Next Token :    , Posbility: 0.0017
Next Token : ", Posbility: 0.0031
Next Token :  A, Posbility: 0.0036
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : c, Posbility: 0.0007
Next Token : B, Posbility: 0.0028
Next Token : b, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ", Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : d, Posbility: 0.0001
Next Token : C, Posbility: 0.0005
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : D, Posbility: 0.0000
Next Token : e, Posbility: 0.0000
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ef, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : E, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : F, Posbility: 0.0001
Next Token : g, Posbility: 0.0001
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  gh, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : G, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 0.0004
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  hg, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : H, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  ii, Posbility: 0.0001
Next Token :  , Posbility: 0.0032
Next Token :  i, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  k, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : jk, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 0.0110
Next Token :  l, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : mn, Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  no, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : o, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  op, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : p, Posbility: 0.0002
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0001
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  que, Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  qu, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : qq, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : r, Posbility: 0.0032
Next Token : q, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  rR, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : w, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : t, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token :  , Posbility: 0.0052
Next Token :  v, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 0.0059
Next Token : w, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  za, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : Z, Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0012
Next Token : ";, Posbility: 0.0015
Next Token :  , Posbility: 0.0022
Next Token :  A, Posbility: 0.0046
Next Token : ", Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : , Posbility: 0.0039
Next Token :  |, Posbility: 0.0065
Next Token :  , Posbility: 0.0095
Next Token : 

, Posbility: 0.2158
Next Token : 
, Posbility: 0.7539
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : *, Posbility: 0.0245
Next Token : println, Posbility: 0.0588
Next Token : (, Posbility: 0.0625
Next Token : print, Posbility: 0.1602
Next Token : let, Posbility: 0.4082
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0099
Next Token :  max, Posbility: 0.0447
Next Token :  main, Posbility: 0.0447
Next Token :  rec, Posbility: 0.1216
Next Token :  , Posbility: 0.6992
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
let 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
let rec
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
let main
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
let max
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
let a
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "", Posbility: 0.0027
Next Token : 
, Posbility: 0.0056
Next Token :  "\, Posbility: 0.0135
Next Token :  ", Posbility: 0.0154
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (", Posbility: 0.0009
Next Token : List, Posbility: 0.0014
Next Token : s, Posbility: 0.0019
Next Token : (, Posbility: 0.0227
Next Token : f, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0049
Next Token :  "\, Posbility: 0.0092
Next Token :  "", Posbility: 0.0104
Next Token :  , Posbility: 0.0172
Next Token :  ", Posbility: 0.9375
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 1, Posbility: 0.0261
Next Token : ABC, Posbility: 0.0295
Next Token : !, Posbility: 0.0334
Next Token : a, Posbility: 0.0908
Next Token : A, Posbility: 0.5234
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0120
Next Token :  A, Posbility: 0.0325
Next Token : a, Posbility: 0.0537
Next Token :  a, Posbility: 0.1001
Next Token :  , Posbility: 0.7422
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0023
Next Token : E, Posbility: 0.0023
Next Token : C, Posbility: 0.0101
Next Token : b, Posbility: 0.0515
Next Token : B, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0015
Next Token :  A, Posbility: 0.0045
Next Token :  a, Posbility: 0.0045
Next Token : ", Posbility: 0.0074
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Ca, Posbility: 0.0005
Next Token : E, Posbility: 0.0009
Next Token : D, Posbility: 0.0022
Next Token : c, Posbility: 0.0066
Next Token : C, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  a, Posbility: 0.0006
Next Token :  A, Posbility: 0.0008
Next Token : ", Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0004
Next Token : Y, Posbility: 0.0004
Next Token : E, Posbility: 0.0015
Next Token : d, Posbility: 0.0124
Next Token : D, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  I, Posbility: 0.0003
Next Token :  a, Posbility: 0.0004
Next Token :  A, Posbility: 0.0008
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0002
Next Token : EF, Posbility: 0.0002
Next Token : F, Posbility: 0.0022
Next Token : e, Posbility: 0.0046
Next Token : E, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  a, Posbility: 0.0004
Next Token :  I, Posbility: 0.0007
Next Token : ", Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : H, Posbility: 0.0002
Next Token : FG, Posbility: 0.0004
Next Token : G, Posbility: 0.0036
Next Token : f, Posbility: 0.0041
Next Token : F, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  a, Posbility: 0.0003
Next Token :  GH, Posbility: 0.0025
Next Token : ", Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0001
Next Token : F, Posbility: 0.0001
Next Token : H, Posbility: 0.0015
Next Token : g, Posbility: 0.0019
Next Token : G, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  K, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  I, Posbility: 0.0006
Next Token : ", Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : HH, Posbility: 0.0001
Next Token : HI, Posbility: 0.0001
Next Token : G, Posbility: 0.0009
Next Token : h, Posbility: 0.0010
Next Token : H, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  i, Posbility: 0.0001
Next Token : ", Posbility: 0.0005
Next Token :  J, Posbility: 0.0012
Next Token :  , Posbility: 0.0041
Next Token :  I, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0001
Next Token : J, Posbility: 0.0005
Next Token :  K, Posbility: 0.0008
Next Token :  , Posbility: 0.0085
Next Token :  J, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  k, Posbility: 0.0004
Next Token :  , Posbility: 0.0025
Next Token :  K, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  M, Posbility: 0.0001
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : H, Posbility: 0.0000
Next Token : LL, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : L, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token :  N, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token :  M, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  NO, Posbility: 0.0003
Next Token :  O, Posbility: 0.0003
Next Token :  N, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  P, Posbility: 0.0005
Next Token :  O, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  R, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token :  Q, Posbility: 0.0009
Next Token :  , Posbility: 0.0076
Next Token :  P, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : Q, Posbility: 0.0001
Next Token :  R, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  Q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : R, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  S, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token :  R, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  S, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token :  S, Posbility: 0.0000
Next Token : ", Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0000
Next Token : V, Posbility: 0.0001
Next Token : t, Posbility: 0.0005
Next Token : U, Posbility: 0.0007
Next Token : T, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  W, Posbility: 0.0001
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : u, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : V, Posbility: 0.0001
Next Token : U, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  I, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  W, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : V, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : W, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token :  W, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  W, Posbility: 0.0001
Next Token : X, Posbility: 0.0005
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : XX, Posbility: 0.0001
Next Token : Z, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : Y, Posbility: 0.0003
Next Token : X, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  N, Posbility: 0.0001
Next Token :  ", Posbility: 0.0001
Next Token : ", Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : YY, Posbility: 0.0001
Next Token : Z, Posbility: 0.0004
Next Token : Y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : Z, Posbility: 0.0004
Next Token : ", Posbility: 0.0041
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : ZZ, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : Z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  0, Posbility: 0.0210
Next Token :  a, Posbility: 0.0830
Next Token :  , Posbility: 0.1367
Next Token :  A, Posbility: 0.1992
Next Token : ", Posbility: 0.4766
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : , Posbility: 0.0038
Next Token :  |, Posbility: 0.0038
Next Token :  , Posbility: 0.0092
Next Token : 

, Posbility: 0.1445
Next Token : 
, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0151
Next Token : println, Posbility: 0.0437
Next Token : (, Posbility: 0.0527
Next Token : let, Posbility: 0.2363
Next Token : print, Posbility: 0.5312
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "", Posbility: 0.0005
Next Token :  "\, Posbility: 0.0013
Next Token : 
, Posbility: 0.0022
Next Token :  ", Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (", Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Next Token : (, Posbility: 0.0052
Next Token : f, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0024
Next Token :  "\, Posbility: 0.0035
Next Token :  , Posbility: 0.0074
Next Token :  "", Posbility: 0.0084
Next Token :  ", Posbility: 0.9688
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 1, Posbility: 0.0058
Next Token : abc, Posbility: 0.0058
Next Token :  a, Posbility: 0.0095
Next Token : A, Posbility: 0.0703
Next Token : a, Posbility: 0.8555
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token : B, Posbility: 0.0003
Next Token :  A, Posbility: 0.0005
Next Token :  a, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token : c, Posbility: 0.0005
Next Token : B, Posbility: 0.0203
Next Token : b, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  a, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : e, Posbility: 0.0000
Next Token : d, Posbility: 0.0001
Next Token : C, Posbility: 0.0022
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : D, Posbility: 0.0009
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ef, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : E, Posbility: 0.0003
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : g, Posbility: 0.0002
Next Token : F, Posbility: 0.0009
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token : gh, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  gh, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : G, Posbility: 0.0001
Next Token : h, Posbility: 0.0002
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : H, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token :  ii, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : jk, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : lm, Posbility: 0.0000
Next Token : mn, Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  nn, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  no, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : oo, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  P, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  qu, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  rR, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  vs, Posbility: 0.0000
Next Token :  va, Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token :  , Posbility: 0.0059
Next Token :  v, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : yy, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : Z, Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0013
Next Token : \, Posbility: 0.0015
Next Token :  , Posbility: 0.0017
Next Token :  A, Posbility: 0.0025
Next Token : ", Posbility: 0.9883
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0024
Next Token : , Posbility: 0.0034
Next Token :  , Posbility: 0.0034
Next Token : 

, Posbility: 0.1465
Next Token : 
, Posbility: 0.8398
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0199
Next Token : (, Posbility: 0.0576
Next Token : println, Posbility: 0.0576
Next Token : let, Posbility: 0.2930
Next Token : print, Posbility: 0.3750
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "", Posbility: 0.0010
Next Token : 
, Posbility: 0.0019
Next Token :  "\, Posbility: 0.0019
Next Token :  ", Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : List, Posbility: 0.0003
Next Token : let, Posbility: 0.0003
Next Token : (, Posbility: 0.0059
Next Token : f, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0015
Next Token :  "\, Posbility: 0.0027
Next Token :  , Posbility: 0.0045
Next Token :  "", Posbility: 0.0096
Next Token :  ", Posbility: 0.9766
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : AA, Posbility: 0.0094
Next Token : !, Posbility: 0.0106
Next Token : ABC, Posbility: 0.0255
Next Token : a, Posbility: 0.0610
Next Token : A, Posbility: 0.7461
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0039
Next Token : a, Posbility: 0.0045
Next Token :  A, Posbility: 0.0045
Next Token :  a, Posbility: 0.0051
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0005
Next Token : BC, Posbility: 0.0007
Next Token : C, Posbility: 0.0045
Next Token : b, Posbility: 0.0123
Next Token : B, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  a, Posbility: 0.0009
Next Token :  A, Posbility: 0.0013
Next Token : ", Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0002
Next Token : E, Posbility: 0.0003
Next Token : D, Posbility: 0.0009
Next Token : c, Posbility: 0.0015
Next Token : C, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  A, Posbility: 0.0004
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0002
Next Token : X, Posbility: 0.0002
Next Token : E, Posbility: 0.0012
Next Token : d, Posbility: 0.0032
Next Token : D, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  I, Posbility: 0.0002
Next Token :  A, Posbility: 0.0004
Next Token : ", Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : G, Posbility: 0.0001
Next Token : X, Posbility: 0.0001
Next Token : e, Posbility: 0.0008
Next Token : F, Posbility: 0.0009
Next Token : E, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  I, Posbility: 0.0003
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : H, Posbility: 0.0001
Next Token : FG, Posbility: 0.0003
Next Token : f, Posbility: 0.0008
Next Token : G, Posbility: 0.0025
Next Token : F, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : GH, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  GH, Posbility: 0.0008
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0000
Next Token : X, Posbility: 0.0001
Next Token : g, Posbility: 0.0003
Next Token : H, Posbility: 0.0005
Next Token : G, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  K, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  I, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : HH, Posbility: 0.0000
Next Token : HI, Posbility: 0.0001
Next Token : h, Posbility: 0.0002
Next Token : G, Posbility: 0.0003
Next Token : H, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  K, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  J, Posbility: 0.0006
Next Token :  , Posbility: 0.0007
Next Token :  I, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  JS, Posbility: 0.0000
Next Token : J, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  K, Posbility: 0.0004
Next Token :  J, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : K, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  K, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  I, Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token :  M, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : LM, Posbility: 0.0000
Next Token : LL, Posbility: 0.0000
Next Token : L, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token :  N, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  M, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  No, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  O, Posbility: 0.0002
Next Token :  NO, Posbility: 0.0003
Next Token :  N, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  Q, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  P, Posbility: 0.0003
Next Token :  O, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  R, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  Q, Posbility: 0.0008
Next Token :  , Posbility: 0.0013
Next Token :  P, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : Q, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  Q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  S, Posbility: 0.0000
Next Token :  , Posbility: 0.0010
Next Token :  R, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  S, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  I, Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  S, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : V, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : U, Posbility: 0.0003
Next Token : T, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : V, Posbility: 0.0000
Next Token : U, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  R, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  W, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : V, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : W, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  W, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token : X, Posbility: 0.0002
Next Token : ", Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : XY, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : XX, Posbility: 0.0001
Next Token : Y, Posbility: 0.0001
Next Token : X, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  N, Posbility: 0.0001
Next Token :  W, Posbility: 0.0001
Next Token :  I, Posbility: 0.0001
Next Token : ", Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : YYYY, Posbility: 0.0000
Next Token : YY, Posbility: 0.0001
Next Token : Z, Posbility: 0.0003
Next Token : Y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : Z, Posbility: 0.0003
Next Token : ", Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : C, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : B, Posbility: 0.0000
Next Token : ZZ, Posbility: 0.0001
Next Token : Z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : A, Posbility: 0.0026
Next Token :  a, Posbility: 0.0103
Next Token :  , Posbility: 0.0219
Next Token :  A, Posbility: 0.0219
Next Token : ", Posbility: 0.9297
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0008
Next Token :  , Posbility: 0.0036
Next Token : , Posbility: 0.0041
Next Token : 

, Posbility: 0.1055
Next Token : 
, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0089
Next Token : println, Posbility: 0.0289
Next Token : (, Posbility: 0.0349
Next Token : let, Posbility: 0.1885
Next Token : print, Posbility: 0.6602
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "", Posbility: 0.0003
Next Token :  "\, Posbility: 0.0004
Next Token : 
, Posbility: 0.0008
Next Token :  ", Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : (", Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : (, Posbility: 0.0025
Next Token : f, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token :  "\, Posbility: 0.0009
Next Token :  , Posbility: 0.0028
Next Token :  "", Posbility: 0.0075
Next Token :  ", Posbility: 0.9844
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : abc, Posbility: 0.0011
Next Token : 1, Posbility: 0.0013
Next Token :  a, Posbility: 0.0057
Next Token : A, Posbility: 0.0254
Next Token : a, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  A, Posbility: 0.0001
Next Token :  a, Posbility: 0.0002
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : bc, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : B, Posbility: 0.0059
Next Token : b, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : d, Posbility: 0.0001
Next Token : C, Posbility: 0.0008
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : D, Posbility: 0.0003
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ef, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : E, Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : g, Posbility: 0.0001
Next Token : F, Posbility: 0.0003
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  gh, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : G, Posbility: 0.0000
Next Token : h, Posbility: 0.0001
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : H, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  ii, Posbility: 0.0003
Next Token :  i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : jk, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  key, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  \", Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : lm, Posbility: 0.0000
Next Token : mn, Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  no, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : oo, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  P, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  qu, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  rR, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  S, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  va, Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token :  , Posbility: 0.0013
Next Token :  v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : yy, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : Z, Posbility: 0.0000
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  A, Posbility: 0.0003
Next Token : ";, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token : \, Posbility: 0.0006
Next Token : ", Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0011
Next Token :  , Posbility: 0.0020
Next Token : , Posbility: 0.0042
Next Token : 

, Posbility: 0.0947
Next Token : 
, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0188
Next Token : println, Posbility: 0.0352
Next Token : (, Posbility: 0.0422
Next Token : let, Posbility: 0.2148
Next Token : print, Posbility: 0.5508
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "\, Posbility: 0.0006
Next Token :  "", Posbility: 0.0006
Next Token : 
, Posbility: 0.0008
Next Token :  ", Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : (", Posbility: 0.0001
Next Token : (, Posbility: 0.0019
Next Token : f, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  "\, Posbility: 0.0009
Next Token :  , Posbility: 0.0022
Next Token :  "", Posbility: 0.0067
Next Token :  ", Posbility: 0.9883
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : AA, Posbility: 0.0023
Next Token :  A, Posbility: 0.0038
Next Token : ABC, Posbility: 0.0072
Next Token : a, Posbility: 0.0134
Next Token : A, Posbility: 0.9375
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0005
Next Token :  a, Posbility: 0.0005
Next Token :  A, Posbility: 0.0010
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : D, Posbility: 0.0001
Next Token : BC, Posbility: 0.0001
Next Token : C, Posbility: 0.0008
Next Token : b, Posbility: 0.0012
Next Token : B, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  A, Posbility: 0.0002
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0000
Next Token : E, Posbility: 0.0001
Next Token : c, Posbility: 0.0002
Next Token : D, Posbility: 0.0002
Next Token : C, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  A, Posbility: 0.0001
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : d, Posbility: 0.0002
Next Token : E, Posbility: 0.0002
Next Token : D, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token :  A, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : D, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : F, Posbility: 0.0002
Next Token : E, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  I, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : H, Posbility: 0.0000
Next Token : FG, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : G, Posbility: 0.0006
Next Token : F, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  GH, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : H, Posbility: 0.0001
Next Token : G, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  I, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : HH, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : HI, Posbility: 0.0000
Next Token : G, Posbility: 0.0001
Next Token : H, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  K, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  J, Posbility: 0.0001
Next Token :  I, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  JS, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : J, Posbility: 0.0001
Next Token :  K, Posbility: 0.0001
Next Token :  J, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : K, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  K, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : L, Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token :  M, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : H, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : LL, Posbility: 0.0000
Next Token : LM, Posbility: 0.0000
Next Token : L, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  N, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  M, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  M, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  O, Posbility: 0.0001
Next Token :  NO, Posbility: 0.0001
Next Token :  N, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  N, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  P, Posbility: 0.0001
Next Token :  O, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  PP, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  Q, Posbility: 0.0004
Next Token :  P, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  P, Posbility: 0.0000
Next Token : Q, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  Q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  O, Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  S, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  R, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  S, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token :  S, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : V, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : U, Posbility: 0.0001
Next Token : T, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : V, Posbility: 0.0000
Next Token : U, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  W, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : V, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : W, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  W, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  W, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : X, Posbility: 0.0001
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : XY, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : XX, Posbility: 0.0000
Next Token : X, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  N, Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token : ", Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0000
Next Token : YYYY, Posbility: 0.0000
Next Token : YY, Posbility: 0.0000
Next Token : Z, Posbility: 0.0001
Next Token : Y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : Z, Posbility: 0.0001
Next Token : ", Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : C, Posbility: 0.0000
Next Token : B, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : ZZ, Posbility: 0.0000
Next Token : Z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : A, Posbility: 0.0005
Next Token :  a, Posbility: 0.0012
Next Token :  A, Posbility: 0.0022
Next Token :  , Posbility: 0.0036
Next Token : ", Posbility: 0.9883
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0004
Next Token :  , Posbility: 0.0018
Next Token : , Posbility: 0.0038
Next Token : 

, Posbility: 0.0752
Next Token : 
, Posbility: 0.9180
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0062
Next Token : println, Posbility: 0.0190
Next Token : (, Posbility: 0.0231
Next Token : let, Posbility: 0.1328
Next Token : print, Posbility: 0.7617
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "\, Posbility: 0.0002
Next Token :  "", Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  ", Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (", Posbility: 0.0001
Next Token : (, Posbility: 0.0010
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  "\, Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :  "", Posbility: 0.0036
Next Token :  ", Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0003
Next Token : 1, Posbility: 0.0004
Next Token :  a, Posbility: 0.0024
Next Token : A, Posbility: 0.0096
Next Token : a, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  A, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : bc, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : B, Posbility: 0.0010
Next Token : b, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : C, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : e, Posbility: 0.0000
Next Token : D, Posbility: 0.0001
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ef, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : E, Posbility: 0.0000
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : F, Posbility: 0.0001
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  gh, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : G, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : H, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  ii, Posbility: 0.0002
Next Token :  i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : jk, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  key, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  \", Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : lm, Posbility: 0.0000
Next Token : mn, Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  no, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  P, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  qu, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : qq, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  rR, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : w, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  va, Posbility: 0.0000
Next Token :  vi, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : u, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : yy, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : Z, Posbility: 0.0000
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : \, Posbility: 0.0002
Next Token : ";, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : ", Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0005
Next Token :  , Posbility: 0.0012
Next Token : , Posbility: 0.0033
Next Token : 

, Posbility: 0.0845
Next Token : 
, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0115
Next Token : (, Posbility: 0.0214
Next Token : println, Posbility: 0.0214
Next Token : let, Posbility: 0.1157
Next Token : print, Posbility: 0.7539
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "\, Posbility: 0.0002
Next Token :  "", Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  ", Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : (", Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "\, Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0013
Next Token :  "", Posbility: 0.0059
Next Token :  ", Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0010
Next Token :  A, Posbility: 0.0013
Next Token : ABC, Posbility: 0.0021
Next Token : a, Posbility: 0.0084
Next Token : A, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  A, Posbility: 0.0004
Next Token : ", Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : BC, Posbility: 0.0000
Next Token : D, Posbility: 0.0000
Next Token : b, Posbility: 0.0002
Next Token : C, Posbility: 0.0003
Next Token : B, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  A, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0000
Next Token : E, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : D, Posbility: 0.0000
Next Token : C, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  A, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : C, Posbility: 0.0000
Next Token : F, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : E, Posbility: 0.0000
Next Token : D, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token :  A, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : D, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : F, Posbility: 0.0001
Next Token : E, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  K, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : FG, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : H, Posbility: 0.0000
Next Token : G, Posbility: 0.0002
Next Token : F, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  GH, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : H, Posbility: 0.0001
Next Token : G, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  I, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : HI, Posbility: 0.0000
Next Token : G, Posbility: 0.0000
Next Token : H, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : I, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  J, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  I, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  JS, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token : J, Posbility: 0.0001
Next Token :  J, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : K, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  K, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : L, Posbility: 0.0000
Next Token :  K, Posbility: 0.0000
Next Token :  M, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0000
Next Token : H, Posbility: 0.0000
Next Token : LM, Posbility: 0.0000
Next Token : LL, Posbility: 0.0000
Next Token : L, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  N, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  M, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  NN, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  O, Posbility: 0.0000
Next Token :  NO, Posbility: 0.0001
Next Token :  N, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  P, Posbility: 0.0000
Next Token :  O, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  PP, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  Q, Posbility: 0.0002
Next Token :  P, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  P, Posbility: 0.0000
Next Token : Q, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  Q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  O, Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  S, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  R, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  Q, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  S, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  I, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  S, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : V, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : T, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  R, Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : V, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : U, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  R, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  W, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : U, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : V, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  Q, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : W, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  W, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  W, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : X, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : XY, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : XX, Posbility: 0.0000
Next Token : X, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  N, Posbility: 0.0000
Next Token :  I, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : X, Posbility: 0.0000
Next Token : YYYY, Posbility: 0.0000
Next Token : YY, Posbility: 0.0000
Next Token : Z, Posbility: 0.0000
Next Token : Y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ", Posbility: 0.0000
Next Token : Z, Posbility: 0.0001
Next Token : ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : C, Posbility: 0.0000
Next Token : B, Posbility: 0.0000
Next Token : Y, Posbility: 0.0000
Next Token : ZZ, Posbility: 0.0000
Next Token : Z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : A, Posbility: 0.0002
Next Token :  a, Posbility: 0.0002
Next Token :  A, Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token : ", Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token : , Posbility: 0.0033
Next Token : 

, Posbility: 0.0752
Next Token : 
, Posbility: 0.9180
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : val, Posbility: 0.0056
Next Token : println, Posbility: 0.0133
Next Token : (, Posbility: 0.0151
Next Token : let, Posbility: 0.0986
Next Token : print, Posbility: 0.8242
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "\, Posbility: 0.0001
Next Token :  "", Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  ", Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0008
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "\, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  "", Posbility: 0.0025
Next Token :  ", Posbility: 0.9961
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : b, Posbility: 0.0002
Next Token :  a, Posbility: 0.0013
Next Token : A, Posbility: 0.0046
Next Token : a, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0000
Next Token : bc, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : B, Posbility: 0.0003
Next Token : b, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : C, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c 
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : e, Posbility: 0.0000
Next Token : D, Posbility: 0.0000
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  ef, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find maximum run of uppercase characters in the given string. *)
let rec f s =
  match s with
  | [] -> []
  | _ :: s ->
      let c = s.[0] in
      if c >= 97 && c <= 122 then
        f s
      else
        let s' = s.[1..len(s)] in
        f s'
in
let f s = f s
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d e f g h i j k l m n o p q r s t u v w x y z"
print f "A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"
print f "a b c d 
 score:False
Error type: Lexer.Errorr
---------------------------


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>