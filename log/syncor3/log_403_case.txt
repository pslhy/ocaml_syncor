code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0405
Next Token :  find, Posbility: 0.0520
Next Token :  even, Posbility: 0.1104
Next Token :  , Posbility: 0.1816
Next Token :  rec, Posbility: 0.4941
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0164
Next Token :  loop, Posbility: 0.0347
Next Token :  even, Posbility: 0.1367
Next Token :  find, Posbility: 0.1553
Next Token :  , Posbility: 0.4219
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : odd, Posbility: 0.0288
Next Token : fi, Posbility: 0.0325
Next Token : f, Posbility: 0.0474
Next Token : prod, Posbility: 0.3086
Next Token : product, Posbility: 0.3086
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0161
Next Token : 2, Posbility: 0.0302
Next Token :  =, Posbility: 0.1357
Next Token :  , Posbility: 0.2520
Next Token : _, Posbility: 0.4727
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0269
Next Token : helper, Posbility: 0.0305
Next Token : list, Posbility: 0.0938
Next Token : even, Posbility: 0.1206
Next Token : of, Posbility: 0.3711
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0007
Next Token : _2_, Posbility: 0.0019
Next Token :  =, Posbility: 0.0024
Next Token :  , Posbility: 0.0066
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : odd, Posbility: 0.0698
Next Token : numbers, Posbility: 0.0698
Next Token : list, Posbility: 0.0894
Next Token : first, Posbility: 0.1299
Next Token : even, Posbility: 0.3125
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0075
Next Token :  , Posbility: 0.0096
Next Token : odd, Posbility: 0.0203
Next Token : s, Posbility: 0.0908
Next Token : _, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0012
Next Token : list, Posbility: 0.0012
Next Token : numbers, Posbility: 0.0033
Next Token : and, Posbility: 0.4902
Next Token : odd, Posbility: 0.4902
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0144
Next Token : s, Posbility: 0.1064
Next Token :  , Posbility: 0.1758
Next Token :  =, Posbility: 0.1758
Next Token : _, Posbility: 0.4766
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : num, Posbility: 0.0186
Next Token : number, Posbility: 0.0444
Next Token : nums, Posbility: 0.0444
Next Token : list, Posbility: 0.0830
Next Token : numbers, Posbility: 0.6133
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0391
Next Token :  l, Posbility: 0.0503
Next Token : _, Posbility: 0.0830
Next Token :  =, Posbility: 0.2256
Next Token :  , Posbility: 0.4766
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nums, Posbility: 0.0649
Next Token : lst, Posbility: 0.0942
Next Token : (, Posbility: 0.1211
Next Token : n, Posbility: 0.1768
Next Token : x, Posbility: 0.2559
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0048
Next Token :  i, Posbility: 0.0061
Next Token :  , Posbility: 0.0962
Next Token :  =, Posbility: 0.4316
Next Token : s, Posbility: 0.4316
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0020
Next Token :  a, Posbility: 0.0026
Next Token :  acc, Posbility: 0.0055
Next Token :  , Posbility: 0.0461
Next Token :  =, Posbility: 0.9258
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0057
Next Token :  function, Posbility: 0.0073
Next Token :  match, Posbility: 0.0540
Next Token :  , Posbility: 0.0786
Next Token : 
, Posbility: 0.8438
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0056
Next Token : 	, Posbility: 0.0092
Next Token :    , Posbility: 0.0104
Next Token :     , Posbility: 0.1279
Next Token :   , Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0078
Next Token : List, Posbility: 0.0211
Next Token : if, Posbility: 0.1216
Next Token : let, Posbility: 0.2012
Next Token : match, Posbility: 0.6172
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0010
Next Token :  !, Posbility: 0.0013
Next Token : 
, Posbility: 0.0019
Next Token :  String, Posbility: 0.0139
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0017
Next Token : Seq, Posbility: 0.0068
Next Token : (, Posbility: 0.0127
Next Token : List, Posbility: 0.1758
Next Token : x, Posbility: 0.7852
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  with, Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0006
Next Token :  @, Posbility: 0.0006
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0026
Next Token :  , Posbility: 0.0049
Next Token :  [, Posbility: 0.0063
Next Token :  [], Posbility: 0.0522
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0005
Next Token :       , Posbility: 0.0019
Next Token :    , Posbility: 0.0028
Next Token :     , Posbility: 0.1060
Next Token :   , Posbility: 0.8867
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : [, Posbility: 0.0121
Next Token : [], Posbility: 0.0256
Next Token : |, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0011
Next Token :  nil, Posbility: 0.0050
Next Token :  [, Posbility: 0.0175
Next Token :  , Posbility: 0.0223
Next Token :  [], Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0049
Next Token :    , Posbility: 0.0063
Next Token :  =>, Posbility: 0.0132
Next Token :  |, Posbility: 0.0219
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : →, Posbility: 0.0002
Next Token : -, Posbility: 0.0003
Next Token : ::, Posbility: 0.0019
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0214
Next Token :  None, Posbility: 0.0214
Next Token :  , Posbility: 0.0581
Next Token :  1, Posbility: 0.4297
Next Token :  0, Posbility: 0.4297
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0032
Next Token : L, Posbility: 0.0060
Next Token :  , Posbility: 0.0113
Next Token :  |, Posbility: 0.0737
Next Token : 
, Posbility: 0.8945
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token : |, Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : |[, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0038
Next Token :  a, Posbility: 0.0043
Next Token :  [], Posbility: 0.0150
Next Token :  [, Posbility: 0.2334
Next Token :  , Posbility: 0.7188
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0210
Next Token : h, Posbility: 0.0344
Next Token : hd, Posbility: 0.0645
Next Token : _, Posbility: 0.1206
Next Token : x, Posbility: 0.6953
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0035
Next Token : :, Posbility: 0.0200
Next Token : s, Posbility: 0.0425
Next Token : ::, Posbility: 0.4023
Next Token :  , Posbility: 0.5156
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : ->, Posbility: 0.0005
Next Token : if, Posbility: 0.0010
Next Token : :, Posbility: 0.0028
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0011
Next Token :  acc, Posbility: 0.0020
Next Token :  [], Posbility: 0.0089
Next Token :  rest, Posbility: 0.0742
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0044
Next Token : tail, Posbility: 0.0153
Next Token : y, Posbility: 0.0532
Next Token : _, Posbility: 0.0684
Next Token : x, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0004
Next Token : _, Posbility: 0.0005
Next Token : 1, Posbility: 0.0005
Next Token : ', Posbility: 0.0052
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0310
Next Token : 1, Posbility: 0.0398
Next Token : ', Posbility: 0.0579
Next Token :  when, Posbility: 0.1084
Next Token :  , Posbility: 0.7070
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : ::, Posbility: 0.0036
Next Token : if, Posbility: 0.0052
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0051
Next Token :  ((, Posbility: 0.0066
Next Token :  match, Posbility: 0.0378
Next Token : 
, Posbility: 0.4609
Next Token :  , Posbility: 0.4609
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0302
Next Token : product, Posbility: 0.0564
Next Token : (, Posbility: 0.1055
Next Token : if, Posbility: 0.2539
Next Token : x, Posbility: 0.4727
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0033
Next Token : 
, Posbility: 0.0037
Next Token :  , Posbility: 0.0312
Next Token :  +, Posbility: 0.0312
Next Token :  *, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0019
Next Token : !, Posbility: 0.0031
Next Token :  (1, Posbility: 0.0057
Next Token :  !, Posbility: 0.0121
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : prod, Posbility: 0.0018
Next Token : x, Posbility: 0.0280
Next Token : 2, Posbility: 0.0359
Next Token : (, Posbility: 0.2070
Next Token : product, Posbility: 0.7227
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : next, Posbility: 0.0000
Next Token : odd, Posbility: 0.0000
Next Token : even, Posbility: 0.0001
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_
 score:False
Error type: noerr
---------------------------
Next Token : next, Posbility: 0.0001
Next Token : first, Posbility: 0.0001
Next Token : two, Posbility: 0.0003
Next Token : odd, Posbility: 0.0067
Next Token : even, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_
 score:False
Error type: noerr
---------------------------
Next Token : occ, Posbility: 0.0000
Next Token : even, Posbility: 0.0000
Next Token : numbers, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token : odd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  numbers, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_
 score:False
Error type: noerr
---------------------------
Next Token : elements, Posbility: 0.0000
Next Token : num, Posbility: 0.0000
Next Token : nums, Posbility: 0.0000
Next Token : number, Posbility: 0.0012
Next Token : numbers, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0006
Next Token : (, Posbility: 0.0076
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : y, Posbility: 0.0002
Next Token : (, Posbility: 0.0293
Next Token : x, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0022
Next Token :  *, Posbility: 0.0047
Next Token :  , Posbility: 0.0099
Next Token : 

, Posbility: 0.4238
Next Token : 
, Posbility: 0.5430
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs

 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0100
Next Token : in, Posbility: 0.0117
Next Token : end, Posbility: 0.0212
Next Token :   , Posbility: 0.1079
Next Token : let, Posbility: 0.3770
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0403
Next Token :  even, Posbility: 0.0457
Next Token :  main, Posbility: 0.1240
Next Token :  , Posbility: 0.1807
Next Token :  rec, Posbility: 0.4902
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0219
Next Token :  count, Posbility: 0.0248
Next Token :  even, Posbility: 0.0410
Next Token :  find, Posbility: 0.1113
Next Token :  , Posbility: 0.5664
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fi, Posbility: 0.0049
Next Token : fold, Posbility: 0.0072
Next Token : f, Posbility: 0.0092
Next Token : prod, Posbility: 0.0284
Next Token : product, Posbility: 0.8320
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : 2, Posbility: 0.0024
Next Token :  =, Posbility: 0.0051
Next Token :  , Posbility: 0.0157
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : from, Posbility: 0.0024
Next Token : list, Posbility: 0.0030
Next Token : all, Posbility: 0.0039
Next Token : even, Posbility: 0.0082
Next Token : of, Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0188
Next Token : numbers, Posbility: 0.0311
Next Token : odd, Posbility: 0.0845
Next Token : first, Posbility: 0.1084
Next Token : even, Posbility: 0.6250
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0005
Next Token : odd, Posbility: 0.0006
Next Token :  , Posbility: 0.0024
Next Token : s, Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0005
Next Token : only, Posbility: 0.0009
Next Token : and, Posbility: 0.0176
Next Token : numbers, Posbility: 0.0176
Next Token : odd, Posbility: 0.9609
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0006
Next Token :  =, Posbility: 0.0052
Next Token : s, Posbility: 0.0052
Next Token :  , Posbility: 0.0066
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sequence, Posbility: 0.0023
Next Token : lists, Posbility: 0.0023
Next Token : list, Posbility: 0.0171
Next Token : number, Posbility: 0.0171
Next Token : numbers, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0295
Next Token :  =, Posbility: 0.0378
Next Token :  , Posbility: 0.1328
Next Token : ', Posbility: 0.1328
Next Token : _, Posbility: 0.5938
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : opt, Posbility: 0.0461
Next Token : helper, Posbility: 0.0522
Next Token : list, Posbility: 0.0762
Next Token : rec, Posbility: 0.0762
Next Token : iter, Posbility: 0.1104
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0074
Next Token : _, Posbility: 0.0084
Next Token :  =, Posbility: 0.0425
Next Token : ative, Posbility: 0.2158
Next Token :  , Posbility: 0.6641
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0019
Next Token : n, Posbility: 0.0035
Next Token : f, Posbility: 0.0065
Next Token : (, Posbility: 0.0095
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  iter, Posbility: 0.0030
Next Token :  i, Posbility: 0.0039
Next Token :  acc, Posbility: 0.0082
Next Token :  , Posbility: 0.0284
Next Token :  =, Posbility: 0.9453
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0005
Next Token :  function, Posbility: 0.0009
Next Token :  match, Posbility: 0.0064
Next Token :  , Posbility: 0.0369
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0005
Next Token : let, Posbility: 0.0017
Next Token :    , Posbility: 0.0019
Next Token :     , Posbility: 0.0085
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : product, Posbility: 0.0110
Next Token : List, Posbility: 0.0206
Next Token : if, Posbility: 0.0265
Next Token : let, Posbility: 0.1348
Next Token : match, Posbility: 0.7734
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  iter, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : product, Posbility: 0.0004
Next Token : Seq, Posbility: 0.0006
Next Token : (, Posbility: 0.0010
Next Token : List, Posbility: 0.0075
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  with, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  avec, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token :  [], Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  nil, Posbility: 0.0009
Next Token :  [, Posbility: 0.0040
Next Token :  , Posbility: 0.0109
Next Token :  [], Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  =>, Posbility: 0.0006
Next Token :  as, Posbility: 0.0007
Next Token :  |, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0023
Next Token :  1, Posbility: 0.0172
Next Token :  , Posbility: 0.0172
Next Token :  [], Posbility: 0.0172
Next Token :  0, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  as, Posbility: 0.0005
Next Token :  , Posbility: 0.0012
Next Token :  |, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0029
Next Token :  0, Posbility: 0.0129
Next Token :  [], Posbility: 0.0273
Next Token :  [, Posbility: 0.0352
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hd, Posbility: 0.0026
Next Token : head, Posbility: 0.0071
Next Token : (, Posbility: 0.0104
Next Token : _, Posbility: 0.0194
Next Token : x, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0020
Next Token : :, Posbility: 0.0029
Next Token : s, Posbility: 0.0079
Next Token : ::, Posbility: 0.0588
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0001
Next Token : ->, Posbility: 0.0004
Next Token : x, Posbility: 0.0005
Next Token : :, Posbility: 0.0041
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0005
Next Token :  [, Posbility: 0.0015
Next Token :  [], Posbility: 0.0025
Next Token :  rest, Posbility: 0.0028
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : tail, Posbility: 0.0009
Next Token : y, Posbility: 0.0031
Next Token : _, Posbility: 0.0123
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0005
Next Token : ,, Posbility: 0.0008
Next Token : 
, Posbility: 0.0013
Next Token :  when, Posbility: 0.0201
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : if, Posbility: 0.0004
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0017
Next Token :  {, Posbility: 0.0077
Next Token :  match, Posbility: 0.0184
Next Token : 
, Posbility: 0.1748
Next Token :  , Posbility: 0.7812
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0349
Next Token : let, Posbility: 0.0508
Next Token : if, Posbility: 0.0835
Next Token : product, Posbility: 0.1768
Next Token : x, Posbility: 0.6172
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0013
Next Token : s, Posbility: 0.0024
Next Token :  , Posbility: 0.0051
Next Token :  +, Posbility: 0.0109
Next Token :  *, Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0015
Next Token :  !, Posbility: 0.0028
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Product, Posbility: 0.0009
Next Token : prod, Posbility: 0.0014
Next Token : x, Posbility: 0.0220
Next Token : (, Posbility: 0.0361
Next Token : product, Posbility: 0.9336
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token :  of, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_
 score:False
Error type: noerr
---------------------------
Next Token : even, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : rec, Posbility: 0.0000
Next Token : iter, Posbility: 0.0001
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_
 score:False
Error type: noerr
---------------------------
Next Token : numbers, Posbility: 0.0000
Next Token : next, Posbility: 0.0001
Next Token : two, Posbility: 0.0002
Next Token : odd, Posbility: 0.0007
Next Token : even, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_
 score:False
Error type: noerr
---------------------------
Next Token : numbers, Posbility: 0.0000
Next Token : even, Posbility: 0.0000
Next Token : occ, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token : odd, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_
 score:False
Error type: noerr
---------------------------
Next Token : num, Posbility: 0.0000
Next Token : nums, Posbility: 0.0000
Next Token : values, Posbility: 0.0000
Next Token : number, Posbility: 0.0003
Next Token : numbers, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0008
Next Token :  ~, Posbility: 0.0009
Next Token :  ((, Posbility: 0.0009
Next Token :  , Posbility: 0.1187
Next Token : _, Posbility: 0.8750
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers_
 score:False
Error type: noerr
---------------------------
Next Token : next, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : loop, Posbility: 0.0000
Next Token : rec, Posbility: 0.0025
Next Token : iter, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers_iter
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  next, Posbility: 0.0004
Next Token : _, Posbility: 0.0008
Next Token : (, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers_iter 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : tail, Posbility: 0.0001
Next Token : (, Posbility: 0.0293
Next Token : x, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers_iter x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers_iter xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0023
Next Token :  +, Posbility: 0.0082
Next Token :  , Posbility: 0.0082
Next Token : 
, Posbility: 0.3926
Next Token : 

, Posbility: 0.5703
---------------------------
code:
 (* Write a function to find the product of first even and odd number of a given list. *)
let rec product_of_even_odd_numbers xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers xs
let rec product_of_even_odd_numbers_iter xs =
  match xs with
  | [] -> 0
  | x :: xs -> x * product_of_even_odd_numbers_iter xs


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :51.709200859069824

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>