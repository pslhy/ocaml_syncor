code:
 (* Write a function to sort the given array by using shell sort. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sorted, Posbility: 0.0048
Next Token :  compare, Posbility: 0.0062
Next Token :  sort, Posbility: 0.2051
Next Token :  rec, Posbility: 0.3379
Next Token :  , Posbility: 0.3828
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Shell, Posbility: 0.0137
Next Token : s, Posbility: 0.0156
Next Token : print, Posbility: 0.0200
Next Token : swap, Posbility: 0.0330
Next Token : shell, Posbility: 0.7500
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0222
Next Token :  =, Posbility: 0.0366
Next Token : Sort, Posbility: 0.0605
Next Token : sort, Posbility: 0.0996
Next Token : _, Posbility: 0.7383
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : order, Posbility: 0.0004
Next Token : sorted, Posbility: 0.0007
Next Token : sorting, Posbility: 0.0007
Next Token : sort, Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  array, Posbility: 0.0464
Next Token : _, Posbility: 0.0596
Next Token :  a, Posbility: 0.0762
Next Token :  =, Posbility: 0.0981
Next Token :  , Posbility: 0.5664
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0216
Next Token : lst, Posbility: 0.0315
Next Token : (, Posbility: 0.0520
Next Token : arr, Posbility: 0.2988
Next Token : x, Posbility: 0.4336
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0016
Next Token :  i, Posbility: 0.0023
Next Token :  , Posbility: 0.0278
Next Token : s, Posbility: 0.1416
Next Token :  =, Posbility: 0.8164
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0035
Next Token :  match, Posbility: 0.0039
Next Token : 

, Posbility: 0.0094
Next Token :  , Posbility: 0.1147
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0082
Next Token : 	, Posbility: 0.0106
Next Token :    , Posbility: 0.0153
Next Token :     , Posbility: 0.1133
Next Token :   , Posbility: 0.8398
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0164
Next Token : match, Posbility: 0.0239
Next Token : for, Posbility: 0.0306
Next Token : if, Posbility: 0.0393
Next Token : let, Posbility: 0.7891
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0171
Next Token :  open, Posbility: 0.0171
Next Token :  len, Posbility: 0.0767
Next Token :  rec, Posbility: 0.3438
Next Token :  , Posbility: 0.3438
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0327
Next Token : length, Posbility: 0.0476
Next Token : gap, Posbility: 0.1143
Next Token : h, Posbility: 0.2129
Next Token : n, Posbility: 0.3105
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  , Posbility: 0.0013
Next Token : ,, Posbility: 0.0015
Next Token : _, Posbility: 0.0052
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0009
Next Token :  int, Posbility: 0.0024
Next Token :  Vec, Posbility: 0.0024
Next Token :  array, Posbility: 0.0066
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Vector, Posbility: 0.0194
Next Token : length, Posbility: 0.0413
Next Token : x, Posbility: 0.0986
Next Token : List, Posbility: 0.3457
Next Token : Array, Posbility: 0.4434
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Length, Posbility: 0.0000
Next Token : Pool, Posbility: 0.0000
Next Token : Size, Posbility: 0.0000
Next Token : _, Posbility: 0.0008
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0006
Next Token : len, Posbility: 0.0008
Next Token : get, Posbility: 0.0013
Next Token : Length, Posbility: 0.0032
Next Token : length, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0052
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token :  , Posbility: 0.0014
Next Token :  =, Posbility: 0.0065
Next Token : 
, Posbility: 0.0289
Next Token :  in, Posbility: 0.9570
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0016
Next Token :  , Posbility: 0.0051
Next Token : 

, Posbility: 0.0258
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :    , Posbility: 0.0005
Next Token :       , Posbility: 0.0006
Next Token :     , Posbility: 0.0041
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : while, Posbility: 0.0106
Next Token : (, Posbility: 0.0197
Next Token : if, Posbility: 0.0776
Next Token : for, Posbility: 0.0776
Next Token : let, Posbility: 0.7383
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0139
Next Token :  i, Posbility: 0.0201
Next Token :  step, Posbility: 0.0427
Next Token :  rec, Posbility: 0.3164
Next Token :  , Posbility: 0.4062
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0277
Next Token : n, Posbility: 0.0356
Next Token : d, Posbility: 0.0664
Next Token : gap, Posbility: 0.1094
Next Token : h, Posbility: 0.5586
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0021
Next Token : s, Posbility: 0.0024
Next Token : 0, Posbility: 0.0039
Next Token : _, Posbility: 0.0254
Next Token :  =, Posbility: 0.9531
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0079
Next Token :  int, Posbility: 0.0188
Next Token :  [, Posbility: 0.0214
Next Token :  1, Posbility: 0.0845
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0284
Next Token : Array, Posbility: 0.0603
Next Token : (, Posbility: 0.1641
Next Token : n, Posbility: 0.3047
Next Token : Int, Posbility: 0.3457
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 16, Posbility: 0.0014
Next Token :  , Posbility: 0.0107
Next Token : 64, Posbility: 0.0156
Next Token : 32, Posbility: 0.2148
Next Token : ., Posbility: 0.7500
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : floor, Posbility: 0.0251
Next Token : ceil, Posbility: 0.0251
Next Token : of, Posbility: 0.0366
Next Token : div, Posbility: 0.1641
Next Token : (, Posbility: 0.5742
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0491
Next Token : 1, Posbility: 0.0491
Next Token : 2, Posbility: 0.0913
Next Token : (, Posbility: 0.1709
Next Token : n, Posbility: 0.3184
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0039
Next Token :  >>, Posbility: 0.0057
Next Token :  *, Posbility: 0.0106
Next Token : /, Posbility: 0.1138
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0056
Next Token : div, Posbility: 0.0082
Next Token : //, Posbility: 0.0135
Next Token : -, Posbility: 0.0222
Next Token : /, Posbility: 0.9453
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n /
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0374
Next Token :  4), Posbility: 0.0542
Next Token :  3), Posbility: 0.0698
Next Token :  , Posbility: 0.1016
Next Token :  2), Posbility: 0.5820
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  while, Posbility: 0.0063
Next Token : 
, Posbility: 0.0071
Next Token :  , Posbility: 0.0170
Next Token :  +, Posbility: 0.0280
Next Token :  in, Posbility: 0.9258
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0004
Next Token :   , Posbility: 0.0023
Next Token :  , Posbility: 0.0090
Next Token : 

, Posbility: 0.0664
Next Token : 
, Posbility: 0.9180
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :     , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0201
Next Token : if, Posbility: 0.0259
Next Token : while, Posbility: 0.0623
Next Token : for, Posbility: 0.2168
Next Token : let, Posbility: 0.5898
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  compare, Posbility: 0.0125
Next Token :  i, Posbility: 0.0142
Next Token :  step, Posbility: 0.0300
Next Token :  , Posbility: 0.3223
Next Token :  rec, Posbility: 0.4707
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0276
Next Token :  compare, Posbility: 0.0276
Next Token :  rec, Posbility: 0.0400
Next Token :  loop, Posbility: 0.1396
Next Token :  , Posbility: 0.6250
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : inner, Posbility: 0.0466
Next Token : h, Posbility: 0.0869
Next Token : swap, Posbility: 0.0986
Next Token : shell, Posbility: 0.2090
Next Token : s, Posbility: 0.2090
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sort, Posbility: 0.0535
Next Token :  , Posbility: 0.1001
Next Token : s, Posbility: 0.1133
Next Token : _, Posbility: 0.1279
Next Token :  =, Posbility: 0.2402
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fn, Posbility: 0.0077
Next Token :  fun, Posbility: 0.0344
Next Token :  , Posbility: 0.0728
Next Token : 
, Posbility: 0.1748
Next Token :  function, Posbility: 0.6914
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0041
Next Token :  |, Posbility: 0.0041
Next Token :  i, Posbility: 0.0087
Next Token :  , Posbility: 0.2539
Next Token : 
, Posbility: 0.6914
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0203
Next Token :           , Posbility: 0.0260
Next Token :   , Posbility: 0.0294
Next Token :       , Posbility: 0.1162
Next Token :     , Posbility: 0.7578
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : |[, Posbility: 0.0015
Next Token : (, Posbility: 0.0017
Next Token : [, Posbility: 0.0040
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0099
Next Token :  [, Posbility: 0.0210
Next Token :  0, Posbility: 0.2559
Next Token :  [], Posbility: 0.2559
Next Token :  , Posbility: 0.4219
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0260
Next Token : (, Posbility: 0.0486
Next Token : n, Posbility: 0.1689
Next Token : h, Posbility: 0.1914
Next Token : x, Posbility: 0.4062
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0371
Next Token : s, Posbility: 0.0786
Next Token : ::, Posbility: 0.0786
Next Token :  when, Posbility: 0.1147
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0115
Next Token : <, Posbility: 0.0167
Next Token : if, Posbility: 0.0312
Next Token : ->, Posbility: 0.3809
Next Token : ::, Posbility: 0.5547
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0046
Next Token :  acc, Posbility: 0.0046
Next Token :  rest, Posbility: 0.0339
Next Token :  [], Posbility: 0.0635
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0168
Next Token : t, Posbility: 0.0520
Next Token : y, Posbility: 0.1602
Next Token : _, Posbility: 0.2061
Next Token : x, Posbility: 0.4941
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0014
Next Token : x, Posbility: 0.0016
Next Token :  , Posbility: 0.0050
Next Token : ', Posbility: 0.0288
Next Token : s, Posbility: 0.9570
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0123
Next Token :  =>, Posbility: 0.0123
Next Token :  |, Posbility: 0.0123
Next Token :  when, Posbility: 0.2471
Next Token :  , Posbility: 0.6719
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0010
Next Token : -, Posbility: 0.0027
Next Token : ::, Posbility: 0.0027
Next Token : if, Posbility: 0.0157
Next Token : ->, Posbility: 0.9766
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0030
Next Token :  sort, Posbility: 0.0034
Next Token :  [, Posbility: 0.0063
Next Token : 
, Posbility: 0.3047
Next Token :  , Posbility: 0.6445
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0554
Next Token : h, Posbility: 0.0713
Next Token : if, Posbility: 0.1504
Next Token : s, Posbility: 0.2188
Next Token : x, Posbility: 0.3613
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0082
Next Token :  |, Posbility: 0.0325
Next Token : 
, Posbility: 0.0366
Next Token : s, Posbility: 0.4473
Next Token :  , Posbility: 0.4473
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0007
Next Token : <, Posbility: 0.0015
Next Token : ^, Posbility: 0.0015
Next Token : :, Posbility: 0.0019
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0010
Next Token :  !, Posbility: 0.0019
Next Token :  sort, Posbility: 0.0040
Next Token :  [, Posbility: 0.0045
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0046
Next Token : Array, Posbility: 0.0046
Next Token : (, Posbility: 0.0344
Next Token : x, Posbility: 0.2539
Next Token : s, Posbility: 0.6914
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0253
Next Token :  with, Posbility: 0.0253
Next Token :  |, Posbility: 0.0417
Next Token :  , Posbility: 0.1133
Next Token : 
, Posbility: 0.7383
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0006
Next Token :        , Posbility: 0.0007
Next Token :         , Posbility: 0.0049
Next Token :       , Posbility: 0.0530
Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : |_|, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0046
Next Token :  i, Posbility: 0.0059
Next Token :  0, Posbility: 0.0086
Next Token :  [], Posbility: 0.3652
Next Token :  , Posbility: 0.6055
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0116
Next Token : s, Posbility: 0.0245
Next Token : h, Posbility: 0.0245
Next Token : x, Posbility: 0.2637
Next Token : _, Posbility: 0.6328
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0038
Next Token :   , Posbility: 0.0044
Next Token :  |, Posbility: 0.0063
Next Token :  when, Posbility: 0.0104
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 0.0009
Next Token : if, Posbility: 0.0092
Next Token : ::, Posbility: 0.1631
Next Token : ->, Posbility: 0.8242
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0044
Next Token : 
, Posbility: 0.0064
Next Token :  fail, Posbility: 0.0064
Next Token :  [], Posbility: 0.0175
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0093
Next Token : Array, Posbility: 0.0093
Next Token : raise, Posbility: 0.0093
Next Token : s, Posbility: 0.0996
Next Token : x, Posbility: 0.8320
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 0.0045
Next Token :  , Posbility: 0.0096
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0025
Next Token : 

, Posbility: 0.0053
Next Token :  , Posbility: 0.0113
Next Token :  in, Posbility: 0.1768
Next Token : 
, Posbility: 0.7930
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0009
Next Token :    , Posbility: 0.0050
Next Token :  , Posbility: 0.0120
Next Token :     , Posbility: 0.0288
Next Token :   , Posbility: 0.9531
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0017
Next Token : end, Posbility: 0.0024
Next Token : with, Posbility: 0.0040
Next Token : when, Posbility: 0.0051
Next Token : in, Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0003
Next Token :   , Posbility: 0.0011
Next Token :  , Posbility: 0.0085
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : let, Posbility: 0.0003
Next Token :    , Posbility: 0.0006
Next Token :     , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0322
Next Token : Array, Posbility: 0.0413
Next Token : s, Posbility: 0.0874
Next Token : for, Posbility: 0.2100
Next Token : let, Posbility: 0.4453
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0161
Next Token :  loop, Posbility: 0.0300
Next Token :  sort, Posbility: 0.0342
Next Token :  , Posbility: 0.2520
Next Token :  rec, Posbility: 0.5352
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0287
Next Token :  go, Posbility: 0.0471
Next Token :  sort, Posbility: 0.0471
Next Token :  loop, Posbility: 0.1865
Next Token :  , Posbility: 0.5078
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : swap, Posbility: 0.0459
Next Token : f, Posbility: 0.0669
Next Token : h, Posbility: 0.1104
Next Token : shell, Posbility: 0.1416
Next Token : s, Posbility: 0.2637
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0703
Next Token : s, Posbility: 0.0796
Next Token :  =, Posbility: 0.1484
Next Token : _, Posbility: 0.1914
Next Token : ', Posbility: 0.2451
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0109
Next Token :  k, Posbility: 0.0139
Next Token :  i, Posbility: 0.0708
Next Token :  , Posbility: 0.1924
Next Token :  =, Posbility: 0.6719
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fn, Posbility: 0.0003
Next Token :  fun, Posbility: 0.0101
Next Token : 
, Posbility: 0.0276
Next Token :  , Posbility: 0.0454
Next Token :  function, Posbility: 0.9141
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :  {, Posbility: 0.0002
Next Token :  |, Posbility: 0.0003
Next Token :  , Posbility: 0.0259
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0015
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |_|, Posbility: 0.0000
Next Token : ~, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0006
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0048
Next Token :  0, Posbility: 0.0130
Next Token :  [, Posbility: 0.0167
Next Token :  [], Posbility: 0.0276
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0114
Next Token : (, Posbility: 0.0146
Next Token : _, Posbility: 0.0212
Next Token : h, Posbility: 0.0240
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0049
Next Token : i, Posbility: 0.0105
Next Token : ::, Posbility: 0.0135
Next Token : s, Posbility: 0.2109
Next Token :  , Posbility: 0.7344
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0002
Next Token : ->, Posbility: 0.0007
Next Token : x, Posbility: 0.0008
Next Token : :, Posbility: 0.0032
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  v, Posbility: 0.0019
Next Token :  [, Posbility: 0.0021
Next Token :  acc, Posbility: 0.0024
Next Token :  a, Posbility: 0.0040
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : h, Posbility: 0.0102
Next Token : y, Posbility: 0.0102
Next Token : _, Posbility: 0.0168
Next Token : s, Posbility: 0.0277
Next Token : x, Posbility: 0.9180
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : 1, Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token : ', Posbility: 0.0109
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0039
Next Token :  |, Posbility: 0.0039
Next Token : 1, Posbility: 0.0064
Next Token : ', Posbility: 0.0175
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : if, Posbility: 0.0004
Next Token : ::, Posbility: 0.0007
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0026
Next Token :  ((, Posbility: 0.0043
Next Token :  [, Posbility: 0.0043
Next Token : 
, Posbility: 0.1436
Next Token :  , Posbility: 0.8242
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0500
Next Token : (, Posbility: 0.0640
Next Token : if, Posbility: 0.0825
Next Token : s, Posbility: 0.1357
Next Token : x, Posbility: 0.6094
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0023
Next Token : 
, Posbility: 0.0038
Next Token :  |, Posbility: 0.0048
Next Token : s, Posbility: 0.0588
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token : @@, Posbility: 0.0004
Next Token : ^, Posbility: 0.0015
Next Token : :, Posbility: 0.0019
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  !, Posbility: 0.0006
Next Token :  ((, Posbility: 0.0009
Next Token :  [, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0051
Next Token : h, Posbility: 0.0139
Next Token : (, Posbility: 0.1030
Next Token : x, Posbility: 0.1030
Next Token : s, Posbility: 0.7617
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0032
Next Token : ',, Posbility: 0.0041
Next Token :  , Posbility: 0.0161
Next Token : 
, Posbility: 0.0820
Next Token : ', Posbility: 0.8828
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0029
Next Token : (, Posbility: 0.0033
Next Token :  |, Posbility: 0.0192
Next Token :  , Posbility: 0.0356
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :    , Posbility: 0.0003
Next Token :   , Posbility: 0.0046
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : where, Posbility: 0.0000
Next Token : |_|, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0042
Next Token :  [], Posbility: 0.0069
Next Token :  0, Posbility: 0.0513
Next Token :  i, Posbility: 0.1084
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0117
Next Token : y, Posbility: 0.0280
Next Token : h, Posbility: 0.1250
Next Token : x, Posbility: 0.3008
Next Token : _, Posbility: 0.4961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0024
Next Token : _, Posbility: 0.0027
Next Token : i, Posbility: 0.0065
Next Token :  when, Posbility: 0.0095
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : if, Posbility: 0.0036
Next Token : ::, Posbility: 0.0052
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0009
Next Token :  function, Posbility: 0.0017
Next Token :  0, Posbility: 0.0024
Next Token : 
, Posbility: 0.0052
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0035
Next Token : Array, Posbility: 0.0045
Next Token : (, Posbility: 0.0095
Next Token : s, Posbility: 0.1152
Next Token : x, Posbility: 0.8516
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0001
Next Token : ', Posbility: 0.0019
Next Token : 
, Posbility: 0.0031
Next Token :  , Posbility: 0.0157
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0018
Next Token :  , Posbility: 0.0101
Next Token : ', Posbility: 0.0115
Next Token :  in, Posbility: 0.0583
Next Token : 
, Posbility: 0.9141
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0005
Next Token :     , Posbility: 0.0085
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  while, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0017
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token :    , Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :     , Posbility: 0.0007
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0302
Next Token : (, Posbility: 0.0386
Next Token : s, Posbility: 0.0640
Next Token : for, Posbility: 0.0723
Next Token : let, Posbility: 0.6875
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  step, Posbility: 0.0114
Next Token :  loop, Posbility: 0.0146
Next Token :  sort, Posbility: 0.0240
Next Token :  , Posbility: 0.2275
Next Token :  rec, Posbility: 0.6211
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0273
Next Token :  go, Posbility: 0.0510
Next Token :  sort, Posbility: 0.0579
Next Token :  loop, Posbility: 0.1226
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0532
Next Token : swap, Posbility: 0.0532
Next Token : h, Posbility: 0.1279
Next Token : shell, Posbility: 0.1279
Next Token : s, Posbility: 0.3477
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0270
Next Token : s, Posbility: 0.0306
Next Token : _, Posbility: 0.0732
Next Token : 2, Posbility: 0.0942
Next Token : ', Posbility: 0.6133
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0034
Next Token : s, Posbility: 0.0063
Next Token :  , Posbility: 0.0133
Next Token : _, Posbility: 0.0171
Next Token : ', Posbility: 0.9336
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0011
Next Token :  in, Posbility: 0.0011
Next Token :  ~, Posbility: 0.0011
Next Token :  , Posbility: 0.0201
Next Token :  =, Posbility: 0.9688
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  fun, Posbility: 0.0015
Next Token : 
, Posbility: 0.0031
Next Token :  , Posbility: 0.0085
Next Token :  function, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  , Posbility: 0.0085
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :      , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ?, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0008
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0010
Next Token :  [], Posbility: 0.0019
Next Token :  0, Posbility: 0.0024
Next Token :  [, Posbility: 0.0031
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0015
Next Token : h, Posbility: 0.0024
Next Token : _, Posbility: 0.0028
Next Token : (, Posbility: 0.0040
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0011
Next Token : 0, Posbility: 0.0014
Next Token : 1, Posbility: 0.0016
Next Token : s, Posbility: 0.0291
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : ->, Posbility: 0.0002
Next Token : :, Posbility: 0.0008
Next Token : x, Posbility: 0.0008
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0003
Next Token :  0, Posbility: 0.0004
Next Token :  acc, Posbility: 0.0004
Next Token :  a, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : s, Posbility: 0.0008
Next Token : (, Posbility: 0.0013
Next Token : _, Posbility: 0.0022
Next Token : y, Posbility: 0.0028
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token : ', Posbility: 0.0006
Next Token :  , Posbility: 0.0012
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0006
Next Token :  |, Posbility: 0.0008
Next Token : ', Posbility: 0.0010
Next Token : 1, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ::, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :  ((, Posbility: 0.0005
Next Token :  [, Posbility: 0.0013
Next Token : 
, Posbility: 0.0123
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0039
Next Token : (, Posbility: 0.0106
Next Token : if, Posbility: 0.0106
Next Token : s, Posbility: 0.0175
Next Token : x, Posbility: 0.9531
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token : ', Posbility: 0.0013
Next Token : s, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : :, Posbility: 0.0003
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0001
Next Token : h, Posbility: 0.0003
Next Token : (, Posbility: 0.0040
Next Token : x, Posbility: 0.0067
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ',, Posbility: 0.0002
Next Token : ''', Posbility: 0.0025
Next Token : 
, Posbility: 0.0041
Next Token : ', Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : ’, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0179
Next Token : ', Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  |, Posbility: 0.0005
Next Token :  in, Posbility: 0.0010
Next Token :  , Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 0.0028
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ~, Posbility: 0.0000
Next Token : where, Posbility: 0.0000
Next Token : |_|, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0010
Next Token :  [], Posbility: 0.0045
Next Token :  i, Posbility: 0.0051
Next Token :  0, Posbility: 0.0066
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0018
Next Token : y, Posbility: 0.0091
Next Token : h, Posbility: 0.0117
Next Token : x, Posbility: 0.0461
Next Token : _, Posbility: 0.9258
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token :  |, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token :  when, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : Array, Posbility: 0.0002
Next Token : (, Posbility: 0.0007
Next Token : s, Posbility: 0.0046
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 0.0010
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0007
Next Token :  in, Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0007
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : until, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :     , Posbility: 0.0007
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0289
Next Token : for, Posbility: 0.0371
Next Token : (, Posbility: 0.0420
Next Token : s, Posbility: 0.0476
Next Token : let, Posbility: 0.7461
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  step, Posbility: 0.0066
Next Token :  loop, Posbility: 0.0066
Next Token :  sort, Posbility: 0.0231
Next Token :  , Posbility: 0.1328
Next Token :  rec, Posbility: 0.7617
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0337
Next Token :  go, Posbility: 0.0435
Next Token :  sort, Posbility: 0.0630
Next Token :  loop, Posbility: 0.1040
Next Token :  , Posbility: 0.5977
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : swap, Posbility: 0.0332
Next Token : h, Posbility: 0.0427
Next Token : f, Posbility: 0.0486
Next Token : shell, Posbility: 0.0801
Next Token : s, Posbility: 0.5898
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0244
Next Token : 2, Posbility: 0.0244
Next Token : 3, Posbility: 0.0244
Next Token : ''', Posbility: 0.0752
Next Token : ', Posbility: 0.7148
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0023
Next Token : ',, Posbility: 0.0023
Next Token : s, Posbility: 0.0115
Next Token : ''', Posbility: 0.0586
Next Token : ', Posbility: 0.9141
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0009
Next Token :  , Posbility: 0.0028
Next Token : s, Posbility: 0.0028
Next Token :  =, Posbility: 0.0031
Next Token : ', Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ''', Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : =, Posbility: 0.0007
Next Token : ', Posbility: 0.0052
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0004
Next Token :  , Posbility: 0.0017
Next Token : 
, Posbility: 0.0019
Next Token :  function, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :      , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  [], Posbility: 0.0005
Next Token :  0, Posbility: 0.0006
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : _, Posbility: 0.0008
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token : 1, Posbility: 0.0002
Next Token : s, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ->, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : :, Posbility: 0.0002
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  a, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0003
Next Token : _, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : ,, Posbility: 0.0002
Next Token :  |, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  [, Posbility: 0.0002
Next Token : 
, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0002
Next Token : if, Posbility: 0.0013
Next Token : (, Posbility: 0.0019
Next Token : s, Posbility: 0.0025
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : '^, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : ’, Posbility: 0.0001
Next Token : ', Posbility: 0.1475
Next Token : ''', Posbility: 0.8516
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : ', Posbility: 0.1641
Next Token : 
, Posbility: 0.8359
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |_|, Posbility: 0.0000
Next Token : ~, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  [], Posbility: 0.0004
Next Token :  i, Posbility: 0.0006
Next Token :  0, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token : h, Posbility: 0.0008
Next Token : y, Posbility: 0.0013
Next Token : x, Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ()->, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token :  in, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0007
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : for, Posbility: 0.0242
Next Token : (, Posbility: 0.0273
Next Token : if, Posbility: 0.0273
Next Token : s, Posbility: 0.0352
Next Token : let, Posbility: 0.8008
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  iter, Posbility: 0.0027
Next Token :  i, Posbility: 0.0035
Next Token :  sort, Posbility: 0.0121
Next Token :  , Posbility: 0.0894
Next Token :  rec, Posbility: 0.8477
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  go, Posbility: 0.0147
Next Token :  rec, Posbility: 0.0166
Next Token :  sort, Posbility: 0.0352
Next Token :  loop, Posbility: 0.0452
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0098
Next Token : f, Posbility: 0.0126
Next Token : swap, Posbility: 0.0126
Next Token : shell, Posbility: 0.0208
Next Token : s, Posbility: 0.8828
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ", Posbility: 0.0020
Next Token : ____, Posbility: 0.0020
Next Token : """, Posbility: 0.0150
Next Token : ', Posbility: 0.2344
Next Token : ''', Posbility: 0.7188
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0017
Next Token : 1, Posbility: 0.0024
Next Token : 2, Posbility: 0.0074
Next Token : ''', Posbility: 0.2178
Next Token : ', Posbility: 0.7617
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : =, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0009
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  acc, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ‘, Posbility: 0.0000
Next Token : `, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token : ''', Posbility: 0.0110
Next Token : ', Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  '', Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token : ’, Posbility: 0.0006
Next Token : ', Posbility: 0.2012
Next Token : ''', Posbility: 0.7969
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ~, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ()->, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0003
Next Token :  in, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0003
Next Token : 

, Posbility: 0.0003
Next Token :     , Posbility: 0.0009
Next Token :  , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : for, Posbility: 0.0260
Next Token : if, Posbility: 0.0294
Next Token : (, Posbility: 0.0378
Next Token : s, Posbility: 0.0549
Next Token : let, Posbility: 0.7578
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  step, Posbility: 0.0032
Next Token :  i, Posbility: 0.0041
Next Token :  sort, Posbility: 0.0143
Next Token :  , Posbility: 0.1367
Next Token :  rec, Posbility: 0.7852
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  go, Posbility: 0.0206
Next Token :  rec, Posbility: 0.0206
Next Token :  sort, Posbility: 0.0339
Next Token :  loop, Posbility: 0.0493
Next Token :  , Posbility: 0.7734
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0134
Next Token : swap, Posbility: 0.0173
Next Token : f, Posbility: 0.0222
Next Token : shell, Posbility: 0.0222
Next Token : s, Posbility: 0.8320
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0072
Next Token : ____, Posbility: 0.0081
Next Token : """, Posbility: 0.0172
Next Token : ', Posbility: 0.2695
Next Token : ''', Posbility: 0.6445
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ~~, Posbility: 0.0003
Next Token :  =, Posbility: 0.0007
Next Token : $$, Posbility: 0.0013
Next Token : ', Posbility: 0.1631
Next Token : ''', Posbility: 0.8320
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 0.0003
Next Token : =, Posbility: 0.0004
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 0.0010
Next Token :  function, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  acc, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : $$, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ', Posbility: 0.0159
Next Token : ''', Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  '', Posbility: 0.0012
Next Token : ’, Posbility: 0.0015
Next Token : 
, Posbility: 0.0047
Next Token : ', Posbility: 0.2002
Next Token : ''', Posbility: 0.7891
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ~, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ()->, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token :  in, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : {, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0002
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0006
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0172
Next Token : for, Posbility: 0.0172
Next Token : (, Posbility: 0.0283
Next Token : s, Posbility: 0.0413
Next Token : let, Posbility: 0.8281
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  iter, Posbility: 0.0015
Next Token :  i, Posbility: 0.0017
Next Token :  sort, Posbility: 0.0060
Next Token :  , Posbility: 0.0728
Next Token :  rec, Posbility: 0.8906
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  go, Posbility: 0.0077
Next Token :  rec, Posbility: 0.0112
Next Token :  sort, Posbility: 0.0164
Next Token :  loop, Posbility: 0.0237
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0055
Next Token : swap, Posbility: 0.0063
Next Token : f, Posbility: 0.0103
Next Token : shell, Posbility: 0.0103
Next Token : s, Posbility: 0.9258
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0033
Next Token : [][][], Posbility: 0.0038
Next Token : """, Posbility: 0.0070
Next Token : ', Posbility: 0.3848
Next Token : ''', Posbility: 0.5586
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0009
Next Token : """, Posbility: 0.0012
Next Token : ~~~, Posbility: 0.0013
Next Token : ', Posbility: 0.0123
Next Token : ''', Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0023
Next Token : ’, Posbility: 0.0027
Next Token :  =, Posbility: 0.0135
Next Token : ''', Posbility: 0.3965
Next Token : ', Posbility: 0.5742
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s'''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : =, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::{, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ``, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : ''', Posbility: 0.0110
Next Token : ', Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0000
Next Token : ```, Posbility: 0.0000
Next Token : ``, Posbility: 0.0000
Next Token : ', Posbility: 0.0059
Next Token : ''', Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0008
Next Token :  '', Posbility: 0.0031
Next Token : 
, Posbility: 0.0201
Next Token : ', Posbility: 0.1162
Next Token : ''', Posbility: 0.8594
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ~, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ()->, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token :     , Posbility: 0.0006
Next Token :  , Posbility: 0.0036
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0135
Next Token : for, Posbility: 0.0173
Next Token : (, Posbility: 0.0287
Next Token : s, Posbility: 0.0474
Next Token : let, Posbility: 0.8359
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0011
Next Token :  i, Posbility: 0.0018
Next Token :  sort, Posbility: 0.0042
Next Token :  , Posbility: 0.0581
Next Token :  rec, Posbility: 0.9102
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  go, Posbility: 0.0068
Next Token :  rec, Posbility: 0.0112
Next Token :  sort, Posbility: 0.0162
Next Token :  loop, Posbility: 0.0237
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0038
Next Token : swap, Posbility: 0.0063
Next Token : shell, Posbility: 0.0081
Next Token : f, Posbility: 0.0092
Next Token : s, Posbility: 0.9375
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [][][], Posbility: 0.0027
Next Token : ", Posbility: 0.0039
Next Token : """, Posbility: 0.0107
Next Token : ', Posbility: 0.3535
Next Token : ''', Posbility: 0.5820
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0003
Next Token : """, Posbility: 0.0007
Next Token : ~~~, Posbility: 0.0007
Next Token : ', Posbility: 0.0036
Next Token : ''', Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ~~, Posbility: 0.0019
Next Token :  =, Posbility: 0.0032
Next Token : $$, Posbility: 0.0076
Next Token : ', Posbility: 0.1045
Next Token : ''', Posbility: 0.8750
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s'''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : =, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0012
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ‘, Posbility: 0.0001
Next Token : ’, Posbility: 0.0001
Next Token : $$, Posbility: 0.0001
Next Token : ', Posbility: 0.0085
Next Token : ''', Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0000
Next Token :  '', Posbility: 0.0000
Next Token : ~~~, Posbility: 0.0000
Next Token : ', Posbility: 0.0006
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0005
Next Token :  '', Posbility: 0.0008
Next Token : 
, Posbility: 0.0013
Next Token : ', Posbility: 0.0371
Next Token : ''', Posbility: 0.9570
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ?, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ()->, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0028
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0154
Next Token : for, Posbility: 0.0154
Next Token : (, Posbility: 0.0325
Next Token : s, Posbility: 0.0417
Next Token : let, Posbility: 0.8398
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  iter, Posbility: 0.0014
Next Token :  i, Posbility: 0.0017
Next Token :  sort, Posbility: 0.0048
Next Token :  , Posbility: 0.0579
Next Token :  rec, Posbility: 0.9062
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  compare, Posbility: 0.0043
Next Token :  rec, Posbility: 0.0080
Next Token :  sort, Posbility: 0.0103
Next Token :  loop, Posbility: 0.0132
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0031
Next Token : swap, Posbility: 0.0044
Next Token : f, Posbility: 0.0057
Next Token : shell, Posbility: 0.0064
Next Token : s, Posbility: 0.9570
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ``, Posbility: 0.0015
Next Token : ", Posbility: 0.0025
Next Token : """, Posbility: 0.0046
Next Token : ''', Posbility: 0.4141
Next Token : ', Posbility: 0.5312
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0002
Next Token : ``, Posbility: 0.0002
Next Token : """, Posbility: 0.0012
Next Token : ', Posbility: 0.1064
Next Token : ''', Posbility: 0.8906
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : """, Posbility: 0.0001
Next Token : ```, Posbility: 0.0001
Next Token : ~~~, Posbility: 0.0002
Next Token : ', Posbility: 0.0006
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0002
Next Token : ~~~, Posbility: 0.0003
Next Token : $$, Posbility: 0.0003
Next Token : ', Posbility: 0.0052
Next Token : ''', Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ''', Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : ’, Posbility: 0.0001
Next Token : 1, Posbility: 0.0019
Next Token : ''', Posbility: 0.0110
Next Token : ', Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : $$, Posbility: 0.0001
Next Token : """, Posbility: 0.0001
Next Token : ``, Posbility: 0.0001
Next Token : ', Posbility: 0.0012
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0000
Next Token : ~~~, Posbility: 0.0000
Next Token :  '', Posbility: 0.0001
Next Token : ', Posbility: 0.0007
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s'''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0007
Next Token :  '', Posbility: 0.0013
Next Token : 
, Posbility: 0.0044
Next Token : ', Posbility: 0.0417
Next Token : ''', Posbility: 0.9492
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : L, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ()->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0110
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0085
Next Token : for, Posbility: 0.0160
Next Token : (, Posbility: 0.0262
Next Token : s, Posbility: 0.0435
Next Token : let, Posbility: 0.8711
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0010
Next Token :  i, Posbility: 0.0014
Next Token :  sort, Posbility: 0.0033
Next Token :  , Posbility: 0.0520
Next Token :  rec, Posbility: 0.9219
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0024
Next Token :  rec, Posbility: 0.0039
Next Token :  sort, Posbility: 0.0057
Next Token :  loop, Posbility: 0.0065
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0021
Next Token : swap, Posbility: 0.0024
Next Token : shell, Posbility: 0.0024
Next Token : f, Posbility: 0.0040
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ***, Posbility: 0.0007
Next Token : ", Posbility: 0.0039
Next Token : """, Posbility: 0.0072
Next Token : ', Posbility: 0.2383
Next Token : ''', Posbility: 0.7344
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0001
Next Token : ~~~, Posbility: 0.0002
Next Token : """, Posbility: 0.0003
Next Token : ', Posbility: 0.0009
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0001
Next Token : """, Posbility: 0.0001
Next Token : ~~~, Posbility: 0.0001
Next Token : ', Posbility: 0.0017
Next Token : ''', Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0007
Next Token :  =, Posbility: 0.0014
Next Token : $$, Posbility: 0.0014
Next Token : ', Posbility: 0.0471
Next Token : ''', Posbility: 0.9453
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s''''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ''', Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  acc, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0001
Next Token : $$, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ', Posbility: 0.0046
Next Token : ''', Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ‘, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token : ~~~, Posbility: 0.0000
Next Token : ', Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0000
Next Token : ~~~, Posbility: 0.0000
Next Token :  '', Posbility: 0.0001
Next Token : ', Posbility: 0.0005
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s'''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  '', Posbility: 0.0005
Next Token : ’, Posbility: 0.0006
Next Token : 
, Posbility: 0.0009
Next Token : ', Posbility: 0.0229
Next Token : ''', Posbility: 0.9727
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ?, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : ()->, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : in, Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0077
Next Token : for, Posbility: 0.0127
Next Token : (, Posbility: 0.0237
Next Token : s, Posbility: 0.0344
Next Token : let, Posbility: 0.8906
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0008
Next Token :  i, Posbility: 0.0012
Next Token :  sort, Posbility: 0.0030
Next Token :  , Posbility: 0.0464
Next Token :  rec, Posbility: 0.9297
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0016
Next Token :  rec, Posbility: 0.0035
Next Token :  sort, Posbility: 0.0040
Next Token :  loop, Posbility: 0.0045
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0012
Next Token : shell, Posbility: 0.0013
Next Token : swap, Posbility: 0.0019
Next Token : f, Posbility: 0.0024
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0011
Next Token : """, Posbility: 0.0026
Next Token : ", Posbility: 0.0029
Next Token : ''', Posbility: 0.2637
Next Token : ', Posbility: 0.7148
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s'
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ```, Posbility: 0.0001
Next Token : ``, Posbility: 0.0002
Next Token : """, Posbility: 0.0006
Next Token : ', Posbility: 0.0159
Next Token : ''', Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  '', Posbility: 0.0035
Next Token :  , Posbility: 0.0094
Next Token :  =, Posbility: 0.0615
Next Token : ', Posbility: 0.4004
Next Token : ''', Posbility: 0.5156
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s'''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _______, Posbility: 0.0008
Next Token :  '', Posbility: 0.0011
Next Token :  =, Posbility: 0.0080
Next Token : ', Posbility: 0.2656
Next Token : ''', Posbility: 0.7227
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ’, Posbility: 0.0004
Next Token :  '', Posbility: 0.0007
Next Token :  =, Posbility: 0.0225
Next Token : ', Posbility: 0.1299
Next Token : ''', Posbility: 0.8438
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ', Posbility: 0.0004
Next Token : ''', Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xc, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ’, Posbility: 0.0002
Next Token : ', Posbility: 0.0140
Next Token : ''', Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ~~~, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token : ', Posbility: 0.0002
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ‘, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0004
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  '', Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ’, Posbility: 0.0001
Next Token : ', Posbility: 0.0110
Next Token : ''', Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s''''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ‘, Posbility: 0.0001
Next Token : ''', Posbility: 0.0001
Next Token : ’, Posbility: 0.0008
Next Token : 
, Posbility: 0.0032
Next Token : ', Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ', Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ?, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ()->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0043
Next Token : for, Posbility: 0.0132
Next Token : (, Posbility: 0.0150
Next Token : s, Posbility: 0.0170
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0008
Next Token :  i, Posbility: 0.0011
Next Token :  sort, Posbility: 0.0018
Next Token :  , Posbility: 0.0366
Next Token :  rec, Posbility: 0.9453
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec
 score:False
Error type: noerr
---------------------------
Next Token :  rec, Posbility: 0.0012
Next Token :  compare, Posbility: 0.0012
Next Token :  sort, Posbility: 0.0022
Next Token :  loop, Posbility: 0.0031
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0008
Next Token : r, Posbility: 0.0008
Next Token : f, Posbility: 0.0015
Next Token : swap, Posbility: 0.0017
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: noerr
---------------------------
Next Token : ``, Posbility: 0.0017
Next Token : """, Posbility: 0.0036
Next Token : ", Posbility: 0.0041
Next Token : ''', Posbility: 0.2871
Next Token : ', Posbility: 0.6914
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'
 score:False
Error type: noerr
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : $$, Posbility: 0.0002
Next Token : """, Posbility: 0.0006
Next Token : ', Posbility: 0.0159
Next Token : ''', Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s''''
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0013
Next Token :  '', Posbility: 0.0013
Next Token :  =, Posbility: 0.0154
Next Token : ''', Posbility: 0.3965
Next Token : ', Posbility: 0.5781
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0018
Next Token :  '', Posbility: 0.0024
Next Token :  =, Posbility: 0.0136
Next Token : ', Posbility: 0.0225
Next Token : ''', Posbility: 0.9531
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s''''''''
 score:False
Error type: noerr
---------------------------
Next Token : =', Posbility: 0.0003
Next Token :  '', Posbility: 0.0006
Next Token :  =, Posbility: 0.0051
Next Token : ', Posbility: 0.0139
Next Token : ''', Posbility: 0.9766
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''
 score:False
Error type: noerr
---------------------------
Next Token : ``, Posbility: 0.0002
Next Token :  '', Posbility: 0.0007
Next Token :  =, Posbility: 0.0031
Next Token : ', Posbility: 0.0228
Next Token : ''', Posbility: 0.9727
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''''
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  '', Posbility: 0.0002
Next Token : ', Posbility: 0.0010
Next Token : ''', Posbility: 0.0097
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  fun, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    
 score:False
Error type: noerr
---------------------------
Next Token : ~, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    |
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x 
 score:False
Error type: noerr
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x ::
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  a, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: 
 score:False
Error type: noerr
---------------------------
Next Token : xc, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: x
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs ->
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x ::
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : shell, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s
 score:False
Error type: noerr
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : ‘, Posbility: 0.0001
Next Token : ’, Posbility: 0.0002
Next Token : ', Posbility: 0.0159
Next Token : ''', Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s'''
 score:False
Error type: noerr
---------------------------
Next Token : ~~~, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''
 score:False
Error type: noerr
---------------------------
Next Token : ‘, Posbility: 0.0000
Next Token : ’, Posbility: 0.0000
Next Token :  '', Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token : ''', Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s'''''''''
 score:False
Error type: noerr
---------------------------
Next Token :  '', Posbility: 0.0000
Next Token : ‘, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : ', Posbility: 0.0022
Next Token : ''', Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : ’, Posbility: 0.0005
Next Token : ''', Posbility: 0.0025
Next Token : 
, Posbility: 0.0052
Next Token : ', Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
 score:False
Error type: noerr
---------------------------
Next Token : &#39;, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : ’, Posbility: 0.0001
Next Token : 
, Posbility: 0.0420
Next Token : ', Posbility: 0.9570
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    |
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ 
 score:False
Error type: noerr
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : ()->, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ ->
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : Array, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> x
 score:False
Error type: noerr
---------------------------
Next Token : ', Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0005
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0048
Next Token : for, Posbility: 0.0115
Next Token : (, Posbility: 0.0167
Next Token : s, Posbility: 0.0276
Next Token : let, Posbility: 0.9141
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  mut, Posbility: 0.0004
Next Token :  i, Posbility: 0.0005
Next Token :  sort, Posbility: 0.0009
Next Token :  , Posbility: 0.0228
Next Token :  rec, Posbility: 0.9688
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0012
Next Token :  sort, Posbility: 0.0013
Next Token :  loop, Posbility: 0.0019
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0009
Next Token : x, Posbility: 0.0010
Next Token : swap, Posbility: 0.0013
Next Token : f, Posbility: 0.0022
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s
 score:False
Error type: noerr
---------------------------
Next Token : ’, Posbility: 0.0012
Next Token : ", Posbility: 0.0030
Next Token : """, Posbility: 0.0030
Next Token : ''', Posbility: 0.3418
Next Token : ', Posbility: 0.6406
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s'
 score:False
Error type: noerr
---------------------------
Next Token : ``, Posbility: 0.0001
Next Token : $$, Posbility: 0.0002
Next Token : """, Posbility: 0.0008
Next Token : ', Posbility: 0.0159
Next Token : ''', Posbility: 0.9805
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s''''
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0024
Next Token :  '', Posbility: 0.0031
Next Token :  =, Posbility: 0.0262
Next Token : ''', Posbility: 0.2832
Next Token : ', Posbility: 0.6758
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s'''''
 score:False
Error type: noerr
---------------------------
Next Token :  '', Posbility: 0.0068
Next Token :  , Posbility: 0.0099
Next Token : ', Posbility: 0.0238
Next Token :  =, Posbility: 0.0571
Next Token : ''', Posbility: 0.8906
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s''''''''
 score:False
Error type: noerr
---------------------------
Next Token : """, Posbility: 0.0005
Next Token :  '', Posbility: 0.0007
Next Token :  =, Posbility: 0.0057
Next Token : ', Posbility: 0.0327
Next Token : ''', Posbility: 0.9570
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''
 score:False
Error type: noerr
---------------------------
Next Token : ", Posbility: 0.0002
Next Token : ``, Posbility: 0.0003
Next Token : """, Posbility: 0.0003
Next Token : ', Posbility: 0.0293
Next Token : ''', Posbility: 0.9688
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''''
 score:False
Error type: noerr
---------------------------
Next Token : `, Posbility: 0.0008
Next Token :  '', Posbility: 0.0014
Next Token :  =, Posbility: 0.0461
Next Token : ''', Posbility: 0.3867
Next Token : ', Posbility: 0.5625
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''''
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : ''', Posbility: 0.0005
Next Token : ', Posbility: 0.0032
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''''' =
 score:False
Error type: noerr
---------------------------
Next Token : function, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  function, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''''' = function
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''''' = function

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to sort the given array by using shell sort. *)
let shell_sort x =
  let n = Array.length x in
  let h = Int.(n / 2) in
  let rec s = function
    | x :: xs -> x :: s
    | _ -> xs
  in
  let rec s' = function
    | x :: xs -> x :: s'
    | _ -> xs
  in
  let rec s'' = function
    | x :: xs -> x :: s''
    | _ -> xs
  in
  let rec s''' = function
    | x :: xs -> x :: s'''
    | _ -> xs
  in
  let rec s'''' = function
    | x :: xs -> x :: s''''
    | _ -> xs
  in
  let rec s'''''' = function
    | x :: xs -> x :: s''''''
    | _ -> xs
  in
  let rec s''''''' = function
    | x :: xs -> x :: s'''''''
    | _ -> xs
  in
  let rec s''''''''' = function
    | x :: xs -> x :: s'''''''''
    | _ -> xs
  in
  let rec s'''''''''' = function
    | x :: xs -> x :: s''''''''''
    | _ -> xs
  in
  let rec s'''''''''''' = function
    | x :: xs -> x :: s''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''' = function
    | x :: xs -> x :: s'''''''''''''
    | _ -> xs
  in
  let rec s'''''''''''''' = function
    | x :: xs -> x :: s''''''''''''''
    | _ -> xs
  in
  let rec s''''''''''''''' = function
    
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>