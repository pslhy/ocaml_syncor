code:
 (* Write a function for computing square roots using the babylonian method. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  root, Posbility: 0.0042
Next Token :  is, Posbility: 0.0054
Next Token :  compute, Posbility: 0.0061
Next Token :  , Posbility: 0.3750
Next Token :  rec, Posbility: 0.5469
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0065
Next Token :  rec, Posbility: 0.0137
Next Token :  find, Posbility: 0.0156
Next Token :  compute, Posbility: 0.0226
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : br, Posbility: 0.0332
Next Token : sq, Posbility: 0.0903
Next Token : square, Posbility: 0.1689
Next Token : baby, Posbility: 0.2773
Next Token : sqrt, Posbility: 0.2773
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0071
Next Token : (, Posbility: 0.0193
Next Token :  =, Posbility: 0.0762
Next Token :  , Posbility: 0.2354
Next Token : _, Posbility: 0.5625
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : br, Posbility: 0.0294
Next Token : rec, Posbility: 0.0334
Next Token : by, Posbility: 0.0378
Next Token : iter, Posbility: 0.1914
Next Token : baby, Posbility: 0.3594
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_baby
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 0.0009
Next Token : lon, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylon
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0004
Next Token :  =, Posbility: 0.0004
Next Token : (, Posbility: 0.0009
Next Token :  , Posbility: 0.0017
Next Token : ian, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0227
Next Token : (, Posbility: 0.0258
Next Token : _, Posbility: 0.0376
Next Token :  =, Posbility: 0.0618
Next Token :  , Posbility: 0.7539
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0200
Next Token : f, Posbility: 0.0330
Next Token : (, Posbility: 0.0544
Next Token : n, Posbility: 0.2441
Next Token : x, Posbility: 0.5156
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0029
Next Token : 0, Posbility: 0.0089
Next Token :  i, Posbility: 0.0101
Next Token :  , Posbility: 0.1387
Next Token :  =, Posbility: 0.7969
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0020
Next Token :  function, Posbility: 0.0048
Next Token :  match, Posbility: 0.0215
Next Token :  , Posbility: 0.0515
Next Token : 
, Posbility: 0.9102
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0036
Next Token : 	, Posbility: 0.0052
Next Token :    , Posbility: 0.0076
Next Token :     , Posbility: 0.0928
Next Token :   , Posbility: 0.8789
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0035
Next Token : (, Posbility: 0.0139
Next Token : match, Posbility: 0.2793
Next Token : let, Posbility: 0.3164
Next Token : if, Posbility: 0.3574
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Not, Posbility: 0.0021
Next Token :  Math, Posbility: 0.0024
Next Token :  less, Posbility: 0.0031
Next Token :  not, Posbility: 0.0065
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Float, Posbility: 0.0023
Next Token : abs, Posbility: 0.0034
Next Token : Int, Posbility: 0.0043
Next Token : (, Posbility: 0.0364
Next Token : x, Posbility: 0.9375
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0205
Next Token :  >=, Posbility: 0.0557
Next Token :  =, Posbility: 0.2490
Next Token :  <=, Posbility: 0.2490
Next Token :  , Posbility: 0.4121
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0005
Next Token : /, Posbility: 0.0011
Next Token : â‰¤, Posbility: 0.0023
Next Token : >, Posbility: 0.0598
Next Token : <, Posbility: 0.9336
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1.0, Posbility: 0.0620
Next Token :  1, Posbility: 0.1157
Next Token :  , Posbility: 0.1309
Next Token :  0.0, Posbility: 0.1309
Next Token :  0, Posbility: 0.4570
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0047
Next Token :  , Posbility: 0.0128
Next Token : 
, Posbility: 0.0186
Next Token :  ||, Posbility: 0.0505
Next Token :  then, Posbility: 0.8945
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0188
Next Token :  0, Posbility: 0.0212
Next Token :  error, Posbility: 0.0242
Next Token : 
, Posbility: 0.4277
Next Token :  , Posbility: 0.4277
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0327
Next Token : -, Posbility: 0.0540
Next Token : x, Posbility: 0.0693
Next Token : sqrt, Posbility: 0.1143
Next Token : raise, Posbility: 0.5117
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0139
Next Token : _, Posbility: 0.0228
Next Token :  ", Posbility: 0.0620
Next Token :  , Posbility: 0.4043
Next Token :  Not, Posbility: 0.4590
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not
 score:False
Error type: noerr
---------------------------
Next Token : In, Posbility: 0.0080
Next Token : Supported, Posbility: 0.0080
Next Token : A, Posbility: 0.0359
Next Token : Positive, Posbility: 0.0522
Next Token : _, Posbility: 0.8164
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_
 score:False
Error type: noerr
---------------------------
Next Token : found, Posbility: 0.0349
Next Token : square, Posbility: 0.0396
Next Token : negative, Posbility: 0.0508
Next Token : positive, Posbility: 0.2012
Next Token : a, Posbility: 0.3320
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : symmetric, Posbility: 0.0001
Next Token : sym, Posbility: 0.0001
Next Token : ., Posbility: 0.0002
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_
 score:False
Error type: noerr
---------------------------
Next Token : Number, Posbility: 0.0275
Next Token : root, Posbility: 0.0311
Next Token : real, Posbility: 0.0581
Next Token : square, Posbility: 0.0845
Next Token : number, Posbility: 0.7070
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.1025
Next Token :  else, Posbility: 0.1025
Next Token : ;, Posbility: 0.1162
Next Token : _, Posbility: 0.1494
Next Token : 
, Posbility: 0.2793
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0015
Next Token :       , Posbility: 0.0024
Next Token :     , Posbility: 0.0051
Next Token :  , Posbility: 0.0096
Next Token :   , Posbility: 0.9766
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0051
Next Token : elif, Posbility: 0.0203
Next Token : let, Posbility: 0.0378
Next Token : if, Posbility: 0.0623
Next Token : else, Posbility: 0.8594
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  match, Posbility: 0.0047
Next Token :  {, Posbility: 0.0054
Next Token : 
, Posbility: 0.0840
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0027
Next Token : (, Posbility: 0.0064
Next Token : x, Posbility: 0.0106
Next Token : let, Posbility: 0.0198
Next Token : if, Posbility: 0.9531
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0008
Next Token :  1, Posbility: 0.0015
Next Token :  not, Posbility: 0.0017
Next Token :  0, Posbility: 0.0052
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0007
Next Token : 2, Posbility: 0.0008
Next Token : abs, Posbility: 0.0010
Next Token : (, Posbility: 0.0075
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0099
Next Token :  <=, Posbility: 0.0442
Next Token :  , Posbility: 0.1982
Next Token :  ==, Posbility: 0.1982
Next Token :  =, Posbility: 0.5391
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1.0, Posbility: 0.0003
Next Token :  1, Posbility: 0.0065
Next Token :  , Posbility: 0.0107
Next Token :  0.0, Posbility: 0.0176
Next Token :  0, Posbility: 0.9648
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0017
Next Token :   , Posbility: 0.0024
Next Token : ., Posbility: 0.0028
Next Token :  ||, Posbility: 0.0075
Next Token :  then, Posbility: 0.9805
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0215
Next Token : 
, Posbility: 0.0276
Next Token :  0.0, Posbility: 0.0752
Next Token :  , Posbility: 0.3359
Next Token :  0, Posbility: 0.4883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0063
Next Token :  , Posbility: 0.0151
Next Token :  else, Posbility: 0.0320
Next Token : ., Posbility: 0.1113
Next Token : 
, Posbility: 0.8242
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : elif, Posbility: 0.0002
Next Token : |, Posbility: 0.0002
Next Token : let, Posbility: 0.0004
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  do, Posbility: 0.0019
Next Token :  match, Posbility: 0.0074
Next Token :  {, Posbility: 0.0618
Next Token : 
, Posbility: 0.2451
Next Token :  , Posbility: 0.6641
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0080
Next Token : (, Posbility: 0.0459
Next Token : x, Posbility: 0.0669
Next Token : let, Posbility: 0.1250
Next Token : if, Posbility: 0.7188
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0012
Next Token :  1, Posbility: 0.0019
Next Token :  0, Posbility: 0.0019
Next Token :  not, Posbility: 0.0019
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0010
Next Token : 2, Posbility: 0.0013
Next Token : abs, Posbility: 0.0019
Next Token : (, Posbility: 0.0200
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0178
Next Token :  <=, Posbility: 0.0229
Next Token :  ==, Posbility: 0.0260
Next Token :  , Posbility: 0.2461
Next Token :  =, Posbility: 0.6680
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0024
Next Token :  0, Posbility: 0.0040
Next Token :  1.0, Posbility: 0.0051
Next Token :  , Posbility: 0.0139
Next Token :  1, Posbility: 0.9688
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token : 
, Posbility: 0.0012
Next Token :  ||, Posbility: 0.0015
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0054
Next Token :  1.0, Posbility: 0.0115
Next Token :  0, Posbility: 0.0400
Next Token :  , Posbility: 0.1235
Next Token :  1, Posbility: 0.8047
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0021
Next Token : ., Posbility: 0.0027
Next Token :  , Posbility: 0.0084
Next Token :  else, Posbility: 0.0095
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :     , Posbility: 0.0010
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0005
Next Token : |, Posbility: 0.0007
Next Token : //, Posbility: 0.0008
Next Token : let, Posbility: 0.0032
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  do, Posbility: 0.0052
Next Token :  match, Posbility: 0.0076
Next Token :  {, Posbility: 0.0815
Next Token : 
, Posbility: 0.2832
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0103
Next Token : (, Posbility: 0.0674
Next Token : x, Posbility: 0.1108
Next Token : let, Posbility: 0.2656
Next Token : if, Posbility: 0.4961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0016
Next Token :  is, Posbility: 0.0019
Next Token :  int, Posbility: 0.0021
Next Token :  not, Posbility: 0.0040
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : abs, Posbility: 0.0021
Next Token : 2, Posbility: 0.0023
Next Token : let, Posbility: 0.0030
Next Token : (, Posbility: 0.0286
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0369
Next Token :  >=, Posbility: 0.0369
Next Token :  <=, Posbility: 0.0369
Next Token :  , Posbility: 0.3965
Next Token :  =, Posbility: 0.3965
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0106
Next Token :  0, Posbility: 0.0254
Next Token :  0.5, Posbility: 0.0369
Next Token :  -1, Posbility: 0.0474
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -2, Posbility: 0.0034
Next Token : (, Posbility: 0.0060
Next Token : 3, Posbility: 0.0060
Next Token : x, Posbility: 0.0569
Next Token : 2, Posbility: 0.8906
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0008
Next Token :  *, Posbility: 0.0012
Next Token : 
, Posbility: 0.0017
Next Token :  ||, Posbility: 0.0022
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0127
Next Token :  1.5, Posbility: 0.0164
Next Token :  1.4, Posbility: 0.0238
Next Token :  1, Posbility: 0.2891
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0077
Next Token : 1/2, Posbility: 0.0105
Next Token : sqrt, Posbility: 0.0366
Next Token : x, Posbility: 0.0684
Next Token : 2, Posbility: 0.8320
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0019
Next Token :  *, Posbility: 0.0040
Next Token :  else, Posbility: 0.0065
Next Token :  , Posbility: 0.0122
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0002
Next Token :      , Posbility: 0.0004
Next Token :       , Posbility: 0.0010
Next Token :     , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0010
Next Token : |, Posbility: 0.0010
Next Token : then, Posbility: 0.0013
Next Token : let, Posbility: 0.0036
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  do, Posbility: 0.0045
Next Token :  match, Posbility: 0.0066
Next Token :  {, Posbility: 0.0713
Next Token : 
, Posbility: 0.2188
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sqrt, Posbility: 0.0095
Next Token : (, Posbility: 0.0481
Next Token : x, Posbility: 0.0698
Next Token : let, Posbility: 0.2441
Next Token : if, Posbility: 0.5859
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  O, Posbility: 0.0007
Next Token :  Math, Posbility: 0.0007
Next Token :  int, Posbility: 0.0008
Next Token :  not, Posbility: 0.0019
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : abs, Posbility: 0.0006
Next Token : let, Posbility: 0.0009
Next Token : 2, Posbility: 0.0051
Next Token : (, Posbility: 0.0177
Next Token : x, Posbility: 0.9688
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0102
Next Token :  %, Posbility: 0.0115
Next Token :  >=, Posbility: 0.0168
Next Token :  , Posbility: 0.1099
Next Token :  =, Posbility: 0.8086
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0007
Next Token :  0.5, Posbility: 0.0010
Next Token :  0, Posbility: 0.0017
Next Token :  4, Posbility: 0.0140
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token : 5, Posbility: 0.0013
Next Token : 2, Posbility: 0.0031
Next Token : x, Posbility: 0.0096
Next Token : 3, Posbility: 0.9805
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  ||, Posbility: 0.0004
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2.5, Posbility: 0.0063
Next Token : 
, Posbility: 0.0081
Next Token :  1.5, Posbility: 0.0081
Next Token :  1, Posbility: 0.0171
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sqrt, Posbility: 0.0159
Next Token : x, Posbility: 0.0245
Next Token : 1.73, Posbility: 0.0381
Next Token : 2, Posbility: 0.1934
Next Token : 3, Posbility: 0.6719
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0017
Next Token :  else, Posbility: 0.0035
Next Token :  *, Posbility: 0.0035
Next Token :  , Posbility: 0.0108
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  
 score:False
Error type: noerr
---------------------------
Next Token : ..., Posbility: 0.0007
Next Token : |, Posbility: 0.0009
Next Token : then, Posbility: 0.0009
Next Token : let, Posbility: 0.0036
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  do, Posbility: 0.0015
Next Token :  match, Posbility: 0.0028
Next Token :  {, Posbility: 0.0391
Next Token : 
, Posbility: 0.1543
Next Token :  , Posbility: 0.7812
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sqrt, Posbility: 0.0056
Next Token : (, Posbility: 0.0322
Next Token : x, Posbility: 0.0366
Next Token : let, Posbility: 0.1641
Next Token : if, Posbility: 0.7344
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0004
Next Token :  4, Posbility: 0.0005
Next Token :  O, Posbility: 0.0005
Next Token :  not, Posbility: 0.0009
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : abs, Posbility: 0.0003
Next Token : 3, Posbility: 0.0005
Next Token : 2, Posbility: 0.0013
Next Token : (, Posbility: 0.0085
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  %, Posbility: 0.0030
Next Token :  <=, Posbility: 0.0030
Next Token :  >=, Posbility: 0.0063
Next Token :  , Posbility: 0.0413
Next Token :  =, Posbility: 0.9375
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  10, Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token :  , Posbility: 0.0067
Next Token :  4, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2.5, Posbility: 0.0012
Next Token :  1, Posbility: 0.0022
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.2197
Next Token :  4, Posbility: 0.7695
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0006
Next Token :  +, Posbility: 0.0009
Next Token :  *, Posbility: 0.0010
Next Token :  , Posbility: 0.0022
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : then, Posbility: 0.0003
Next Token : ..., Posbility: 0.0008
Next Token : let, Posbility: 0.0010
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0013
Next Token :  then, Posbility: 0.0019
Next Token :  {, Posbility: 0.0232
Next Token : 
, Posbility: 0.0918
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0022
Next Token : x, Posbility: 0.0159
Next Token : (, Posbility: 0.0181
Next Token : let, Posbility: 0.0811
Next Token : if, Posbility: 0.8711
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0001
Next Token :  O, Posbility: 0.0002
Next Token :  4, Posbility: 0.0002
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token : (, Posbility: 0.0041
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0013
Next Token :  <=, Posbility: 0.0015
Next Token :  >=, Posbility: 0.0024
Next Token :  , Posbility: 0.0201
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0001
Next Token :  0.5, Posbility: 0.0002
Next Token :  4, Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : 7, Posbility: 0.0005
Next Token : 6, Posbility: 0.0007
Next Token : 5, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0003
Next Token :  1, Posbility: 0.0004
Next Token : 
, Posbility: 0.0017
Next Token :  4, Posbility: 0.0096
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0016
Next Token : 3, Posbility: 0.0016
Next Token : 5.0, Posbility: 0.0017
Next Token : 2, Posbility: 0.0020
Next Token : 5, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0005
Next Token :  +, Posbility: 0.0007
Next Token : 

, Posbility: 0.0008
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : ..., Posbility: 0.0008
Next Token : then, Posbility: 0.0012
Next Token : let, Posbility: 0.0015
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0009
Next Token :  then, Posbility: 0.0017
Next Token :  {, Posbility: 0.0203
Next Token : 
, Posbility: 0.1030
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0024
Next Token : x, Posbility: 0.0139
Next Token : (, Posbility: 0.0203
Next Token : let, Posbility: 0.0903
Next Token : if, Posbility: 0.8594
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  O, Posbility: 0.0002
Next Token :  int, Posbility: 0.0002
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0011
Next Token :  <=, Posbility: 0.0013
Next Token :  >=, Posbility: 0.0019
Next Token :  , Posbility: 0.0201
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  10, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6.0, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : 8, Posbility: 0.0005
Next Token : 7, Posbility: 0.0010
Next Token : 6, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  10, Posbility: 0.0004
Next Token : 
, Posbility: 0.0009
Next Token :  4, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0011
Next Token : (, Posbility: 0.0012
Next Token : 6.0, Posbility: 0.0022
Next Token : 5, Posbility: 0.0038
Next Token : 6, Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0003
Next Token :  +, Posbility: 0.0003
Next Token : 

, Posbility: 0.0005
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : then, Posbility: 0.0006
Next Token : ..., Posbility: 0.0006
Next Token : let, Posbility: 0.0012
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0004
Next Token :  then, Posbility: 0.0011
Next Token :  {, Posbility: 0.0104
Next Token : 
, Posbility: 0.0466
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0012
Next Token : x, Posbility: 0.0090
Next Token : (, Posbility: 0.0115
Next Token : let, Posbility: 0.0583
Next Token : if, Posbility: 0.9141
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  O, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  int, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : 6, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0005
Next Token :  ==, Posbility: 0.0007
Next Token :  >=, Posbility: 0.0008
Next Token :  , Posbility: 0.0109
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : 6, Posbility: 0.0001
Next Token : 7.0, Posbility: 0.0001
Next Token : 8, Posbility: 0.0003
Next Token : 7, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  10, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : 8, Posbility: 0.0003
Next Token : 7.0, Posbility: 0.0015
Next Token : 6, Posbility: 0.0023
Next Token : 7, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :  else, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : ..., Posbility: 0.0003
Next Token : then, Posbility: 0.0004
Next Token : let, Posbility: 0.0010
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :  then, Posbility: 0.0006
Next Token :  {, Posbility: 0.0082
Next Token : 
, Posbility: 0.0415
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0011
Next Token : x, Posbility: 0.0055
Next Token : (, Posbility: 0.0080
Next Token : let, Posbility: 0.0522
Next Token : if, Posbility: 0.9258
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  O, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0004
Next Token :  <=, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0005
Next Token :  , Posbility: 0.0067
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  12, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  10, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : 7, Posbility: 0.0001
Next Token : 9, Posbility: 0.0002
Next Token : 8, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  10, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8.0, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token : 7, Posbility: 0.0008
Next Token : 8, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  else, Posbility: 0.0004
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : then, Posbility: 0.0002
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0003
Next Token :  then, Posbility: 0.0006
Next Token :  {, Posbility: 0.0093
Next Token : 
, Posbility: 0.0366
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0010
Next Token : x, Posbility: 0.0056
Next Token : (, Posbility: 0.0092
Next Token : let, Posbility: 0.0464
Next Token : if, Posbility: 0.9336
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  O, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0013
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0005
Next Token :  ==, Posbility: 0.0005
Next Token :  , Posbility: 0.0059
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  11, Posbility: 0.0001
Next Token :  0.9, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  10, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 9.0, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : 8, Posbility: 0.0002
Next Token : 9, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0.9, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  10, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : 9.0, Posbility: 0.0005
Next Token : 8, Posbility: 0.0046
Next Token : 9, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  else, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0004
Next Token : |, Posbility: 0.0004
Next Token : then, Posbility: 0.0009
Next Token : let, Posbility: 0.0028
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0018
Next Token :  then, Posbility: 0.0023
Next Token :  {, Posbility: 0.0251
Next Token : 
, Posbility: 0.2100
Next Token :  , Posbility: 0.7344
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0070
Next Token : x, Posbility: 0.0277
Next Token : (, Posbility: 0.0315
Next Token : let, Posbility: 0.1807
Next Token : if, Posbility: 0.7148
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token :  int, Posbility: 0.0012
Next Token :  O, Posbility: 0.0013
Next Token :  not, Posbility: 0.0022
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : let, Posbility: 0.0003
Next Token : Int, Posbility: 0.0005
Next Token : (, Posbility: 0.0075
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0018
Next Token :  <=, Posbility: 0.0026
Next Token :  >=, Posbility: 0.0049
Next Token :  , Posbility: 0.0466
Next Token :  =, Posbility: 0.9375
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  11, Posbility: 0.0003
Next Token :  100, Posbility: 0.0004
Next Token :  0, Posbility: 0.0012
Next Token :  , Posbility: 0.0041
Next Token :  10, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  ||, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token :  1, Posbility: 0.0008
Next Token :  , Posbility: 0.0096
Next Token :  10, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0004
Next Token :  else, Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0003
Next Token : //, Posbility: 0.0003
Next Token : then, Posbility: 0.0006
Next Token : let, Posbility: 0.0025
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0013
Next Token :  match, Posbility: 0.0013
Next Token :  {, Posbility: 0.0234
Next Token : 
, Posbility: 0.1729
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0048
Next Token : x, Posbility: 0.0189
Next Token : (, Posbility: 0.0243
Next Token : let, Posbility: 0.1235
Next Token : if, Posbility: 0.8047
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  O, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  int, Posbility: 0.0004
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : let, Posbility: 0.0002
Next Token : Int, Posbility: 0.0002
Next Token : (, Posbility: 0.0059
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0013
Next Token :  <=, Posbility: 0.0016
Next Token :  >=, Posbility: 0.0021
Next Token :  , Posbility: 0.0291
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0009
Next Token :  20, Posbility: 0.0017
Next Token :  10, Posbility: 0.0028
Next Token :  , Posbility: 0.0036
Next Token :  11, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1.1, Posbility: 0.0004
Next Token :  1, Posbility: 0.0005
Next Token :  10, Posbility: 0.0025
Next Token :  , Posbility: 0.0052
Next Token :  11, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  ..., Posbility: 0.0003
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : then, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : ..., Posbility: 0.0012
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  then, Posbility: 0.0001
Next Token :  {, Posbility: 0.0045
Next Token : 
, Posbility: 0.0157
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0005
Next Token : x, Posbility: 0.0021
Next Token : (, Posbility: 0.0051
Next Token : let, Posbility: 0.0227
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  O, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0028
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  13, Posbility: 0.0001
Next Token :  22, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :  11, Posbility: 0.0005
Next Token :  12, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1.2, Posbility: 0.0002
Next Token :  1, Posbility: 0.0002
Next Token :  11, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token :  12, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0001
Next Token :  ..., Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : ..., Posbility: 0.0010
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :  12, Posbility: 0.0004
Next Token :  {, Posbility: 0.0045
Next Token : 
, Posbility: 0.0123
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0010
Next Token : x, Posbility: 0.0017
Next Token : (, Posbility: 0.0045
Next Token : let, Posbility: 0.0201
Next Token : if, Posbility: 0.9688
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  O, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  12, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  14, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  13, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  12, Posbility: 0.0002
Next Token :  1.3, Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token :  13, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  else, Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : ..., Posbility: 0.0010
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0002
Next Token :  {, Posbility: 0.0028
Next Token : 
, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0010
Next Token : raise, Posbility: 0.0010
Next Token : (, Posbility: 0.0028
Next Token : let, Posbility: 0.0109
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  13, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  15, Posbility: 0.0001
Next Token :  14, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  1.4, Posbility: 0.0001
Next Token :  13, Posbility: 0.0006
Next Token :  , Posbility: 0.0008
Next Token :  14, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0002
Next Token :  fail, Posbility: 0.0003
Next Token :  {, Posbility: 0.0022
Next Token : 
, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0011
Next Token : x, Posbility: 0.0015
Next Token : (, Posbility: 0.0045
Next Token : let, Posbility: 0.0178
Next Token : if, Posbility: 0.9727
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  1.5, Posbility: 0.0000
Next Token :  14, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  15, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  else, Posbility: 0.0008
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  1.5, Posbility: 0.0001
Next Token :  14, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  15, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  else, Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : then, Posbility: 0.0001
Next Token : let, Posbility: 0.0008
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  15, Posbility: 0.0007
Next Token :  fail, Posbility: 0.0009
Next Token :  {, Posbility: 0.0045
Next Token : 
, Posbility: 0.0256
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0027
Next Token : raise, Posbility: 0.0039
Next Token : (, Posbility: 0.0082
Next Token : let, Posbility: 0.0325
Next Token : if, Posbility: 0.9492
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0002
Next Token :  , Posbility: 0.0032
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  20, Posbility: 0.0002
Next Token :  17, Posbility: 0.0002
Next Token :  15, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 16.0, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 16, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  17, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  15, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 8, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : 16.0, Posbility: 0.0001
Next Token : 16, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0005
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0004
Next Token :  fail, Posbility: 0.0006
Next Token :  {, Posbility: 0.0040
Next Token : 
, Posbility: 0.0201
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0021
Next Token : x, Posbility: 0.0030
Next Token : (, Posbility: 0.0082
Next Token : let, Posbility: 0.0325
Next Token : if, Posbility: 0.9492
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0002
Next Token :  <=, Posbility: 0.0002
Next Token :  , Posbility: 0.0028
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  20, Posbility: 0.0000
Next Token :  18, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  17, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  18, Posbility: 0.0000
Next Token :  15, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  17, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0009
Next Token : 
, Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : raise, Posbility: 0.0003
Next Token : (, Posbility: 0.0013
Next Token : let, Posbility: 0.0052
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  19, Posbility: 0.0000
Next Token :  1.8, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  17, Posbility: 0.0001
Next Token :  18, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  dan, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1.8, Posbility: 0.0001
Next Token :  17, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  18, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0002
Next Token :  {, Posbility: 0.0013
Next Token : 
, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0006
Next Token : raise, Posbility: 0.0007
Next Token : (, Posbility: 0.0025
Next Token : let, Posbility: 0.0067
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  21, Posbility: 0.0000
Next Token :  20, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  18, Posbility: 0.0000
Next Token :  19, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  18, Posbility: 0.0001
Next Token :  20, Posbility: 0.0001
Next Token :  0.19, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  19, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  else, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : then, Posbility: 0.0001
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  20, Posbility: 0.0008
Next Token :  fail, Posbility: 0.0014
Next Token :  {, Posbility: 0.0064
Next Token : 
, Posbility: 0.0325
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0027
Next Token : raise, Posbility: 0.0050
Next Token : (, Posbility: 0.0072
Next Token : let, Posbility: 0.0325
Next Token : if, Posbility: 0.9453
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  int, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : (, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0028
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  21, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  10, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  20, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  20.0, Posbility: 0.0001
Next Token :  19, Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :  20, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  else, Posbility: 0.0003
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : then, Posbility: 0.0001
Next Token : let, Posbility: 0.0007
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0016
Next Token :  20, Posbility: 0.0018
Next Token :  {, Posbility: 0.0118
Next Token : 
, Posbility: 0.0364
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0043
Next Token : raise, Posbility: 0.0091
Next Token : (, Posbility: 0.0103
Next Token : let, Posbility: 0.0408
Next Token : if, Posbility: 0.9258
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  int, Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0003
Next Token :  >=, Posbility: 0.0004
Next Token :  , Posbility: 0.0059
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0002
Next Token :  30, Posbility: 0.0002
Next Token :  22, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :  21, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2.1, Posbility: 0.0001
Next Token :  21.0, Posbility: 0.0007
Next Token :  20, Posbility: 0.0012
Next Token :  , Posbility: 0.0022
Next Token :  21, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  21, Posbility: 0.0002
Next Token :  22, Posbility: 0.0003
Next Token :  {, Posbility: 0.0015
Next Token : 
, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0006
Next Token : raise, Posbility: 0.0009
Next Token : (, Posbility: 0.0019
Next Token : let, Posbility: 0.0085
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  30, Posbility: 0.0000
Next Token :  23, Posbility: 0.0001
Next Token :  21, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  22, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  122, Posbility: 0.0000
Next Token :  21, Posbility: 0.0001
Next Token :  2.2, Posbility: 0.0001
Next Token :  , Posbility: 0.0015
Next Token :  22, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0002
Next Token :  {, Posbility: 0.0006
Next Token :  22, Posbility: 0.0008
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : raise, Posbility: 0.0007
Next Token : (, Posbility: 0.0015
Next Token : let, Posbility: 0.0052
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  25, Posbility: 0.0000
Next Token :  24, Posbility: 0.0000
Next Token :  22, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  23, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  25, Posbility: 0.0000
Next Token :  24, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  22, Posbility: 0.0002
Next Token :  23, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  22, Posbility: 0.0003
Next Token :  fail, Posbility: 0.0003
Next Token :  {, Posbility: 0.0008
Next Token : 
, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : raise, Posbility: 0.0010
Next Token : (, Posbility: 0.0017
Next Token : let, Posbility: 0.0052
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  23, Posbility: 0.0000
Next Token :  25, Posbility: 0.0000
Next Token :  24.0, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  24, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  25, Posbility: 0.0000
Next Token :  23, Posbility: 0.0002
Next Token :  24.0, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :  24, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0003
Next Token :  24, Posbility: 0.0006
Next Token :  {, Posbility: 0.0007
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : raise, Posbility: 0.0012
Next Token : (, Posbility: 0.0017
Next Token : let, Posbility: 0.0036
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  24, Posbility: 0.0000
Next Token :  26, Posbility: 0.0000
Next Token :  0.25, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  25, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  23, Posbility: 0.0000
Next Token :  2.5, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  24, Posbility: 0.0001
Next Token :  25, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  25, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0003
Next Token :  {, Posbility: 0.0007
Next Token : 
, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : raise, Posbility: 0.0010
Next Token : (, Posbility: 0.0015
Next Token : let, Posbility: 0.0032
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  25, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  28, Posbility: 0.0000
Next Token :  27, Posbility: 0.0000
Next Token :  26, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 26, Posbility: 0.0000
Next Token :  27, Posbility: 0.0000
Next Token :  25, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  26, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : raise, Posbility: 0.0003
Next Token : (, Posbility: 0.0008
Next Token : let, Posbility: 0.0017
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  26, Posbility: 0.0000
Next Token :  29, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  28, Posbility: 0.0000
Next Token :  27, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  than, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 27, Posbility: 0.0000
Next Token :  28, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  26, Posbility: 0.0000
Next Token :  27, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : let, Posbility: 0.0010
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 28, Posbility: 0.0000
Next Token :  29, Posbility: 0.0000
Next Token :  27, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  28, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  than, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  26, Posbility: 0.0000
Next Token :  0.28, Posbility: 0.0000
Next Token :  27, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  28, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0005
Next Token : (, Posbility: 0.0009
Next Token : let, Posbility: 0.0012
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  19, Posbility: 0.0000
Next Token :  30, Posbility: 0.0000
Next Token :  28, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  29, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  30, Posbility: 0.0000
Next Token : 29, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  28, Posbility: 0.0001
Next Token :  29, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0003
Next Token :  {, Posbility: 0.0007
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : (, Posbility: 0.0015
Next Token : raise, Posbility: 0.0017
Next Token : let, Posbility: 0.0025
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  50, Posbility: 0.0000
Next Token :  28, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  30, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  28, Posbility: 0.0000
Next Token :  60, Posbility: 0.0000
Next Token :  29, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  30, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : then, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0004
Next Token :  fail, Posbility: 0.0007
Next Token :  {, Posbility: 0.0015
Next Token : 
, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0015
Next Token : raise, Posbility: 0.0045
Next Token : (, Posbility: 0.0058
Next Token : let, Posbility: 0.0096
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0013
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  30, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  -31, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 35, Posbility: 0.0000
Next Token : 32, Posbility: 0.0002
Next Token : 31, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  63, Posbility: 0.0001
Next Token :  -31, Posbility: 0.0001
Next Token :  30, Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : [31, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 32, Posbility: 0.0001
Next Token : 31, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : then, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0002
Next Token :  fail, Posbility: 0.0005
Next Token :  {, Posbility: 0.0015
Next Token : 
, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0008
Next Token : raise, Posbility: 0.0031
Next Token : (, Posbility: 0.0040
Next Token : let, Posbility: 0.0059
Next Token : if, Posbility: 0.9844
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  -32, Posbility: 0.0001
Next Token :  [32, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 31, Posbility: 0.0000
Next Token : 35, Posbility: 0.0000
Next Token : 34, Posbility: 0.0000
Next Token : 33, Posbility: 0.0001
Next Token : 32, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  30, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  -32, Posbility: 0.0001
Next Token :  [32, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 33, Posbility: 0.0000
Next Token : 32(, Posbility: 0.0000
Next Token : 31, Posbility: 0.0010
Next Token : 32, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0003
Next Token :  {, Posbility: 0.0008
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : raise, Posbility: 0.0022
Next Token : (, Posbility: 0.0028
Next Token : let, Posbility: 0.0059
Next Token : if, Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [33, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  63, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 64, Posbility: 0.0000
Next Token : 35, Posbility: 0.0000
Next Token : 34, Posbility: 0.0000
Next Token : 32, Posbility: 0.0001
Next Token : 33, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  mapping, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  [33, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 31, Posbility: 0.0000
Next Token : 34, Posbility: 0.0000
Next Token : map, Posbility: 0.0000
Next Token : 32, Posbility: 0.0006
Next Token : 33, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0006
Next Token : (, Posbility: 0.0009
Next Token : let, Posbility: 0.0012
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  3.4, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 36, Posbility: 0.0000
Next Token : 64, Posbility: 0.0000
Next Token : 33, Posbility: 0.0000
Next Token : 35, Posbility: 0.0000
Next Token : 34, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  than, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  63, Posbility: 0.0000
Next Token :  14, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  3.4, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 32, Posbility: 0.0000
Next Token : 34,, Posbility: 0.0000
Next Token : 35, Posbility: 0.0000
Next Token : 33, Posbility: 0.0006
Next Token : 34, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0000
Next Token :  If, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0002
Next Token : (, Posbility: 0.0008
Next Token : let, Posbility: 0.0008
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0.35, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  3.5, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 135, Posbility: 0.0000
Next Token : 37, Posbility: 0.0000
Next Token : 34, Posbility: 0.0000
Next Token : 36, Posbility: 0.0000
Next Token : 35, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  3.5, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 35.0, Posbility: 0.0000
Next Token : 33, Posbility: 0.0000
Next Token : 35,, Posbility: 0.0000
Next Token : 34, Posbility: 0.0003
Next Token : 35, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0005
Next Token : (, Posbility: 0.0013
Next Token : let, Posbility: 0.0013
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if
 score:False
Error type: noerr
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  60, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 136, Posbility: 0.0000
Next Token : 38, Posbility: 0.0000
Next Token : 37, Posbility: 0.0000
Next Token : 35, Posbility: 0.0000
Next Token : 36, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  60, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 
 score:False
Error type: noerr
---------------------------
Next Token : 34, Posbility: 0.0000
Next Token : 36.0, Posbility: 0.0000
Next Token : 37, Posbility: 0.0000
Next Token : 35, Posbility: 0.0003
Next Token : 36, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0003
Next Token : 
, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : raise, Posbility: 0.0007
Next Token : (, Posbility: 0.0013
Next Token : let, Posbility: 0.0022
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  437, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 67, Posbility: 0.0000
Next Token : 39, Posbility: 0.0000
Next Token : 38, Posbility: 0.0000
Next Token : 36, Posbility: 0.0000
Next Token : 37, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0000
Next Token :  than, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then
 score:False
Error type: noerr
---------------------------
Next Token :  40, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  437, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 
 score:False
Error type: noerr
---------------------------
Next Token : 37,, Posbility: 0.0000
Next Token : 38, Posbility: 0.0000
Next Token : 35, Posbility: 0.0000
Next Token : 36, Posbility: 0.0006
Next Token : 37, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0004
Next Token : (, Posbility: 0.0009
Next Token : let, Posbility: 0.0015
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  63, Posbility: 0.0000
Next Token :  18, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  238, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 138, Posbility: 0.0000
Next Token : 39, Posbility: 0.0000
Next Token : 48, Posbility: 0.0000
Next Token : 37, Posbility: 0.0000
Next Token : 38, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38
 score:False
Error type: noerr
---------------------------
Next Token :  than, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then
 score:False
Error type: noerr
---------------------------
Next Token :  18, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  238, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 
 score:False
Error type: noerr
---------------------------
Next Token : 58, Posbility: 0.0000
Next Token : 39, Posbility: 0.0000
Next Token : 36, Posbility: 0.0000
Next Token : 37, Posbility: 0.0003
Next Token : 38, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0003
Next Token : (, Posbility: 0.0007
Next Token : let, Posbility: 0.0010
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if
 score:False
Error type: noerr
---------------------------
Next Token :  not, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  19, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 41, Posbility: 0.0000
Next Token : 37, Posbility: 0.0000
Next Token : 39,, Posbility: 0.0000
Next Token : 38, Posbility: 0.0000
Next Token : 39, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39
 score:False
Error type: noerr
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  19, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 
 score:False
Error type: noerr
---------------------------
Next Token : 3.9, Posbility: 0.0000
Next Token : 37, Posbility: 0.0000
Next Token : 39,, Posbility: 0.0000
Next Token : 38, Posbility: 0.0017
Next Token : 39, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  
 score:False
Error type: noerr
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0002
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0002
Next Token :  fail, Posbility: 0.0008
Next Token :  {, Posbility: 0.0015
Next Token : 
, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0006
Next Token : (, Posbility: 0.0045
Next Token : raise, Posbility: 0.0058
Next Token : let, Posbility: 0.0096
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  content, Posbility: 0.0000
Next Token :  50, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  40, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40
 score:False
Error type: noerr
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then
 score:False
Error type: noerr
---------------------------
Next Token :  20, Posbility: 0.0000
Next Token :  60, Posbility: 0.0000
Next Token :  content, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  40, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40

 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : end, Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0001
Next Token :  fail, Posbility: 0.0004
Next Token :  {, Posbility: 0.0008
Next Token : 
, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : raise, Posbility: 0.0017
Next Token : (, Posbility: 0.0028
Next Token : let, Posbility: 0.0028
Next Token : if, Posbility: 0.9922
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  21, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 45, Posbility: 0.0000
Next Token : 48, Posbility: 0.0000
Next Token : 43, Posbility: 0.0000
Next Token : 42, Posbility: 0.0002
Next Token : 41, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41
 score:False
Error type: noerr
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token :  than, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  21, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :  40, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 
 score:False
Error type: noerr
---------------------------
Next Token : 41,, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 42, Posbility: 0.0000
Next Token : Element, Posbility: 0.0000
Next Token : 41, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : raise, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : let, Posbility: 0.0006
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  22, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  50, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 45, Posbility: 0.0000
Next Token : 48, Posbility: 0.0000
Next Token : 41, Posbility: 0.0000
Next Token : 43, Posbility: 0.0000
Next Token : 42, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42
 score:False
Error type: noerr
---------------------------
Next Token :  than, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 42.0, Posbility: 0.0000
Next Token : 43, Posbility: 0.0000
Next Token : 41, Posbility: 0.0006
Next Token : 42, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else 
 score:False
Error type: noerr
---------------------------
Next Token : 42, Posbility: 0.0001
Next Token : raise, Posbility: 0.0003
Next Token : (, Posbility: 0.0007
Next Token : let, Posbility: 0.0010
Next Token : if, Posbility: 0.9961
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  50, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  63, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 43,, Posbility: 0.0000
Next Token : 45, Posbility: 0.0000
Next Token : 44, Posbility: 0.0000
Next Token : 42, Posbility: 0.0000
Next Token : 43, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43
 score:False
Error type: noerr
---------------------------
Next Token :  Then, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  than, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then
 score:False
Error type: noerr
---------------------------
Next Token :  4, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  23, Posbility: 0.0000
Next Token :  63, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 
 score:False
Error type: noerr
---------------------------
Next Token : 44, Posbility: 0.0000
Next Token : 41, Posbility: 0.0000
Next Token : 43,, Posbility: 0.0000
Next Token : 42, Posbility: 0.0004
Next Token : 43, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else 
 score:False
Error type: noerr
---------------------------
Next Token : assert, Posbility: 0.0001
Next Token : raise, Posbility: 0.0002
Next Token : let, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if
 score:False
Error type: noerr
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  >=, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  50, Posbility: 0.0000
Next Token : 44, Posbility: 0.0000
Next Token :  24, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 444, Posbility: 0.0000
Next Token : 43, Posbility: 0.0000
Next Token : 144, Posbility: 0.0000
Next Token : 45, Posbility: 0.0000
Next Token : 44, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44
 score:False
Error type: noerr
---------------------------
Next Token :  than, Posbility: 0.0000
Next Token : Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then
 score:False
Error type: noerr
---------------------------
Next Token :  40, Posbility: 0.0000
Next Token :  24, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :  audio, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 
 score:False
Error type: noerr
---------------------------
Next Token : 45, Posbility: 0.0000
Next Token : 44,, Posbility: 0.0000
Next Token : 42, Posbility: 0.0000
Next Token : 43, Posbility: 0.0001
Next Token : 44, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else 
 score:False
Error type: noerr
---------------------------
Next Token : assert, Posbility: 0.0000
Next Token : raise, Posbility: 0.0001
Next Token : let, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if
 score:False
Error type: noerr
---------------------------
Next Token :  Math, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  >=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  50, Posbility: 0.0000
Next Token :  0.45, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : 48, Posbility: 0.0000
Next Token : 47, Posbility: 0.0000
Next Token : 46, Posbility: 0.0000
Next Token : 145, Posbility: 0.0000
Next Token : 45, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45
 score:False
Error type: noerr
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  Then, Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then
 score:False
Error type: noerr
---------------------------
Next Token :  63, Posbility: 0.0000
Next Token :  40, Posbility: 0.0000
Next Token :  board, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 
 score:False
Error type: noerr
---------------------------
Next Token : 145, Posbility: 0.0000
Next Token : 4.5, Posbility: 0.0000
Next Token : 46, Posbility: 0.0000
Next Token : 44, Posbility: 0.0001
Next Token : 45, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45
  
 score:False
Error type: noerr
---------------------------
Next Token : elif, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45
  else
 score:False
Error type: noerr
---------------------------
Next Token :  If, Posbility: 0.0000
Next Token :  fail, Posbility: 0.0000
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45
  else 
 score:False
Error type: noerr
---------------------------
Next Token : assert, Posbility: 0.0000
Next Token : raise, Posbility: 0.0001
Next Token : let, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45
  else if
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token :  Math, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45
  else if 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function for computing square roots using the babylonian method. *)
let rec sqrt_babylonian x =
  if x < 0 then raise Not_a_number
  else if x = 0 then 0
  else if x = 1 then 1
  else if x = 2 then 2
  else if x = 3 then 3
  else if x = 4 then 4
  else if x = 5 then 5
  else if x = 6 then 6
  else if x = 7 then 7
  else if x = 8 then 8
  else if x = 9 then 9
  else if x = 10 then 10
  else if x = 11 then 11
  else if x = 12 then 12
  else if x = 13 then 13
  else if x = 14 then 14
  else if x = 15 then 15
  else if x = 16 then 16
  else if x = 17 then 17
  else if x = 18 then 18
  else if x = 19 then 19
  else if x = 20 then 20
  else if x = 21 then 21
  else if x = 22 then 22
  else if x = 23 then 23
  else if x = 24 then 24
  else if x = 25 then 25
  else if x = 26 then 26
  else if x = 27 then 27
  else if x = 28 then 28
  else if x = 29 then 29
  else if x = 30 then 30
  else if x = 31 then 31
  else if x = 32 then 32
  else if x = 33 then 33
  else if x = 34 then 34
  else if x = 35 then 35
  else if x = 36 then 36
  else if x = 37 then 37
  else if x = 38 then 38
  else if x = 39 then 39
  else if x = 40 then 40
  else if x = 41 then 41
  else if x = 42 then 42
  else if x = 43 then 43
  else if x = 44 then 44
  else if x = 45 then 45
  else if x
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>