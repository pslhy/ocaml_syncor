code:
 (* Write a function to check whether a specified list is sorted or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sort, Posbility: 0.0625
Next Token :  , Posbility: 0.0806
Next Token :  check, Posbility: 0.1699
Next Token :  rec, Posbility: 0.2812
Next Token :  is, Posbility: 0.2812
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0009
Next Token : List, Posbility: 0.0023
Next Token : sorted, Posbility: 0.0023
Next Token : Sorted, Posbility: 0.0469
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : asc, Posbility: 0.0024
Next Token : ascending, Posbility: 0.0039
Next Token : sort, Posbility: 0.0065
Next Token : list, Posbility: 0.0107
Next Token : sorted, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0586
Next Token : _, Posbility: 0.1240
Next Token :  l, Posbility: 0.1240
Next Token :  =, Posbility: 0.1592
Next Token :  , Posbility: 0.4336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : L, Posbility: 0.0437
Next Token : (, Posbility: 0.0562
Next Token : ls, Posbility: 0.0723
Next Token : lst, Posbility: 0.2520
Next Token : x, Posbility: 0.3652
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0012
Next Token :  i, Posbility: 0.0017
Next Token :  , Posbility: 0.0306
Next Token : s, Posbility: 0.2559
Next Token :  =, Posbility: 0.6953
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0028
Next Token :  !, Posbility: 0.0053
Next Token :  match, Posbility: 0.0344
Next Token :  , Posbility: 0.1367
Next Token : 
, Posbility: 0.7852
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0071
Next Token : 	, Posbility: 0.0103
Next Token :    , Posbility: 0.0193
Next Token :     , Posbility: 0.1260
Next Token :   , Posbility: 0.8203
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0216
Next Token : List, Posbility: 0.0315
Next Token : match, Posbility: 0.1807
Next Token : if, Posbility: 0.2314
Next Token : let, Posbility: 0.4336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  open, Posbility: 0.0251
Next Token :  sorted, Posbility: 0.0322
Next Token :  len, Posbility: 0.0366
Next Token :  , Posbility: 0.2383
Next Token :  rec, Posbility: 0.4453
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0496
Next Token :  check, Posbility: 0.0815
Next Token :  is, Posbility: 0.1523
Next Token :  loop, Posbility: 0.1523
Next Token :  , Posbility: 0.3223
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0210
Next Token : r, Posbility: 0.0391
Next Token : f, Posbility: 0.0938
Next Token : aux, Posbility: 0.1543
Next Token : helper, Posbility: 0.2256
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0320
Next Token :  acc, Posbility: 0.0596
Next Token :  =, Posbility: 0.1836
Next Token :  i, Posbility: 0.1836
Next Token :  , Posbility: 0.3887
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0194
Next Token : n, Posbility: 0.0249
Next Token : lst, Posbility: 0.0282
Next Token : (, Posbility: 0.0981
Next Token : x, Posbility: 0.6406
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0198
Next Token :  acc, Posbility: 0.0884
Next Token :  i, Posbility: 0.1875
Next Token :  , Posbility: 0.2402
Next Token :  =, Posbility: 0.3086
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  function, Posbility: 0.0035
Next Token :  match, Posbility: 0.0065
Next Token :  , Posbility: 0.0256
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0015
Next Token :    , Posbility: 0.0031
Next Token :       , Posbility: 0.0074
Next Token :   , Posbility: 0.0123
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0044
Next Token : (, Posbility: 0.0050
Next Token : let, Posbility: 0.0476
Next Token : match, Posbility: 0.3516
Next Token : if, Posbility: 0.5781
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0088
Next Token :  Not, Posbility: 0.0128
Next Token :  !, Posbility: 0.0393
Next Token :  not, Posbility: 0.1069
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0104
Next Token : Seq, Posbility: 0.0104
Next Token : (, Posbility: 0.0532
Next Token : List, Posbility: 0.3047
Next Token : x, Posbility: 0.5703
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0064
Next Token :  <=, Posbility: 0.0064
Next Token :  ==, Posbility: 0.0135
Next Token :  , Posbility: 0.1133
Next Token :  =, Posbility: 0.8359
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0039
Next Token :  [, Posbility: 0.0064
Next Token :  nil, Posbility: 0.0105
Next Token :  , Posbility: 0.0286
Next Token :  [], Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  or, Posbility: 0.0014
Next Token :  , Posbility: 0.0044
Next Token :  ||, Posbility: 0.0221
Next Token : 
, Posbility: 0.0284
Next Token :  then, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0131
Next Token :  True, Posbility: 0.0276
Next Token : 
, Posbility: 0.0967
Next Token :  , Posbility: 0.1240
Next Token :  true, Posbility: 0.7148
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0022
Next Token :  , Posbility: 0.0145
Next Token : ;, Posbility: 0.0211
Next Token :  else, Posbility: 0.1562
Next Token : 
, Posbility: 0.7930
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0008
Next Token :      , Posbility: 0.0015
Next Token :    , Posbility: 0.0085
Next Token :       , Posbility: 0.0096
Next Token :     , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : |, Posbility: 0.0001
Next Token : let, Posbility: 0.0006
Next Token : elif, Posbility: 0.0013
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0018
Next Token :  match, Posbility: 0.0044
Next Token :  {, Posbility: 0.0198
Next Token : 
, Posbility: 0.3105
Next Token :  , Posbility: 0.6562
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0176
Next Token : x, Posbility: 0.0200
Next Token : let, Posbility: 0.0330
Next Token : begin, Posbility: 0.0479
Next Token : if, Posbility: 0.8477
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0028
Next Token : 
, Posbility: 0.0036
Next Token :  !, Posbility: 0.0126
Next Token :  not, Posbility: 0.0728
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0089
Next Token : List, Posbility: 0.0188
Next Token : (, Posbility: 0.0579
Next Token : head, Posbility: 0.0654
Next Token : x, Posbility: 0.8008
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0030
Next Token : [0], Posbility: 0.0688
Next Token : ., Posbility: 0.1289
Next Token :  , Posbility: 0.1875
Next Token :  =, Posbility: 0.5781
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0037
Next Token :  [[, Posbility: 0.0089
Next Token :  [, Posbility: 0.1582
Next Token :  , Posbility: 0.3809
Next Token :  [], Posbility: 0.4297
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0060
Next Token :  , Posbility: 0.0186
Next Token : 
, Posbility: 0.0239
Next Token :  ||, Posbility: 0.1377
Next Token :  then, Posbility: 0.7891
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0038
Next Token :  true, Posbility: 0.0063
Next Token : 
, Posbility: 0.0172
Next Token :  , Posbility: 0.0283
Next Token :  false, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  [, Posbility: 0.0019
Next Token :  else, Posbility: 0.0045
Next Token :  , Posbility: 0.0075
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0012
Next Token :         , Posbility: 0.0042
Next Token :       , Posbility: 0.0048
Next Token :    , Posbility: 0.0747
Next Token :     , Posbility: 0.9141
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0003
Next Token : |, Posbility: 0.0006
Next Token : //, Posbility: 0.0008
Next Token : let, Posbility: 0.0013
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0018
Next Token :  match, Posbility: 0.0070
Next Token :  {, Posbility: 0.0115
Next Token : 
, Posbility: 0.2617
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0120
Next Token : (, Posbility: 0.0120
Next Token : x, Posbility: 0.0288
Next Token : let, Posbility: 0.0693
Next Token : if, Posbility: 0.8438
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Car, Posbility: 0.0029
Next Token :  String, Posbility: 0.0033
Next Token :  !, Posbility: 0.0080
Next Token :  not, Posbility: 0.0317
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0067
Next Token : List, Posbility: 0.0236
Next Token : head, Posbility: 0.0566
Next Token : (, Posbility: 0.0825
Next Token : x, Posbility: 0.7812
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0]., Posbility: 0.0051
Next Token : [0], Posbility: 0.1162
Next Token : ., Posbility: 0.1689
Next Token :  , Posbility: 0.2168
Next Token :  =, Posbility: 0.4590
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0031
Next Token :  [[, Posbility: 0.0031
Next Token :  [, Posbility: 0.2754
Next Token :  [], Posbility: 0.3535
Next Token :  , Posbility: 0.3535
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0156
Next Token : Cons, Posbility: 0.0200
Next Token : ref, Posbility: 0.0227
Next Token : (, Posbility: 0.0544
Next Token : x, Posbility: 0.7500
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0791
Next Token : ., Posbility: 0.1147
Next Token : [0, Posbility: 0.1147
Next Token : ', Posbility: 0.1670
Next Token :  , Posbility: 0.1670
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0562
Next Token : ::, Posbility: 0.0635
Next Token : x, Posbility: 0.0815
Next Token : [0], Posbility: 0.0815
Next Token : [0, Posbility: 0.3652
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0016
Next Token :  ..., Posbility: 0.0037
Next Token : :, Posbility: 0.0054
Next Token :  , Posbility: 0.4902
Next Token : ., Posbility: 0.4902
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  0], Posbility: 0.0000
Next Token :  1], Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : ], Posbility: 0.0012
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2], Posbility: 0.0403
Next Token :  1], Posbility: 0.1099
Next Token :  , Posbility: 0.1406
Next Token : ], Posbility: 0.2637
Next Token : 1], Posbility: 0.2988
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..1]
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0017
Next Token :  ||, Posbility: 0.0017
Next Token :  , Posbility: 0.0022
Next Token : 
, Posbility: 0.0028
Next Token :  then, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..] then
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..]

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..] 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..] ||
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0..] &&
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0386
Next Token : length, Posbility: 0.0386
Next Token : 2], Posbility: 0.0718
Next Token : x, Posbility: 0.2852
Next Token : (, Posbility: 0.4688
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0432
Next Token : length, Posbility: 0.0918
Next Token : Length, Posbility: 0.1338
Next Token : Array, Posbility: 0.2197
Next Token : List, Posbility: 0.4102
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : Length, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0008
Next Token : head, Posbility: 0.0008
Next Token : Length, Posbility: 0.0012
Next Token : tail, Posbility: 0.0022
Next Token : length, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0002
Next Token :  -1), Posbility: 0.0003
Next Token :  -1, Posbility: 0.0005
Next Token : (, Posbility: 0.0124
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0019
Next Token : (, Posbility: 0.0085
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1, Posbility: 0.0027
Next Token : ), Posbility: 0.0051
Next Token : -1), Posbility: 0.0066
Next Token :  -1), Posbility: 0.0108
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token : -2, Posbility: 0.0001
Next Token : /, Posbility: 0.0002
Next Token : −, Posbility: 0.0003
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  2), Posbility: 0.0005
Next Token :  , Posbility: 0.0024
Next Token :  1, Posbility: 0.0109
Next Token :  1), Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  |, Posbility: 0.0007
Next Token : ],, Posbility: 0.0010
Next Token :  , Posbility: 0.0075
Next Token : ], Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0019
Next Token :  , Posbility: 0.0024
Next Token :  &&, Posbility: 0.0027
Next Token : 
, Posbility: 0.0201
Next Token :  then, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0006
Next Token : 
, Posbility: 0.0820
Next Token :  false, Posbility: 0.0820
Next Token :  , Posbility: 0.2236
Next Token :  true, Posbility: 0.6094
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  --, Posbility: 0.0003
Next Token :   , Posbility: 0.0009
Next Token :  else, Posbility: 0.0022
Next Token :  , Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :         , Posbility: 0.0004
Next Token :    , Posbility: 0.0019
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0098
Next Token :  true, Posbility: 0.0112
Next Token :  false, Posbility: 0.0640
Next Token : 
, Posbility: 0.1196
Next Token :  , Posbility: 0.7812
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0195
Next Token : x, Posbility: 0.0195
Next Token : helper, Posbility: 0.0322
Next Token : let, Posbility: 0.0530
Next Token : if, Posbility: 0.8281
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0018
Next Token : 
, Posbility: 0.0043
Next Token :  !, Posbility: 0.0081
Next Token :  not, Posbility: 0.0408
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0019
Next Token : head, Posbility: 0.0057
Next Token : (, Posbility: 0.0544
Next Token : List, Posbility: 0.0698
Next Token : x, Posbility: 0.8516
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0033
Next Token :  [, Posbility: 0.0038
Next Token : ., Posbility: 0.0170
Next Token :  , Posbility: 0.1416
Next Token :  =, Posbility: 0.8164
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0014
Next Token : 
, Posbility: 0.0020
Next Token :  [], Posbility: 0.0347
Next Token :  [, Posbility: 0.0574
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0009
Next Token : [0, Posbility: 0.0049
Next Token : List, Posbility: 0.0104
Next Token : (, Posbility: 0.0364
Next Token : x, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0015
Next Token :  [], Posbility: 0.0022
Next Token :  0, Posbility: 0.0033
Next Token :  [, Posbility: 0.1777
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0];, Posbility: 0.0007
Next Token : [1:, Posbility: 0.0011
Next Token : [0], Posbility: 0.0050
Next Token : (, Posbility: 0.0327
Next Token : [0, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token : :, Posbility: 0.0002
Next Token : ..., Posbility: 0.0006
Next Token :  , Posbility: 0.0059
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0018
Next Token : ], Posbility: 0.0021
Next Token :  0], Posbility: 0.0057
Next Token :  1], Posbility: 0.0289
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0002
Next Token : 2], Posbility: 0.0015
Next Token : x, Posbility: 0.0051
Next Token : List, Posbility: 0.0178
Next Token : (, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : length, Posbility: 0.0002
Next Token : x, Posbility: 0.0015
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0001
Next Token : index, Posbility: 0.0001
Next Token : head, Posbility: 0.0003
Next Token : tail, Posbility: 0.0005
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : -, Posbility: 0.0003
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0004
Next Token : )], Posbility: 0.0006
Next Token :  -1), Posbility: 0.0022
Next Token :  +, Posbility: 0.0025
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token : +1), Posbility: 0.0001
Next Token : /, Posbility: 0.0002
Next Token : -2, Posbility: 0.0003
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0003
Next Token :  2), Posbility: 0.0009
Next Token :  , Posbility: 0.0066
Next Token :  1, Posbility: 0.0066
Next Token :  1), Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0031
Next Token : ][, Posbility: 0.0031
Next Token : ],, Posbility: 0.0040
Next Token :  , Posbility: 0.0108
Next Token : ], Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0019
Next Token :  ||, Posbility: 0.0031
Next Token : 
, Posbility: 0.0065
Next Token :  &&, Posbility: 0.0200
Next Token :  then, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0047
Next Token : 
, Posbility: 0.0165
Next Token :  true, Posbility: 0.0272
Next Token :  , Posbility: 0.0449
Next Token :  false, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0009
Next Token :  then, Posbility: 0.0019
Next Token :  , Posbility: 0.0024
Next Token :  in, Posbility: 0.0075
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0006
Next Token :         , Posbility: 0.0008
Next Token :   , Posbility: 0.0033
Next Token :    , Posbility: 0.2012
Next Token :     , Posbility: 0.7930
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token : //, Posbility: 0.0015
Next Token : |, Posbility: 0.0019
Next Token : let, Posbility: 0.0059
Next Token : else, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0037
Next Token :  {, Posbility: 0.0069
Next Token :  true, Posbility: 0.0129
Next Token : 
, Posbility: 0.2598
Next Token :  , Posbility: 0.7031
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0371
Next Token : x, Posbility: 0.0371
Next Token : let, Posbility: 0.1006
Next Token : helper, Posbility: 0.1660
Next Token : if, Posbility: 0.5820
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0030
Next Token :  !, Posbility: 0.0039
Next Token : 
, Posbility: 0.0050
Next Token :  not, Posbility: 0.0253
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0027
Next Token : head, Posbility: 0.0065
Next Token : (, Posbility: 0.0898
Next Token : List, Posbility: 0.1309
Next Token : x, Posbility: 0.7539
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0036
Next Token : [0], Posbility: 0.0052
Next Token : ., Posbility: 0.0162
Next Token :  , Posbility: 0.1738
Next Token :  =, Posbility: 0.7812
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0017
Next Token : 
, Posbility: 0.0040
Next Token :  [], Posbility: 0.0432
Next Token :  [, Posbility: 0.0713
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0022
Next Token : [0, Posbility: 0.0059
Next Token : List, Posbility: 0.0435
Next Token : (, Posbility: 0.0559
Next Token : x, Posbility: 0.8750
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0044
Next Token :  [], Posbility: 0.0050
Next Token :  0, Posbility: 0.0072
Next Token :  [, Posbility: 0.2109
Next Token :  , Posbility: 0.7383
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [1], Posbility: 0.0025
Next Token : [1:, Posbility: 0.0025
Next Token : [0], Posbility: 0.0270
Next Token : (, Posbility: 0.0571
Next Token : [0, Posbility: 0.8945
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0002
Next Token : :, Posbility: 0.0005
Next Token : ..., Posbility: 0.0011
Next Token :  , Posbility: 0.0330
Next Token : ., Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0028
Next Token :  ((, Posbility: 0.0053
Next Token :  0], Posbility: 0.0237
Next Token :  1], Posbility: 0.0728
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0005
Next Token : 2], Posbility: 0.0050
Next Token : x, Posbility: 0.0093
Next Token : List, Posbility: 0.0255
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : length, Posbility: 0.0004
Next Token : Int, Posbility: 0.0004
Next Token : x, Posbility: 0.0041
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0001
Next Token : index, Posbility: 0.0002
Next Token : head, Posbility: 0.0010
Next Token : tail, Posbility: 0.0017
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : -, Posbility: 0.0005
Next Token : (, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0005
Next Token : )], Posbility: 0.0009
Next Token :  +, Posbility: 0.0019
Next Token :  -1), Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : /, Posbility: 0.0006
Next Token : -2, Posbility: 0.0007
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0009
Next Token :  1, Posbility: 0.0063
Next Token :  2), Posbility: 0.0063
Next Token :  , Posbility: 0.0466
Next Token :  1), Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0018
Next Token : ],, Posbility: 0.0050
Next Token : ][, Posbility: 0.0064
Next Token :  , Posbility: 0.0225
Next Token : ], Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0043
Next Token :  ||, Posbility: 0.0043
Next Token : 
, Posbility: 0.0080
Next Token :  &&, Posbility: 0.0520
Next Token :  then, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0178
Next Token : 
, Posbility: 0.1494
Next Token :  true, Posbility: 0.2461
Next Token :  false, Posbility: 0.2461
Next Token :  , Posbility: 0.3164
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0413
Next Token : let, Posbility: 0.0413
Next Token : 
, Posbility: 0.0679
Next Token : (, Posbility: 0.0874
Next Token : helper, Posbility: 0.6445
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0038
Next Token :  ((, Posbility: 0.0104
Next Token : (, Posbility: 0.0133
Next Token :  [, Posbility: 0.0282
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0, Posbility: 0.0020
Next Token : ([, Posbility: 0.0033
Next Token : List, Posbility: 0.0146
Next Token : x, Posbility: 0.1777
Next Token : (, Posbility: 0.7969
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0010
Next Token : Array, Posbility: 0.0025
Next Token : tail, Posbility: 0.0028
Next Token : x, Posbility: 0.2871
Next Token : List, Posbility: 0.6914
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hd, Posbility: 0.0302
Next Token : drop, Posbility: 0.0386
Next Token : init, Posbility: 0.0635
Next Token : rev, Posbility: 0.2520
Next Token : tail, Posbility: 0.4160
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0003
Next Token : _, Posbility: 0.0010
Next Token : (, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : lst, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0085
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0003
Next Token : ),, Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token : );, Posbility: 0.0067
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0081
Next Token :  else, Posbility: 0.0172
Next Token :  &&, Posbility: 0.0172
Next Token :  in, Posbility: 0.0991
Next Token : 
, Posbility: 0.8320
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0017
Next Token :       , Posbility: 0.0019
Next Token :    , Posbility: 0.1060
Next Token :   , Posbility: 0.1060
Next Token :     , Posbility: 0.7812
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : [, Posbility: 0.0003
Next Token : let, Posbility: 0.0005
Next Token : |, Posbility: 0.0041
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0026
Next Token : 
, Posbility: 0.0461
Next Token :  true, Posbility: 0.0522
Next Token :  false, Posbility: 0.1611
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0178
Next Token : (, Posbility: 0.0228
Next Token : let, Posbility: 0.0703
Next Token : helper, Posbility: 0.0796
Next Token : if, Posbility: 0.7539
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0019
Next Token : 
, Posbility: 0.0039
Next Token :  !, Posbility: 0.0045
Next Token :  not, Posbility: 0.0176
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0013
Next Token : head, Posbility: 0.0050
Next Token : (, Posbility: 0.0537
Next Token : List, Posbility: 0.0884
Next Token : x, Posbility: 0.8398
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0028
Next Token : [0], Posbility: 0.0046
Next Token : ., Posbility: 0.0142
Next Token :  , Posbility: 0.0820
Next Token :  =, Posbility: 0.8789
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0006
Next Token : 
, Posbility: 0.0017
Next Token :  [, Posbility: 0.0337
Next Token :  [], Posbility: 0.0913
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0014
Next Token : [0, Posbility: 0.0037
Next Token : (, Posbility: 0.0352
Next Token : List, Posbility: 0.0449
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0021
Next Token :  0, Posbility: 0.0056
Next Token :  [], Posbility: 0.0064
Next Token :  [, Posbility: 0.1279
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [1], Posbility: 0.0010
Next Token : [1:, Posbility: 0.0019
Next Token : [0], Posbility: 0.0095
Next Token : (, Posbility: 0.0138
Next Token : [0, Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token : :, Posbility: 0.0003
Next Token : ..., Posbility: 0.0006
Next Token :  , Posbility: 0.0067
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0008
Next Token :  ((, Posbility: 0.0016
Next Token :  0], Posbility: 0.0133
Next Token :  1], Posbility: 0.0466
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3], Posbility: 0.0002
Next Token : x, Posbility: 0.0022
Next Token : 2], Posbility: 0.0028
Next Token : List, Posbility: 0.0096
Next Token : (, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token : x, Posbility: 0.0006
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : index, Posbility: 0.0001
Next Token : head, Posbility: 0.0007
Next Token : tail, Posbility: 0.0009
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : -, Posbility: 0.0004
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0003
Next Token : )], Posbility: 0.0005
Next Token :  +, Posbility: 0.0010
Next Token :  -1), Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -2, Posbility: 0.0003
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0009
Next Token :  1, Posbility: 0.0063
Next Token :  2), Posbility: 0.0063
Next Token :  , Posbility: 0.0466
Next Token :  1), Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ],, Posbility: 0.0007
Next Token : ][, Posbility: 0.0019
Next Token :  +, Posbility: 0.0035
Next Token :  , Posbility: 0.0109
Next Token : ], Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0008
Next Token : 
, Posbility: 0.0012
Next Token :  ||, Posbility: 0.0013
Next Token :  &&, Posbility: 0.0124
Next Token :  then, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0050
Next Token : 
, Posbility: 0.0083
Next Token :  true, Posbility: 0.0615
Next Token :  false, Posbility: 0.1670
Next Token :  , Posbility: 0.7500
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0039
Next Token : return, Posbility: 0.0050
Next Token : (, Posbility: 0.0082
Next Token : if, Posbility: 0.0135
Next Token : helper, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token :  [, Posbility: 0.0012
Next Token : (, Posbility: 0.0013
Next Token :  ((, Posbility: 0.0075
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0003
Next Token : ([, Posbility: 0.0010
Next Token : List, Posbility: 0.0136
Next Token : x, Posbility: 0.0288
Next Token : (, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Array, Posbility: 0.0004
Next Token : head, Posbility: 0.0006
Next Token : tail, Posbility: 0.0007
Next Token : x, Posbility: 0.0327
Next Token : List, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : drop, Posbility: 0.0156
Next Token : rev, Posbility: 0.0156
Next Token : head, Posbility: 0.1157
Next Token : init, Posbility: 0.2451
Next Token : tail, Posbility: 0.5195
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : 2, Posbility: 0.0008
Next Token :  ~, Posbility: 0.0010
Next Token : _, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0002
Next Token : List, Posbility: 0.0159
Next Token : (, Posbility: 0.1172
Next Token : x, Posbility: 0.8672
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ),, Posbility: 0.0005
Next Token :  +, Posbility: 0.0006
Next Token : );, Posbility: 0.0015
Next Token :  , Posbility: 0.0140
Next Token : ), Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0063
Next Token : 

, Posbility: 0.0092
Next Token :  &&, Posbility: 0.0092
Next Token :  else, Posbility: 0.0172
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0004
Next Token :         , Posbility: 0.0007
Next Token :    , Posbility: 0.0220
Next Token :   , Posbility: 0.0410
Next Token :     , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : [, Posbility: 0.0006
Next Token : let, Posbility: 0.0008
Next Token : |, Posbility: 0.0124
Next Token : else, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0036
Next Token : 
, Posbility: 0.0432
Next Token :  true, Posbility: 0.0630
Next Token :  false, Posbility: 0.1943
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0186
Next Token : (, Posbility: 0.0210
Next Token : let, Posbility: 0.0505
Next Token : helper, Posbility: 0.0649
Next Token : if, Posbility: 0.7891
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0016
Next Token : 
, Posbility: 0.0021
Next Token :  !, Posbility: 0.0024
Next Token :  not, Posbility: 0.0177
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0009
Next Token : head, Posbility: 0.0036
Next Token : (, Posbility: 0.0432
Next Token : List, Posbility: 0.0713
Next Token : x, Posbility: 0.8711
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0020
Next Token : [0], Posbility: 0.0026
Next Token : ., Posbility: 0.0071
Next Token :  , Posbility: 0.0464
Next Token :  =, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0008
Next Token : 
, Posbility: 0.0013
Next Token :  [, Posbility: 0.0264
Next Token :  [], Posbility: 0.0923
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0009
Next Token : [0, Posbility: 0.0023
Next Token : (, Posbility: 0.0221
Next Token : List, Posbility: 0.0283
Next Token : x, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0011
Next Token :  0, Posbility: 0.0042
Next Token :  [], Posbility: 0.0061
Next Token :  [, Posbility: 0.0659
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [1], Posbility: 0.0005
Next Token : [1:, Posbility: 0.0017
Next Token : (, Posbility: 0.0045
Next Token : [0], Posbility: 0.0059
Next Token : [0, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token : :, Posbility: 0.0002
Next Token : ..., Posbility: 0.0005
Next Token :  , Posbility: 0.0028
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0005
Next Token :  ((, Posbility: 0.0009
Next Token :  0], Posbility: 0.0136
Next Token :  1], Posbility: 0.0288
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3], Posbility: 0.0002
Next Token : x, Posbility: 0.0022
Next Token : 2], Posbility: 0.0022
Next Token : List, Posbility: 0.0067
Next Token : (, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : x, Posbility: 0.0005
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : head, Posbility: 0.0003
Next Token : tail, Posbility: 0.0005
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : -, Posbility: 0.0005
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0002
Next Token : )], Posbility: 0.0006
Next Token :  +, Posbility: 0.0009
Next Token :  -1), Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -2, Posbility: 0.0002
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0009
Next Token :  2), Posbility: 0.0024
Next Token :  1, Posbility: 0.0066
Next Token :  , Posbility: 0.0178
Next Token :  1), Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0002
Next Token : ][, Posbility: 0.0010
Next Token :  +, Posbility: 0.0022
Next Token :  , Posbility: 0.0052
Next Token : ], Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0004
Next Token :  ||, Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token :  &&, Posbility: 0.0041
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0021
Next Token : 
, Posbility: 0.0057
Next Token :  true, Posbility: 0.0698
Next Token :  false, Posbility: 0.0698
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0019
Next Token : x, Posbility: 0.0024
Next Token : (, Posbility: 0.0031
Next Token : if, Posbility: 0.0051
Next Token : helper, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token :  [, Posbility: 0.0006
Next Token : (, Posbility: 0.0007
Next Token :  ((, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0002
Next Token : ([, Posbility: 0.0004
Next Token : List, Posbility: 0.0050
Next Token : x, Posbility: 0.0371
Next Token : (, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : head, Posbility: 0.0003
Next Token : tail, Posbility: 0.0004
Next Token : x, Posbility: 0.0203
Next Token : List, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : drop, Posbility: 0.0022
Next Token : rest, Posbility: 0.0022
Next Token : init, Posbility: 0.0162
Next Token : head, Posbility: 0.0728
Next Token : tail, Posbility: 0.8828
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0005
Next Token : (, Posbility: 0.0067
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token : );, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0017
Next Token :  else, Posbility: 0.0040
Next Token : 

, Posbility: 0.0058
Next Token :  in, Posbility: 0.0058
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :    , Posbility: 0.0194
Next Token :   , Posbility: 0.0464
Next Token :     , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : //, Posbility: 0.0004
Next Token : let, Posbility: 0.0005
Next Token : |, Posbility: 0.0028
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0024
Next Token : 
, Posbility: 0.0203
Next Token :  true, Posbility: 0.0549
Next Token :  false, Posbility: 0.1494
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0068
Next Token : (, Posbility: 0.0112
Next Token : let, Posbility: 0.0237
Next Token : helper, Posbility: 0.0391
Next Token : if, Posbility: 0.8867
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token :  !, Posbility: 0.0013
Next Token :  not, Posbility: 0.0096
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0005
Next Token : head, Posbility: 0.0018
Next Token : (, Posbility: 0.0172
Next Token : List, Posbility: 0.0364
Next Token : x, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0], Posbility: 0.0009
Next Token :  ==, Posbility: 0.0015
Next Token : ., Posbility: 0.0017
Next Token :  , Posbility: 0.0201
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token : 
, Posbility: 0.0007
Next Token :  [, Posbility: 0.0168
Next Token :  [], Posbility: 0.0588
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0003
Next Token : [0, Posbility: 0.0011
Next Token : (, Posbility: 0.0095
Next Token : List, Posbility: 0.0139
Next Token : x, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0008
Next Token :  0, Posbility: 0.0018
Next Token :  [], Posbility: 0.0044
Next Token :  [, Posbility: 0.0289
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0002
Next Token : [1:, Posbility: 0.0010
Next Token : (, Posbility: 0.0013
Next Token : [0], Posbility: 0.0022
Next Token : [0, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : :, Posbility: 0.0001
Next Token : ..., Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token :  0], Posbility: 0.0052
Next Token :  1], Posbility: 0.0109
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0001
Next Token : x, Posbility: 0.0008
Next Token : 2], Posbility: 0.0008
Next Token : List, Posbility: 0.0028
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : Int, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : head, Posbility: 0.0001
Next Token : tail, Posbility: 0.0002
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : -, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0001
Next Token : )], Posbility: 0.0003
Next Token :  +, Posbility: 0.0004
Next Token :  -1), Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -2, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  2), Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0001
Next Token : ][, Posbility: 0.0003
Next Token :  +, Posbility: 0.0012
Next Token :  , Posbility: 0.0019
Next Token : ], Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0006
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0009
Next Token : 
, Posbility: 0.0014
Next Token :  true, Posbility: 0.0283
Next Token :  false, Posbility: 0.0283
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0009
Next Token : x, Posbility: 0.0012
Next Token : (, Posbility: 0.0019
Next Token : if, Posbility: 0.0025
Next Token : helper, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0001
Next Token : ([, Posbility: 0.0001
Next Token : List, Posbility: 0.0013
Next Token : x, Posbility: 0.0140
Next Token : (, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : head, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : tail, Posbility: 0.0002
Next Token : x, Posbility: 0.0076
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : drop, Posbility: 0.0003
Next Token : rest, Posbility: 0.0005
Next Token : init, Posbility: 0.0015
Next Token : head, Posbility: 0.0178
Next Token : tail, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : )), Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : );, Posbility: 0.0002
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0010
Next Token :  else, Posbility: 0.0017
Next Token : 

, Posbility: 0.0066
Next Token :  in, Posbility: 0.0075
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :    , Posbility: 0.0273
Next Token :   , Posbility: 0.0654
Next Token :     , Posbility: 0.9062
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : //, Posbility: 0.0004
Next Token : let, Posbility: 0.0005
Next Token : |, Posbility: 0.0017
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0025
Next Token : 
, Posbility: 0.0146
Next Token :  true, Posbility: 0.0510
Next Token :  false, Posbility: 0.1226
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0037
Next Token : (, Posbility: 0.0079
Next Token : let, Posbility: 0.0102
Next Token : helper, Posbility: 0.0354
Next Token : if, Posbility: 0.9180
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  !, Posbility: 0.0008
Next Token :  not, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0003
Next Token : head, Posbility: 0.0009
Next Token : (, Posbility: 0.0107
Next Token : List, Posbility: 0.0200
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0], Posbility: 0.0005
Next Token : ., Posbility: 0.0006
Next Token :  ==, Posbility: 0.0012
Next Token :  , Posbility: 0.0124
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  [, Posbility: 0.0103
Next Token :  [], Posbility: 0.0593
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0001
Next Token : [0, Posbility: 0.0005
Next Token : (, Posbility: 0.0046
Next Token : List, Posbility: 0.0067
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0006
Next Token :  0, Posbility: 0.0015
Next Token :  [], Posbility: 0.0040
Next Token :  [, Posbility: 0.0178
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : [1:, Posbility: 0.0006
Next Token : [0], Posbility: 0.0010
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0002
Next Token :  ((, Posbility: 0.0002
Next Token :  0], Posbility: 0.0031
Next Token :  1], Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3], Posbility: 0.0000
Next Token : x, Posbility: 0.0004
Next Token : 2], Posbility: 0.0004
Next Token : List, Posbility: 0.0017
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : Int, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : -, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0001
Next Token : )], Posbility: 0.0002
Next Token :  +, Posbility: 0.0003
Next Token :  -1), Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  2), Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0000
Next Token : ][, Posbility: 0.0001
Next Token :  +, Posbility: 0.0006
Next Token :  , Posbility: 0.0009
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0002
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0007
Next Token : 
, Posbility: 0.0011
Next Token :  false, Posbility: 0.0176
Next Token :  true, Posbility: 0.0225
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0007
Next Token : x, Posbility: 0.0009
Next Token : (, Posbility: 0.0012
Next Token : if, Posbility: 0.0015
Next Token : helper, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : ([, Posbility: 0.0000
Next Token : List, Posbility: 0.0005
Next Token : x, Posbility: 0.0076
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : tail, Posbility: 0.0001
Next Token : x, Posbility: 0.0032
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : take, Posbility: 0.0003
Next Token : rest, Posbility: 0.0003
Next Token : init, Posbility: 0.0005
Next Token : head, Posbility: 0.0109
Next Token : tail, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0005
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : )), Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :  else, Posbility: 0.0010
Next Token :  in, Posbility: 0.0052
Next Token : 

, Posbility: 0.0066
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0001
Next Token :    , Posbility: 0.0151
Next Token :   , Posbility: 0.0466
Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token : //, Posbility: 0.0004
Next Token : let, Posbility: 0.0006
Next Token : |, Posbility: 0.0015
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0026
Next Token : 
, Posbility: 0.0116
Next Token :  true, Posbility: 0.0520
Next Token :  false, Posbility: 0.1099
Next Token :  , Posbility: 0.8125
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0030
Next Token : (, Posbility: 0.0063
Next Token : let, Posbility: 0.0081
Next Token : helper, Posbility: 0.0282
Next Token : if, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  !, Posbility: 0.0004
Next Token :  not, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token : head, Posbility: 0.0004
Next Token : (, Posbility: 0.0058
Next Token : List, Posbility: 0.0096
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0003
Next Token :  !=, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0008
Next Token :  , Posbility: 0.0067
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0050
Next Token :  [], Posbility: 0.0471
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0001
Next Token : [0, Posbility: 0.0003
Next Token : (, Posbility: 0.0028
Next Token : List, Posbility: 0.0041
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token :  0, Posbility: 0.0007
Next Token :  [], Posbility: 0.0028
Next Token :  [, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : [1:, Posbility: 0.0004
Next Token : [0], Posbility: 0.0006
Next Token : [0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  0], Posbility: 0.0017
Next Token :  1], Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : 2], Posbility: 0.0002
Next Token : List, Posbility: 0.0008
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1, Posbility: 0.0001
Next Token : )], Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  -1), Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  2), Posbility: 0.0006
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0000
Next Token : ][, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0004
Next Token : 
, Posbility: 0.0007
Next Token :  false, Posbility: 0.0108
Next Token :  true, Posbility: 0.0139
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : return, Posbility: 0.0004
Next Token : (, Posbility: 0.0006
Next Token : if, Posbility: 0.0006
Next Token : helper, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0000
Next Token : ([, Posbility: 0.0000
Next Token : List, Posbility: 0.0003
Next Token : x, Posbility: 0.0046
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : x, Posbility: 0.0022
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : take, Posbility: 0.0001
Next Token : init, Posbility: 0.0002
Next Token : rest, Posbility: 0.0002
Next Token : head, Posbility: 0.0052
Next Token : tail, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )], Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0006
Next Token :  else, Posbility: 0.0009
Next Token :  in, Posbility: 0.0046
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token : else, Posbility: 0.0001
Next Token :    , Posbility: 0.0150
Next Token :   , Posbility: 0.0591
Next Token :     , Posbility: 0.9258
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : //, Posbility: 0.0004
Next Token : let, Posbility: 0.0004
Next Token : |, Posbility: 0.0010
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0019
Next Token : 
, Posbility: 0.0074
Next Token :  true, Posbility: 0.0422
Next Token :  false, Posbility: 0.0894
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0030
Next Token : let, Posbility: 0.0044
Next Token : (, Posbility: 0.0050
Next Token : helper, Posbility: 0.0253
Next Token : if, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  !, Posbility: 0.0003
Next Token :  not, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : head, Posbility: 0.0003
Next Token : (, Posbility: 0.0046
Next Token : List, Posbility: 0.0075
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0002
Next Token :  !=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0005
Next Token :  , Posbility: 0.0046
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  [, Posbility: 0.0039
Next Token :  [], Posbility: 0.0371
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : [0, Posbility: 0.0002
Next Token : (, Posbility: 0.0017
Next Token : List, Posbility: 0.0028
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :  0, Posbility: 0.0005
Next Token :  [], Posbility: 0.0025
Next Token :  [, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : [0], Posbility: 0.0003
Next Token : [1:, Posbility: 0.0003
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ..., Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  0], Posbility: 0.0012
Next Token :  1], Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : 2], Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : List, Posbility: 0.0006
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1, Posbility: 0.0000
Next Token : )], Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  -1), Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1)), Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  2), Posbility: 0.0004
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ]., Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  false, Posbility: 0.0066
Next Token :  true, Posbility: 0.0109
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : return, Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token : if, Posbility: 0.0005
Next Token : helper, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : List, Posbility: 0.0002
Next Token : x, Posbility: 0.0032
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : x, Posbility: 0.0012
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : take, Posbility: 0.0001
Next Token : init, Posbility: 0.0001
Next Token : rest, Posbility: 0.0002
Next Token : head, Posbility: 0.0041
Next Token : tail, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )], Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0005
Next Token :  else, Posbility: 0.0006
Next Token :  in, Posbility: 0.0031
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0134
Next Token :   , Posbility: 0.0469
Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : //, Posbility: 0.0003
Next Token : let, Posbility: 0.0005
Next Token : |, Posbility: 0.0009
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0015
Next Token : 
, Posbility: 0.0067
Next Token :  true, Posbility: 0.0383
Next Token :  false, Posbility: 0.0718
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0030
Next Token : let, Posbility: 0.0039
Next Token : (, Posbility: 0.0044
Next Token : helper, Posbility: 0.0254
Next Token : if, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  !, Posbility: 0.0002
Next Token :  not, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : head, Posbility: 0.0002
Next Token : (, Posbility: 0.0028
Next Token : List, Posbility: 0.0046
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :  !=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0004
Next Token :  , Posbility: 0.0028
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0024
Next Token :  [], Posbility: 0.0292
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : [0, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : List, Posbility: 0.0022
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  0, Posbility: 0.0003
Next Token :  [], Posbility: 0.0015
Next Token :  [, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : [0], Posbility: 0.0002
Next Token : [1:, Posbility: 0.0002
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  0], Posbility: 0.0008
Next Token :  1], Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : 2], Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : List, Posbility: 0.0004
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : )], Posbility: 0.0001
Next Token :  -1), Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  1)), Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  2), Posbility: 0.0003
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  false, Posbility: 0.0052
Next Token :  true, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : return, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : if, Posbility: 0.0004
Next Token : helper, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : x, Posbility: 0.0022
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : x, Posbility: 0.0007
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : init, Posbility: 0.0000
Next Token : take, Posbility: 0.0001
Next Token : rest, Posbility: 0.0001
Next Token : head, Posbility: 0.0025
Next Token : tail, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )], Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0005
Next Token :  then, Posbility: 0.0006
Next Token : 

, Posbility: 0.0032
Next Token :  in, Posbility: 0.0032
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0118
Next Token :   , Posbility: 0.0527
Next Token :     , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : //, Posbility: 0.0003
Next Token : let, Posbility: 0.0004
Next Token : |, Posbility: 0.0007
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0012
Next Token : 
, Posbility: 0.0059
Next Token :  true, Posbility: 0.0435
Next Token :  false, Posbility: 0.0713
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0021
Next Token : let, Posbility: 0.0024
Next Token : (, Posbility: 0.0039
Next Token : helper, Posbility: 0.0200
Next Token : if, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  !, Posbility: 0.0002
Next Token :  not, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : head, Posbility: 0.0001
Next Token : (, Posbility: 0.0025
Next Token : List, Posbility: 0.0046
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :  !=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0025
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0019
Next Token :  [], Posbility: 0.0229
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : [0, Posbility: 0.0001
Next Token : (, Posbility: 0.0012
Next Token : List, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  0, Posbility: 0.0003
Next Token :  [], Posbility: 0.0013
Next Token :  [, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : [0], Posbility: 0.0002
Next Token : [1:, Posbility: 0.0002
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  0], Posbility: 0.0007
Next Token :  1], Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : 2], Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : )], Posbility: 0.0001
Next Token :  -1), Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  1)), Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  2), Posbility: 0.0003
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  false, Posbility: 0.0041
Next Token :  true, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : return, Posbility: 0.0003
Next Token : if, Posbility: 0.0004
Next Token : (, Posbility: 0.0005
Next Token : helper, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : x, Posbility: 0.0017
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : x, Posbility: 0.0006
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : init, Posbility: 0.0000
Next Token : take, Posbility: 0.0000
Next Token : rest, Posbility: 0.0001
Next Token : head, Posbility: 0.0022
Next Token : tail, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )], Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0006
Next Token :  in, Posbility: 0.0025
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0118
Next Token :   , Posbility: 0.0527
Next Token :     , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : //, Posbility: 0.0003
Next Token : |, Posbility: 0.0006
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0008
Next Token : 
, Posbility: 0.0047
Next Token :  true, Posbility: 0.0308
Next Token :  false, Posbility: 0.0576
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0019
Next Token : return, Posbility: 0.0027
Next Token : (, Posbility: 0.0039
Next Token : helper, Posbility: 0.0177
Next Token : if, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  not, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : head, Posbility: 0.0001
Next Token : (, Posbility: 0.0019
Next Token : List, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0017
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0019
Next Token :  [], Posbility: 0.0229
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : [0, Posbility: 0.0001
Next Token : (, Posbility: 0.0012
Next Token : List, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  [], Posbility: 0.0009
Next Token :  [, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : [0], Posbility: 0.0001
Next Token : [1:, Posbility: 0.0001
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token :  0], Posbility: 0.0007
Next Token :  1], Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 2], Posbility: 0.0000
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : )], Posbility: 0.0001
Next Token :  -1), Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : -1), Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  1)), Posbility: 0.0001
Next Token :  2), Posbility: 0.0002
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  false, Posbility: 0.0040
Next Token :  true, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : return, Posbility: 0.0002
Next Token : if, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : helper, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : x, Posbility: 0.0017
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : init, Posbility: 0.0000
Next Token : take, Posbility: 0.0000
Next Token : rest, Posbility: 0.0001
Next Token : head, Posbility: 0.0019
Next Token : tail, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0004
Next Token :  then, Posbility: 0.0005
Next Token :  in, Posbility: 0.0019
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0082
Next Token :   , Posbility: 0.0371
Next Token :     , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token : |, Posbility: 0.0005
Next Token : let, Posbility: 0.0005
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fail, Posbility: 0.0009
Next Token : 
, Posbility: 0.0053
Next Token :  true, Posbility: 0.0347
Next Token :  false, Posbility: 0.0574
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0013
Next Token : return, Posbility: 0.0019
Next Token : (, Posbility: 0.0031
Next Token : helper, Posbility: 0.0123
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : head, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : List, Posbility: 0.0025
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0012
Next Token :  [], Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : [0, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : List, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  [], Posbility: 0.0006
Next Token :  [, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [%, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : [0], Posbility: 0.0001
Next Token : [1:, Posbility: 0.0001
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : ], Posbility: 0.0001
Next Token :  0], Posbility: 0.0005
Next Token :  1], Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : 2], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : List, Posbility: 0.0002
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : LENGTH, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : )], Posbility: 0.0001
Next Token :  -1), Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : -1), Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  1)), Posbility: 0.0001
Next Token :  2), Posbility: 0.0002
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  false, Posbility: 0.0032
Next Token :  true, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : return, Posbility: 0.0002
Next Token : if, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : helper, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : x, Posbility: 0.0009
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : take, Posbility: 0.0000
Next Token : rest, Posbility: 0.0001
Next Token : head, Posbility: 0.0012
Next Token : tail, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )], Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0004
Next Token :  in, Posbility: 0.0013
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0093
Next Token :   , Posbility: 0.0417
Next Token :     , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : //, Posbility: 0.0002
Next Token : |, Posbility: 0.0004
Next Token : let, Posbility: 0.0005
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: noerr
---------------------------
Next Token :  fail, Posbility: 0.0007
Next Token : 
, Posbility: 0.0042
Next Token :  true, Posbility: 0.0277
Next Token :  false, Posbility: 0.0457
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0010
Next Token : return, Posbility: 0.0015
Next Token : (, Posbility: 0.0027
Next Token : helper, Posbility: 0.0109
Next Token : if, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  not, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : (, Posbility: 0.0012
Next Token : List, Posbility: 0.0019
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: noerr
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0011
Next Token :  [], Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : [0, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : List, Posbility: 0.0009
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  [], Posbility: 0.0006
Next Token :  [, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: noerr
---------------------------
Next Token : [%, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : [0], Posbility: 0.0001
Next Token : [1:, Posbility: 0.0001
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: noerr
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token :  0], Posbility: 0.0004
Next Token :  1], Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: noerr
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : 2], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: noerr
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: noerr
---------------------------
Next Token : LENGTH, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: noerr
---------------------------
Next Token : -1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: noerr
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token :  -1), Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: noerr
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1)), Posbility: 0.0001
Next Token :  2), Posbility: 0.0001
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: noerr
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: noerr
---------------------------
Next Token :  not, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  false, Posbility: 0.0025
Next Token :  true, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : return, Posbility: 0.0001
Next Token : if, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : helper, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: noerr
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : x, Posbility: 0.0008
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: noerr
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : take, Posbility: 0.0000
Next Token : rest, Posbility: 0.0001
Next Token : head, Posbility: 0.0010
Next Token : tail, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: noerr
---------------------------
Next Token : )], Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0003
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: noerr
---------------------------
Next Token :  else, Posbility: 0.0003
Next Token :  then, Posbility: 0.0005
Next Token :  in, Posbility: 0.0013
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0073
Next Token :   , Posbility: 0.0371
Next Token :     , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : |, Posbility: 0.0003
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: noerr
---------------------------
Next Token :  fail, Posbility: 0.0007
Next Token : 
, Posbility: 0.0034
Next Token :  true, Posbility: 0.0220
Next Token :  false, Posbility: 0.0361
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0011
Next Token : return, Posbility: 0.0017
Next Token : (, Posbility: 0.0031
Next Token : helper, Posbility: 0.0123
Next Token : if, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  !, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  not, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : (, Posbility: 0.0010
Next Token : List, Posbility: 0.0015
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: noerr
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0009
Next Token :  [], Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : []), Posbility: 0.0000
Next Token : [0, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : List, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  [], Posbility: 0.0006
Next Token :  [, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: noerr
---------------------------
Next Token : [%, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [0], Posbility: 0.0000
Next Token : [1:, Posbility: 0.0001
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: noerr
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: noerr
---------------------------
Next Token : ], Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  0], Posbility: 0.0003
Next Token :  1], Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: noerr
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : 2], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: noerr
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: noerr
---------------------------
Next Token : LENGTH, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: noerr
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token :  -1), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: noerr
---------------------------
Next Token : -3, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1)), Posbility: 0.0001
Next Token :  2), Posbility: 0.0001
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)
 score:False
Error type: noerr
---------------------------
Next Token : ];, Posbility: 0.0000
Next Token : ][, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)]
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  ?, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then
 score:False
Error type: noerr
---------------------------
Next Token :  not, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  false, Posbility: 0.0025
Next Token :  true, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : return, Posbility: 0.0002
Next Token : if, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : helper, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper 
 score:False
Error type: noerr
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : x, Posbility: 0.0005
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.
 score:False
Error type: noerr
---------------------------
Next Token : last, Posbility: 0.0000
Next Token : take, Posbility: 0.0000
Next Token : rest, Posbility: 0.0000
Next Token : head, Posbility: 0.0008
Next Token : tail, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x
 score:False
Error type: noerr
---------------------------
Next Token : )], Posbility: 0.0000
Next Token : ))), Posbility: 0.0000
Next Token : )), Posbility: 0.0001
Next Token : );, Posbility: 0.0002
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :  then, Posbility: 0.0005
Next Token :  in, Posbility: 0.0012
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token : else, Posbility: 0.0002
Next Token :    , Posbility: 0.0065
Next Token :   , Posbility: 0.0291
Next Token :     , Posbility: 0.9648
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : |, Posbility: 0.0002
Next Token : let, Posbility: 0.0006
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else
 score:False
Error type: noerr
---------------------------
Next Token :  fail, Posbility: 0.0006
Next Token : 
, Posbility: 0.0038
Next Token :  true, Posbility: 0.0249
Next Token :  false, Posbility: 0.0320
Next Token :  , Posbility: 0.9336
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0008
Next Token : return, Posbility: 0.0017
Next Token : (, Posbility: 0.0024
Next Token : helper, Posbility: 0.0096
Next Token : if, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  !, Posbility: 0.0001
Next Token :  true, Posbility: 0.0001
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : (, Posbility: 0.0008
Next Token : List, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x
 score:False
Error type: noerr
---------------------------
Next Token :  !=, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0006
Next Token :  [], Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = 
 score:False
Error type: noerr
---------------------------
Next Token : [0], Posbility: 0.0000
Next Token : [0, Posbility: 0.0000
Next Token : (, Posbility: 0.0005
Next Token : List, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  [], Posbility: 0.0004
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x 
 score:False
Error type: noerr
---------------------------
Next Token : [%, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : [0], Posbility: 0.0000
Next Token : [1:, Posbility: 0.0001
Next Token : [0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0..
 score:False
Error type: noerr
---------------------------
Next Token : ], Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token :  0], Posbility: 0.0002
Next Token :  1], Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. 
 score:False
Error type: noerr
---------------------------
Next Token : ], Posbility: 0.0000
Next Token : 2], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List
 score:False
Error type: noerr
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.
 score:False
Error type: noerr
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : 长度, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : -1, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length 
 score:False
Error type: noerr
---------------------------
Next Token : X, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x
 score:False
Error type: noerr
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token :  -1), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x 
 score:False
Error type: noerr
---------------------------
Next Token : -1), Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check whether a specified list is sorted or not. *)
let is_sorted x =
  let rec helper x =
    if x = [] then true
    else if x = [] then false
    else if x = x [0.. (List.length x - 1)] then true
    else if x = x [0.. (List.length x - 1)] then false
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x - 1)] then helper (List.tail x)
    else if x = x [0.. (List.length x -
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>