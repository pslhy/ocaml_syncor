code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0249
Next Token :  sum, Posbility: 0.0283
Next Token :  sub, Posbility: 0.0598
Next Token :  , Posbility: 0.0869
Next Token :  rec, Posbility: 0.7305
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0286
Next Token :  sub, Posbility: 0.1128
Next Token :  find, Posbility: 0.1279
Next Token :  sum, Posbility: 0.1641
Next Token :  , Posbility: 0.3477
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0181
Next Token : f, Posbility: 0.0491
Next Token : product, Posbility: 0.1338
Next Token : helper, Posbility: 0.1514
Next Token : prod, Posbility: 0.1709
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0518
Next Token : sum, Posbility: 0.0752
Next Token :  , Posbility: 0.0854
Next Token : s, Posbility: 0.0967
Next Token : _, Posbility: 0.4902
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0801
Next Token : list, Posbility: 0.0903
Next Token : sum, Posbility: 0.1025
Next Token : of, Posbility: 0.1914
Next Token : sub, Posbility: 0.2168
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0222
Next Token : array, Posbility: 0.0603
Next Token : _, Posbility: 0.1641
Next Token : lists, Posbility: 0.1641
Next Token : list, Posbility: 0.4453
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0206
Next Token : (, Posbility: 0.0718
Next Token : _, Posbility: 0.1953
Next Token :  =, Posbility: 0.1953
Next Token :  , Posbility: 0.4141
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0466
Next Token : :, Posbility: 0.0679
Next Token : lst, Posbility: 0.0874
Next Token : x, Posbility: 0.1631
Next Token : (, Posbility: 0.2695
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : sub, Posbility: 0.0391
Next Token : ls, Posbility: 0.0391
Next Token : x, Posbility: 0.1060
Next Token : list, Posbility: 0.1367
Next Token : l, Posbility: 0.1367
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1,, Posbility: 0.0175
Next Token : 1, Posbility: 0.0325
Next Token : ,, Posbility: 0.1455
Next Token : :, Posbility: 0.2402
Next Token :  , Posbility: 0.5078
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : r, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : ,, Posbility: 0.0014
Next Token : ::, Posbility: 0.0598
Next Token : :, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l :
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  string, Posbility: 0.0262
Next Token :  ', Posbility: 0.1514
Next Token :  list, Posbility: 0.1943
Next Token :  , Posbility: 0.2197
Next Token :  int, Posbility: 0.3203
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : list, Posbility: 0.0014
Next Token : ), Posbility: 0.0024
Next Token :  , Posbility: 0.0107
Next Token :  array, Posbility: 0.0176
Next Token :  list, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  list, Posbility: 0.0057
Next Token :  *), Posbility: 0.0057
Next Token :  *, Posbility: 0.0073
Next Token :  , Posbility: 0.0154
Next Token : ), Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0073
Next Token :  i, Posbility: 0.0083
Next Token :  l, Posbility: 0.0137
Next Token :  =, Posbility: 0.3984
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0195
Next Token : n, Posbility: 0.0284
Next Token : (), Posbility: 0.0284
Next Token : (, Posbility: 0.3066
Next Token : :, Posbility: 0.5039
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) :
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0038
Next Token :  unit, Posbility: 0.0063
Next Token :  float, Posbility: 0.0080
Next Token :  , Posbility: 0.0359
Next Token :  int, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0162
Next Token : 
, Posbility: 0.0269
Next Token :  , Posbility: 0.0645
Next Token :  list, Posbility: 0.3262
Next Token :  =, Posbility: 0.5391
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0103
Next Token :  function, Posbility: 0.0117
Next Token :  match, Posbility: 0.0669
Next Token :  , Posbility: 0.0757
Next Token : 
, Posbility: 0.8164
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0063
Next Token :    , Posbility: 0.0194
Next Token : 	, Posbility: 0.0364
Next Token :     , Posbility: 0.1846
Next Token :   , Posbility: 0.7305
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0076
Next Token : List, Posbility: 0.0142
Next Token : let, Posbility: 0.0923
Next Token : if, Posbility: 0.1729
Next Token : match, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0022
Next Token :  [, Posbility: 0.0031
Next Token :  String, Posbility: 0.0109
Next Token :  , Posbility: 0.1934
Next Token :  l, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token :  |, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 0.0019
Next Token :  with, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0020
Next Token :  [, Posbility: 0.0055
Next Token :  , Posbility: 0.0079
Next Token :  [], Posbility: 0.0588
Next Token : 
, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0006
Next Token :       , Posbility: 0.0020
Next Token :    , Posbility: 0.0042
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9062
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |[, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : [, Posbility: 0.0040
Next Token : [], Posbility: 0.0109
Next Token : |, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0009
Next Token :  nil, Posbility: 0.0064
Next Token :  [, Posbility: 0.0135
Next Token :  , Posbility: 0.0286
Next Token :  [], Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0050
Next Token :    , Posbility: 0.0056
Next Token :  =>, Posbility: 0.0082
Next Token :  |, Posbility: 0.0135
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0003
Next Token :  =>, Posbility: 0.0003
Next Token : →, Posbility: 0.0005
Next Token : ::, Posbility: 0.0019
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0017
Next Token : 
, Posbility: 0.0334
Next Token :  , Posbility: 0.0334
Next Token :  1, Posbility: 0.2480
Next Token :  0, Posbility: 0.6719
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0018
Next Token :   , Posbility: 0.0049
Next Token :  , Posbility: 0.0193
Next Token :  |, Posbility: 0.0317
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : |, Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : |[, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0205
Next Token :  [], Posbility: 0.0337
Next Token :  l, Posbility: 0.0337
Next Token :  [, Posbility: 0.1943
Next Token :  , Posbility: 0.6797
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0239
Next Token : hd, Posbility: 0.0396
Next Token : h, Posbility: 0.1074
Next Token : _, Posbility: 0.1768
Next Token : x, Posbility: 0.5469
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0039
Next Token : :, Posbility: 0.0082
Next Token : s, Posbility: 0.0251
Next Token : ::, Posbility: 0.2109
Next Token :  , Posbility: 0.7344
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0006
Next Token : :, Posbility: 0.0020
Next Token : if, Posbility: 0.0029
Next Token : ->, Posbility: 0.0947
Next Token : ::, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0017
Next Token :  [], Posbility: 0.0178
Next Token :  l, Posbility: 0.0549
Next Token :  rest, Posbility: 0.0549
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : ls, Posbility: 0.0115
Next Token : tail, Posbility: 0.0131
Next Token : y, Posbility: 0.0190
Next Token : _, Posbility: 0.0967
Next Token : x, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0007
Next Token :  , Posbility: 0.0011
Next Token : _, Posbility: 0.0019
Next Token : ', Posbility: 0.0139
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0012
Next Token :   , Posbility: 0.0033
Next Token :  =>, Posbility: 0.0033
Next Token :  when, Posbility: 0.0591
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0005
Next Token : if, Posbility: 0.0027
Next Token : ::, Posbility: 0.0228
Next Token : ->, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0057
Next Token :  (1, Posbility: 0.0094
Next Token :  1, Posbility: 0.0256
Next Token : 
, Posbility: 0.0894
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0068
Next Token : if, Posbility: 0.0077
Next Token : (, Posbility: 0.0938
Next Token : prod, Posbility: 0.1748
Next Token : x, Posbility: 0.6914
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0021
Next Token :  , Posbility: 0.0095
Next Token : *, Posbility: 0.0107
Next Token :  +, Posbility: 0.0107
Next Token :  *, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0008
Next Token :  rec, Posbility: 0.0013
Next Token :  (1, Posbility: 0.0019
Next Token :  sum, Posbility: 0.0019
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Prod, Posbility: 0.0005
Next Token : product, Posbility: 0.0008
Next Token : x, Posbility: 0.0023
Next Token : (, Posbility: 0.0757
Next Token : prod, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token :  l, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : rec, Posbility: 0.0002
Next Token : rest, Posbility: 0.0006
Next Token : list, Posbility: 0.0041
Next Token : sub, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sub
 score:False
Error type: noerr
---------------------------
Next Token : array, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0003
Next Token :  ~, Posbility: 0.0006
Next Token : _, Posbility: 0.0007
Next Token : (, Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist 
 score:False
Error type: noerr
---------------------------
Next Token : ([, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : y, Posbility: 0.0003
Next Token : (, Posbility: 0.0293
Next Token : x, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist x
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0032
Next Token : ), Posbility: 0.0087
Next Token :  , Posbility: 0.0144
Next Token : 

, Posbility: 0.4785
Next Token : 
, Posbility: 0.4785
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs

 score:False
Error type: noerr
---------------------------
Next Token : ```, Posbility: 0.0092
Next Token : end, Posbility: 0.0118
Next Token : (, Posbility: 0.0366
Next Token :   , Posbility: 0.0771
Next Token : let, Posbility: 0.5703
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  main, Posbility: 0.0312
Next Token :  sub, Posbility: 0.0312
Next Token :  sum, Posbility: 0.0312
Next Token :  , Posbility: 0.1094
Next Token :  rec, Posbility: 0.7148
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0464
Next Token :  find, Posbility: 0.0674
Next Token :  sub, Posbility: 0.0674
Next Token :  sum, Posbility: 0.2363
Next Token :  , Posbility: 0.3887
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0152
Next Token : helper, Posbility: 0.0250
Next Token : solve, Posbility: 0.0250
Next Token : product, Posbility: 0.0601
Next Token : prod, Posbility: 0.6445
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0016
Next Token : (, Posbility: 0.0018
Next Token : s, Posbility: 0.0044
Next Token :  , Posbility: 0.0366
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0131
Next Token : of, Posbility: 0.0356
Next Token : all, Posbility: 0.0757
Next Token : list, Posbility: 0.0972
Next Token : sub, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0132
Next Token : sub, Posbility: 0.0132
Next Token : array, Posbility: 0.0977
Next Token : lists, Posbility: 0.0977
Next Token : list, Posbility: 0.7188
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0247
Next Token :  , Posbility: 0.0280
Next Token : ', Posbility: 0.0359
Next Token : 2, Posbility: 0.0461
Next Token : _, Posbility: 0.8164
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0427
Next Token : iter, Posbility: 0.0620
Next Token : helper, Posbility: 0.0620
Next Token : opt, Posbility: 0.0703
Next Token : rec, Posbility: 0.1162
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0060
Next Token : _, Posbility: 0.0078
Next Token :  l, Posbility: 0.0145
Next Token : urse, Posbility: 0.1553
Next Token :  , Posbility: 0.7891
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0016
Next Token : n, Posbility: 0.0055
Next Token : x, Posbility: 0.0091
Next Token : :, Posbility: 0.0408
Next Token : (, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : i, Posbility: 0.0027
Next Token : list, Posbility: 0.0027
Next Token : n, Posbility: 0.0031
Next Token : x, Posbility: 0.0065
Next Token : l, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0, Posbility: 0.0009
Next Token : ,, Posbility: 0.0015
Next Token : 1, Posbility: 0.0040
Next Token : :, Posbility: 0.0066
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l :
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  ', Posbility: 0.0005
Next Token : int, Posbility: 0.0007
Next Token :  list, Posbility: 0.0012
Next Token :  , Posbility: 0.0019
Next Token :  int, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0005
Next Token :  array, Posbility: 0.0008
Next Token :  , Posbility: 0.0025
Next Token : ), Posbility: 0.0025
Next Token :  list, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0003
Next Token : ,, Posbility: 0.0009
Next Token : ):, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token : ), Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :   , Posbility: 0.0007
Next Token :  ~, Posbility: 0.0008
Next Token :  =, Posbility: 0.0474
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : ::, Posbility: 0.0002
Next Token : ->, Posbility: 0.0003
Next Token : (, Posbility: 0.0059
Next Token : :, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) :
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0002
Next Token :  list, Posbility: 0.0002
Next Token : int, Posbility: 0.0008
Next Token :  , Posbility: 0.0036
Next Token :  int, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0010
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.0040
Next Token :  list, Posbility: 0.0040
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  match, Posbility: 0.0050
Next Token :  l, Posbility: 0.0056
Next Token :  , Posbility: 0.0366
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0005
Next Token : let, Posbility: 0.0024
Next Token :    , Posbility: 0.0028
Next Token :     , Posbility: 0.0096
Next Token :   , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0050
Next Token : prod, Posbility: 0.0198
Next Token : if, Posbility: 0.0369
Next Token : let, Posbility: 0.0781
Next Token : match, Posbility: 0.8398
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 0.0059
Next Token :  l, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  |, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  [], Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  l, Posbility: 0.0009
Next Token :  [, Posbility: 0.0066
Next Token :  , Posbility: 0.0178
Next Token :  [], Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  as, Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :  |, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0023
Next Token :  [], Posbility: 0.0023
Next Token :  , Posbility: 0.0063
Next Token :  1, Posbility: 0.0469
Next Token :  0, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token :  |, Posbility: 0.0009
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0063
Next Token :  0, Posbility: 0.0103
Next Token :  [, Posbility: 0.0170
Next Token :  [], Posbility: 0.0281
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0030
Next Token : (, Posbility: 0.0034
Next Token : head, Posbility: 0.0049
Next Token : _, Posbility: 0.0322
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0008
Next Token :  |, Posbility: 0.0013
Next Token : s, Posbility: 0.0040
Next Token : ::, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 0.0004
Next Token : ->, Posbility: 0.0013
Next Token : :, Posbility: 0.0019
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0009
Next Token :  rest, Posbility: 0.0009
Next Token :  l, Posbility: 0.0010
Next Token :  [], Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0003
Next Token : (, Posbility: 0.0008
Next Token : y, Posbility: 0.0040
Next Token : _, Posbility: 0.0178
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : ', Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0006
Next Token :   , Posbility: 0.0007
Next Token :  |, Posbility: 0.0010
Next Token :  when, Posbility: 0.0159
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : ::, Posbility: 0.0008
Next Token : if, Posbility: 0.0009
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0014
Next Token :  {, Posbility: 0.0014
Next Token :  1, Posbility: 0.0039
Next Token : 
, Posbility: 0.0288
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0021
Next Token : if, Posbility: 0.0035
Next Token : (, Posbility: 0.0256
Next Token : prod, Posbility: 0.1147
Next Token : x, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0006
Next Token :  , Posbility: 0.0009
Next Token : *, Posbility: 0.0011
Next Token :  +, Posbility: 0.0228
Next Token :  *, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0003
Next Token :  sum, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : product, Posbility: 0.0001
Next Token : Prod, Posbility: 0.0002
Next Token : x, Posbility: 0.0015
Next Token : (, Posbility: 0.0179
Next Token : prod, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token :  (*, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_
 score:False
Error type: noerr
---------------------------
Next Token : next, Posbility: 0.0000
Next Token : recursive, Posbility: 0.0000
Next Token : rec, Posbility: 0.0003
Next Token : list, Posbility: 0.0003
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sub
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0007
Next Token :  l, Posbility: 0.0065
Next Token :  , Posbility: 0.0291
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_
 score:False
Error type: noerr
---------------------------
Next Token : re, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : iter, Posbility: 0.0001
Next Token : recursive, Posbility: 0.0001
Next Token : rec, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token :  [, Posbility: 0.0005
Next Token :  l, Posbility: 0.0008
Next Token : (, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec 
 score:False
Error type: noerr
---------------------------
Next Token : ([, Posbility: 0.0000
Next Token : prod, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0293
Next Token : x, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0052
Next Token :  , Posbility: 0.0140
Next Token :  +, Posbility: 0.0381
Next Token : 

, Posbility: 0.4629
Next Token : 
, Posbility: 0.4629
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs

 score:False
Error type: noerr
---------------------------
Next Token : prod, Posbility: 0.0054
Next Token : 

, Posbility: 0.0100
Next Token :   , Posbility: 0.0146
Next Token : (, Posbility: 0.1079
Next Token : let, Posbility: 0.7031
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  main, Posbility: 0.0197
Next Token :  sub, Posbility: 0.0369
Next Token :  sum, Posbility: 0.0369
Next Token :  , Posbility: 0.1650
Next Token :  rec, Posbility: 0.6523
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0364
Next Token :  find, Posbility: 0.0530
Next Token :  sub, Posbility: 0.0601
Next Token :  sum, Posbility: 0.1123
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0069
Next Token : helper, Posbility: 0.0089
Next Token : solve, Posbility: 0.0165
Next Token : product, Posbility: 0.0396
Next Token : prod, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0008
Next Token :  =, Posbility: 0.0010
Next Token : s, Posbility: 0.0010
Next Token :  , Posbility: 0.0085
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0077
Next Token : of, Posbility: 0.0098
Next Token : list, Posbility: 0.0208
Next Token : all, Posbility: 0.0208
Next Token : sub, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token : _, Posbility: 0.0024
Next Token : array, Posbility: 0.0065
Next Token : lists, Posbility: 0.0177
Next Token : list, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0023
Next Token : ', Posbility: 0.0148
Next Token :  , Posbility: 0.0216
Next Token : 2, Posbility: 0.0315
Next Token : _, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dp, Posbility: 0.0302
Next Token : tail, Posbility: 0.0386
Next Token : opt, Posbility: 0.0640
Next Token : rec, Posbility: 0.0723
Next Token : iter, Posbility: 0.4160
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0054
Next Token :  l, Posbility: 0.0054
Next Token : _, Posbility: 0.0114
Next Token : ative, Posbility: 0.0352
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0007
Next Token : n, Posbility: 0.0010
Next Token : x, Posbility: 0.0035
Next Token : :, Posbility: 0.0085
Next Token : (, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : n, Posbility: 0.0005
Next Token : i, Posbility: 0.0009
Next Token : list, Posbility: 0.0010
Next Token : x, Posbility: 0.0015
Next Token : l, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : 1, Posbility: 0.0007
Next Token : :, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l :
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  ', Posbility: 0.0001
Next Token :  list, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : int, Posbility: 0.0005
Next Token :  int, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *), Posbility: 0.0001
Next Token :  array, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token : ), Posbility: 0.0009
Next Token :  list, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *), Posbility: 0.0000
Next Token : ,, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : ):, Posbility: 0.0008
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  l, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  =, Posbility: 0.0330
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : ->, Posbility: 0.0041
Next Token : :, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) :
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  float, Posbility: 0.0001
Next Token : int, Posbility: 0.0006
Next Token :  , Posbility: 0.0009
Next Token :  int, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token : 
, Posbility: 0.0015
Next Token :  list, Posbility: 0.0015
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0005
Next Token :  match, Posbility: 0.0017
Next Token :  l, Posbility: 0.0040
Next Token :  , Posbility: 0.0109
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :    , Posbility: 0.0017
Next Token : let, Posbility: 0.0031
Next Token :     , Posbility: 0.0040
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : prod, Posbility: 0.0065
Next Token : List, Posbility: 0.0121
Next Token : if, Posbility: 0.0138
Next Token : let, Posbility: 0.3555
Next Token : match, Posbility: 0.5859
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : l, Posbility: 0.0002
Next Token :  it, Posbility: 0.0003
Next Token :  iter, Posbility: 0.0004
Next Token :  , Posbility: 0.0046
Next Token :  l, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  WITH, Posbility: 0.0000
Next Token :  |, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  [], Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :     , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : case, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0003
Next Token :  l, Posbility: 0.0009
Next Token :  [, Posbility: 0.0024
Next Token :  , Posbility: 0.0179
Next Token :  [], Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  as, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  |, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  [], Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  1, Posbility: 0.0025
Next Token :  0, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  |, Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0027
Next Token :  i, Posbility: 0.0035
Next Token :  [, Posbility: 0.0074
Next Token :  [], Posbility: 0.0122
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0013
Next Token : h, Posbility: 0.0013
Next Token : head, Posbility: 0.0027
Next Token : _, Posbility: 0.0139
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0005
Next Token :  |, Posbility: 0.0009
Next Token : s, Posbility: 0.0022
Next Token : ::, Posbility: 0.0046
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : :, Posbility: 0.0012
Next Token : ->, Posbility: 0.0028
Next Token : ::, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0005
Next Token :  l, Posbility: 0.0009
Next Token :  rest, Posbility: 0.0012
Next Token :  [], Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0012
Next Token : _, Posbility: 0.0109
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ', Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token : ,, Posbility: 0.0004
Next Token :  |, Posbility: 0.0004
Next Token :  when, Posbility: 0.0085
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : ::, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0041
Next Token :  {, Posbility: 0.0046
Next Token :  match, Posbility: 0.0052
Next Token : 
, Posbility: 0.0825
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0077
Next Token : (, Posbility: 0.0099
Next Token : let, Posbility: 0.0184
Next Token : prod, Posbility: 0.0444
Next Token : x, Posbility: 0.8906
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 0.0009
Next Token :  +, Posbility: 0.0036
Next Token :  *, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  sum, Posbility: 0.0010
Next Token :  l, Posbility: 0.0022
Next Token :  iter, Posbility: 0.0045
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Iterator, Posbility: 0.0050
Next Token : Prod, Posbility: 0.0065
Next Token : List, Posbility: 0.0073
Next Token : (, Posbility: 0.0137
Next Token : prod, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : (, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_
 score:False
Error type: noerr
---------------------------
Next Token : next, Posbility: 0.0001
Next Token : rec, Posbility: 0.0002
Next Token : iter, Posbility: 0.0007
Next Token : list, Posbility: 0.0008
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sub
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : lista, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0014
Next Token :  iter, Posbility: 0.0039
Next Token :  l, Posbility: 0.0173
Next Token :  , Posbility: 0.0286
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_
 score:False
Error type: noerr
---------------------------
Next Token : iterator, Posbility: 0.0000
Next Token : loop, Posbility: 0.0000
Next Token : it, Posbility: 0.0001
Next Token : rec, Posbility: 0.0474
Next Token : iter, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_iter
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token : (, Posbility: 0.0017
Next Token :  l, Posbility: 0.0019
Next Token : _, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_iter 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : prod, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0076
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_iter x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_iter xs
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0034
Next Token :  , Posbility: 0.0064
Next Token :  in, Posbility: 0.0082
Next Token : 
, Posbility: 0.4492
Next Token : 

, Posbility: 0.5078
---------------------------
code:
 (* Write a  function to find sum of products of all possible sublists of a given list. https://www.geeksforgeeks.org/sum-of-products-of-all-possible-subarrays/ *)
let rec prod_sublist (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist xs
let rec prod_sublist_rec (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_rec xs
let rec prod_sublist_iter (l : int list) : int =
  match l with
  | [] -> 0
  | x :: xs -> x * prod_sublist_iter xs


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :72.89036774635315

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>