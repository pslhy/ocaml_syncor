code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  array, Posbility: 0.0027
Next Token :  check, Posbility: 0.0894
Next Token :  , Posbility: 0.2432
Next Token :  rec, Posbility: 0.3125
Next Token :  is, Posbility: 0.3125
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : -, Posbility: 0.0003
Next Token : mono, Posbility: 0.0023
Next Token : Mono, Posbility: 0.0471
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0024
Next Token : mon, Posbility: 0.0024
Next Token : non, Posbility: 0.0024
Next Token : incr, Posbility: 0.0066
Next Token : mono, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_mono
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0064
Next Token :  =, Posbility: 0.0064
Next Token : ton, Posbility: 0.0064
Next Token : tone, Posbility: 0.0175
Next Token : t, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monot
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : onic, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  array, Posbility: 0.0219
Next Token :  a, Posbility: 0.0461
Next Token : _, Posbility: 0.0977
Next Token :  =, Posbility: 0.1611
Next Token :  , Posbility: 0.5625
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0242
Next Token : lst, Posbility: 0.0242
Next Token : (, Posbility: 0.1084
Next Token : arr, Posbility: 0.3340
Next Token : x, Posbility: 0.3340
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0019
Next Token :  i, Posbility: 0.0065
Next Token :  , Posbility: 0.0479
Next Token : s, Posbility: 0.0786
Next Token :  =, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0035
Next Token : 

, Posbility: 0.0084
Next Token :  match, Posbility: 0.0095
Next Token :  , Posbility: 0.1016
Next Token : 
, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0071
Next Token : 	, Posbility: 0.0092
Next Token :    , Posbility: 0.0171
Next Token :     , Posbility: 0.1260
Next Token :   , Posbility: 0.8242
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0156
Next Token : (, Posbility: 0.0200
Next Token : if, Posbility: 0.0894
Next Token : match, Posbility: 0.1016
Next Token : let, Posbility: 0.6602
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0182
Next Token :  len, Posbility: 0.0383
Next Token :  open, Posbility: 0.0493
Next Token :  , Posbility: 0.2832
Next Token :  rec, Posbility: 0.3652
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0481
Next Token :  check, Posbility: 0.0698
Next Token :  is, Posbility: 0.1152
Next Token :  loop, Posbility: 0.1904
Next Token :  , Posbility: 0.3555
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0334
Next Token : aux, Posbility: 0.1030
Next Token : helper, Posbility: 0.1172
Next Token : mono, Posbility: 0.1699
Next Token : f, Posbility: 0.1699
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0295
Next Token :  acc, Posbility: 0.0378
Next Token :  i, Posbility: 0.0908
Next Token :  =, Posbility: 0.1504
Next Token :  , Posbility: 0.5234
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0225
Next Token : y, Posbility: 0.0327
Next Token : n, Posbility: 0.0476
Next Token : (, Posbility: 0.1289
Next Token : x, Posbility: 0.5781
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0142
Next Token :  acc, Posbility: 0.0339
Next Token :  i, Posbility: 0.1523
Next Token :  , Posbility: 0.2520
Next Token :  =, Posbility: 0.4141
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0024
Next Token :  function, Posbility: 0.0262
Next Token :  match, Posbility: 0.0298
Next Token :  , Posbility: 0.0630
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0021
Next Token :    , Posbility: 0.0045
Next Token :       , Posbility: 0.0108
Next Token :   , Posbility: 0.0108
Next Token :     , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0054
Next Token : case, Posbility: 0.0079
Next Token : let, Posbility: 0.0957
Next Token : if, Posbility: 0.3770
Next Token : match, Posbility: 0.4844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0008
Next Token : 
, Posbility: 0.0012
Next Token :  !, Posbility: 0.0024
Next Token :  String, Posbility: 0.0075
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0047
Next Token : Array, Posbility: 0.0114
Next Token : (, Posbility: 0.0129
Next Token : List, Posbility: 0.0510
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0015
Next Token : ,, Posbility: 0.0015
Next Token :  , Posbility: 0.0024
Next Token :  @, Posbility: 0.0040
Next Token :  with, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0010
Next Token :  , Posbility: 0.0039
Next Token :  [, Posbility: 0.0094
Next Token :  [], Posbility: 0.0255
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0006
Next Token :   , Posbility: 0.0009
Next Token :    , Posbility: 0.0013
Next Token :       , Posbility: 0.0532
Next Token :     , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0, Posbility: 0.0004
Next Token : (, Posbility: 0.0006
Next Token : [, Posbility: 0.0217
Next Token : [], Posbility: 0.0520
Next Token : |, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [],, Posbility: 0.0014
Next Token :  nil, Posbility: 0.0060
Next Token :  , Posbility: 0.0447
Next Token :  [, Posbility: 0.0447
Next Token :  [], Posbility: 0.8945
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0048
Next Token :    , Posbility: 0.0062
Next Token :  =>, Posbility: 0.0062
Next Token :  |, Posbility: 0.0454
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0003
Next Token : -, Posbility: 0.0007
Next Token : →, Posbility: 0.0008
Next Token : ::, Posbility: 0.0052
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0277
Next Token :  True, Posbility: 0.0752
Next Token :  false, Posbility: 0.0752
Next Token :  , Posbility: 0.2051
Next Token :  true, Posbility: 0.5547
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token : ;, Posbility: 0.0040
Next Token :  , Posbility: 0.0058
Next Token :  |, Posbility: 0.0122
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0120
Next Token :  [], Posbility: 0.0154
Next Token :  a, Posbility: 0.0420
Next Token :  [, Posbility: 0.2412
Next Token :  , Posbility: 0.6562
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : hd, Posbility: 0.0272
Next Token : head, Posbility: 0.0396
Next Token : h, Posbility: 0.0396
Next Token : _, Posbility: 0.2275
Next Token : x, Posbility: 0.5469
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0147
Next Token : s, Posbility: 0.0214
Next Token : :, Posbility: 0.0581
Next Token : ::, Posbility: 0.4297
Next Token :  , Posbility: 0.4297
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0004
Next Token : if, Posbility: 0.0019
Next Token : ->, Posbility: 0.0045
Next Token : :, Posbility: 0.0085
Next Token : ::, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0032
Next Token :  [, Posbility: 0.0053
Next Token :  [], Posbility: 0.0186
Next Token :  rest, Posbility: 0.0645
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0309
Next Token : t, Posbility: 0.0510
Next Token : _, Posbility: 0.0576
Next Token : y, Posbility: 0.2012
Next Token : x, Posbility: 0.6211
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0066
Next Token : 0, Posbility: 0.0085
Next Token : 1, Posbility: 0.0140
Next Token : ', Posbility: 0.1709
Next Token : s, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0016
Next Token :   , Posbility: 0.0034
Next Token :  =>, Posbility: 0.0056
Next Token :  when, Posbility: 0.1445
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0003
Next Token :  =>, Posbility: 0.0004
Next Token : if, Posbility: 0.0094
Next Token : ::, Posbility: 0.0291
Next Token : ->, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0104
Next Token :  not, Posbility: 0.0172
Next Token :  !, Posbility: 0.0284
Next Token :  , Posbility: 0.3457
Next Token : 
, Posbility: 0.5703
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0054
Next Token :      , Posbility: 0.0165
Next Token :        , Posbility: 0.0349
Next Token :       , Posbility: 0.2275
Next Token :         , Posbility: 0.7031
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0486
Next Token : (, Posbility: 0.0552
Next Token : f, Posbility: 0.0801
Next Token : if, Posbility: 0.2793
Next Token : let, Posbility: 0.4609
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0237
Next Token :  a, Posbility: 0.0269
Next Token :  v, Posbility: 0.0442
Next Token :  rec, Posbility: 0.1201
Next Token :  , Posbility: 0.5391
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0500
Next Token : m, Posbility: 0.0569
Next Token : f, Posbility: 0.0825
Next Token : y, Posbility: 0.1201
Next Token : x, Posbility: 0.2246
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0835
Next Token : 1, Posbility: 0.0947
Next Token : _, Posbility: 0.1562
Next Token :  =, Posbility: 0.1562
Next Token : 0, Posbility: 0.1562
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token : ', Posbility: 0.0013
Next Token : _, Posbility: 0.0022
Next Token :  , Posbility: 0.0040
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0015
Next Token :  Car, Posbility: 0.0015
Next Token :  First, Posbility: 0.0019
Next Token :  first, Posbility: 0.0139
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0148
Next Token : head, Posbility: 0.0356
Next Token : f, Posbility: 0.0403
Next Token : List, Posbility: 0.0586
Next Token : x, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0154
Next Token : [0], Posbility: 0.0417
Next Token : s, Posbility: 0.0537
Next Token :  , Posbility: 0.2119
Next Token :  in, Posbility: 0.5781
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0003
Next Token :   , Posbility: 0.0019
Next Token : 

, Posbility: 0.0027
Next Token :  , Posbility: 0.0201
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :             , Posbility: 0.0007
Next Token :       , Posbility: 0.0035
Next Token :           , Posbility: 0.0040
Next Token :        , Posbility: 0.0123
Next Token :         , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0410
Next Token : f, Posbility: 0.0527
Next Token : match, Posbility: 0.0674
Next Token : if, Posbility: 0.1426
Next Token : let, Posbility: 0.6406
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  compare, Posbility: 0.0061
Next Token :  v, Posbility: 0.0069
Next Token :  is, Posbility: 0.0078
Next Token :  rec, Posbility: 0.0239
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0066
Next Token : g, Posbility: 0.0066
Next Token : y, Posbility: 0.0623
Next Token : f, Posbility: 0.0908
Next Token : x, Posbility: 0.7578
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0098
Next Token : 0, Posbility: 0.0126
Next Token : n, Posbility: 0.0161
Next Token : s, Posbility: 0.0439
Next Token : 1, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : =, Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  car, Posbility: 0.0008
Next Token :  1, Posbility: 0.0010
Next Token :  last, Posbility: 0.0019
Next Token :  first, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0093
Next Token : List, Posbility: 0.0136
Next Token : head, Posbility: 0.0417
Next Token : f, Posbility: 0.0688
Next Token : x, Posbility: 0.8398
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0008
Next Token :  , Posbility: 0.0017
Next Token :  in, Posbility: 0.0075
Next Token : 0, Posbility: 0.0085
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0140
Next Token :  with, Posbility: 0.0159
Next Token : [0], Posbility: 0.0432
Next Token : ., Posbility: 0.1328
Next Token :  in, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0025
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0007
Next Token :           , Posbility: 0.0008
Next Token :       , Posbility: 0.0027
Next Token :        , Posbility: 0.0292
Next Token :         , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0674
Next Token : x, Posbility: 0.0981
Next Token : (, Posbility: 0.1260
Next Token : if, Posbility: 0.2354
Next Token : let, Posbility: 0.3867
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0220
Next Token :  v, Posbility: 0.0220
Next Token :  res, Posbility: 0.0220
Next Token :  rec, Posbility: 0.0596
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : b, Posbility: 0.0366
Next Token : cmp, Posbility: 0.0366
Next Token : y, Posbility: 0.0603
Next Token : f, Posbility: 0.0996
Next Token : x, Posbility: 0.4453
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0293
Next Token : 1, Posbility: 0.0332
Next Token : s, Posbility: 0.0427
Next Token : 0, Posbility: 0.3145
Next Token : 2, Posbility: 0.4043
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : =, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0012
Next Token :  !, Posbility: 0.0012
Next Token :  first, Posbility: 0.0022
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0093
Next Token : (, Posbility: 0.0225
Next Token : List, Posbility: 0.0225
Next Token : f, Posbility: 0.0688
Next Token : x, Posbility: 0.8398
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0125
Next Token :  in, Posbility: 0.0182
Next Token : 1, Posbility: 0.0723
Next Token : 0, Posbility: 0.1963
Next Token : s, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0104
Next Token : [0], Posbility: 0.0151
Next Token :  @, Posbility: 0.0249
Next Token : ., Posbility: 0.0598
Next Token :  in, Posbility: 0.8281
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0003
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0095
Next Token : 

, Posbility: 0.0139
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0013
Next Token :     , Posbility: 0.0024
Next Token :       , Posbility: 0.0039
Next Token :        , Posbility: 0.0256
Next Token :         , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0859
Next Token : f, Posbility: 0.0859
Next Token : (, Posbility: 0.0977
Next Token : if, Posbility: 0.2061
Next Token : let, Posbility: 0.4375
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0122
Next Token :  v, Posbility: 0.0122
Next Token :  res, Posbility: 0.0138
Next Token :  rec, Posbility: 0.0293
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : b, Posbility: 0.0096
Next Token : (, Posbility: 0.0109
Next Token : f, Posbility: 0.0491
Next Token : y, Posbility: 0.0554
Next Token : x, Posbility: 0.7656
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0077
Next Token : 2, Posbility: 0.0077
Next Token : s, Posbility: 0.0162
Next Token : 0, Posbility: 0.0439
Next Token : 3, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  next, Posbility: 0.0002
Next Token : 
, Posbility: 0.0009
Next Token :  [, Posbility: 0.0017
Next Token :  [], Posbility: 0.0017
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0010
Next Token : Array, Posbility: 0.0012
Next Token : (, Posbility: 0.0017
Next Token : f, Posbility: 0.0032
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0010
Next Token : 1, Posbility: 0.0019
Next Token : 0, Posbility: 0.0058
Next Token :  in, Posbility: 0.0123
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0014
Next Token :     , Posbility: 0.0030
Next Token :       , Posbility: 0.0034
Next Token :        , Posbility: 0.0415
Next Token :         , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0571
Next Token : f, Posbility: 0.0571
Next Token : (, Posbility: 0.0942
Next Token : if, Posbility: 0.1758
Next Token : let, Posbility: 0.5430
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0087
Next Token :  v, Posbility: 0.0098
Next Token :  is, Posbility: 0.0112
Next Token :  rec, Posbility: 0.0237
Next Token :  , Posbility: 0.8867
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0064
Next Token : b, Posbility: 0.0082
Next Token : f, Posbility: 0.0325
Next Token : y, Posbility: 0.0369
Next Token : x, Posbility: 0.8398
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0048
Next Token :  =, Posbility: 0.0079
Next Token : s, Posbility: 0.0102
Next Token : 0, Posbility: 0.0277
Next Token : 4, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  [, Posbility: 0.0007
Next Token :  [], Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0003
Next Token : Array, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token : f, Posbility: 0.0009
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0004
Next Token : 0, Posbility: 0.0008
Next Token : 3, Posbility: 0.0008
Next Token :  in, Posbility: 0.0046
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0140
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0013
Next Token :     , Posbility: 0.0030
Next Token :       , Posbility: 0.0034
Next Token :        , Posbility: 0.0469
Next Token :         , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0359
Next Token : match, Posbility: 0.0359
Next Token : (, Posbility: 0.0522
Next Token : if, Posbility: 0.0977
Next Token : let, Posbility: 0.7227
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0044
Next Token :  res, Posbility: 0.0044
Next Token :  is, Posbility: 0.0056
Next Token :  rec, Posbility: 0.0105
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : b, Posbility: 0.0023
Next Token : (, Posbility: 0.0030
Next Token : f, Posbility: 0.0151
Next Token : y, Posbility: 0.0171
Next Token : x, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0015
Next Token : s, Posbility: 0.0045
Next Token : 0, Posbility: 0.0045
Next Token :  =, Posbility: 0.0058
Next Token : 5, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0003
Next Token :  [], Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token : 3, Posbility: 0.0003
Next Token :  in, Posbility: 0.0022
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0124
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0009
Next Token :     , Posbility: 0.0018
Next Token :       , Posbility: 0.0023
Next Token :        , Posbility: 0.0417
Next Token :         , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0242
Next Token : match, Posbility: 0.0310
Next Token : (, Posbility: 0.0352
Next Token : if, Posbility: 0.0654
Next Token : let, Posbility: 0.8008
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0031
Next Token :  res, Posbility: 0.0031
Next Token :  is, Posbility: 0.0039
Next Token :  rec, Posbility: 0.0083
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0013
Next Token : (, Posbility: 0.0019
Next Token : f, Posbility: 0.0094
Next Token : y, Posbility: 0.0107
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 7, Posbility: 0.0010
Next Token : s, Posbility: 0.0017
Next Token :  =, Posbility: 0.0017
Next Token : 0, Posbility: 0.0024
Next Token : 6, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 3, Posbility: 0.0002
Next Token :  in, Posbility: 0.0010
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0005
Next Token :     , Posbility: 0.0011
Next Token :       , Posbility: 0.0017
Next Token :        , Posbility: 0.0203
Next Token :         , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0143
Next Token : match, Posbility: 0.0184
Next Token : (, Posbility: 0.0237
Next Token : if, Posbility: 0.0344
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0012
Next Token :  is, Posbility: 0.0013
Next Token :  res, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0009
Next Token : y, Posbility: 0.0036
Next Token : f, Posbility: 0.0040
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 6, Posbility: 0.0004
Next Token : s, Posbility: 0.0004
Next Token : 0, Posbility: 0.0010
Next Token :  =, Posbility: 0.0017
Next Token : 7, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token :  in, Posbility: 0.0013
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0006
Next Token :     , Posbility: 0.0014
Next Token :       , Posbility: 0.0021
Next Token :        , Posbility: 0.0292
Next Token :         , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0157
Next Token : match, Posbility: 0.0203
Next Token : (, Posbility: 0.0294
Next Token : if, Posbility: 0.0430
Next Token : let, Posbility: 0.8594
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0017
Next Token :  a, Posbility: 0.0019
Next Token :  v, Posbility: 0.0019
Next Token :  rec, Posbility: 0.0040
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0007
Next Token : (, Posbility: 0.0010
Next Token : f, Posbility: 0.0051
Next Token : y, Posbility: 0.0051
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : 0, Posbility: 0.0009
Next Token : 7, Posbility: 0.0009
Next Token :  =, Posbility: 0.0015
Next Token : 8, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  in, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :     , Posbility: 0.0011
Next Token :       , Posbility: 0.0019
Next Token :        , Posbility: 0.0203
Next Token :         , Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0114
Next Token : match, Posbility: 0.0166
Next Token : (, Posbility: 0.0188
Next Token : if, Posbility: 0.0273
Next Token : let, Posbility: 0.9062
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0010
Next Token :  a, Posbility: 0.0012
Next Token :  is, Posbility: 0.0012
Next Token :  rec, Posbility: 0.0022
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0008
Next Token : f, Posbility: 0.0036
Next Token : y, Posbility: 0.0036
Next Token : x, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : n, Posbility: 0.0005
Next Token : 0, Posbility: 0.0008
Next Token :  =, Posbility: 0.0022
Next Token : 9, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token :  in, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0007
Next Token :     , Posbility: 0.0016
Next Token :       , Posbility: 0.0021
Next Token :        , Posbility: 0.0417
Next Token :         , Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0308
Next Token : match, Posbility: 0.0349
Next Token : (, Posbility: 0.0396
Next Token : if, Posbility: 0.0649
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0019
Next Token :  a, Posbility: 0.0031
Next Token :  is, Posbility: 0.0031
Next Token :  rec, Posbility: 0.0095
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : xF, Posbility: 0.0023
Next Token : xA, Posbility: 0.0044
Next Token : y, Posbility: 0.0072
Next Token : f, Posbility: 0.0135
Next Token : x, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0027
Next Token : n, Posbility: 0.0031
Next Token :  =, Posbility: 0.0051
Next Token : 0, Posbility: 0.0084
Next Token : 10, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0017
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 7, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  in, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0006
Next Token :     , Posbility: 0.0019
Next Token :       , Posbility: 0.0024
Next Token :        , Posbility: 0.0178
Next Token :         , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0178
Next Token : match, Posbility: 0.0229
Next Token : (, Posbility: 0.0260
Next Token : if, Posbility: 0.0430
Next Token : let, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0019
Next Token :  is, Posbility: 0.0021
Next Token :  res, Posbility: 0.0021
Next Token :  rec, Posbility: 0.0040
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0008
Next Token : _, Posbility: 0.0009
Next Token : y, Posbility: 0.0051
Next Token : f, Posbility: 0.0066
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0013
Next Token :  =, Posbility: 0.0019
Next Token : 10, Posbility: 0.0019
Next Token : 20, Posbility: 0.0035
Next Token : 11, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :     , Posbility: 0.0015
Next Token :       , Posbility: 0.0015
Next Token :        , Posbility: 0.0124
Next Token :         , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0080
Next Token : match, Posbility: 0.0132
Next Token : (, Posbility: 0.0149
Next Token : if, Posbility: 0.0245
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0010
Next Token :  is, Posbility: 0.0012
Next Token :  res, Posbility: 0.0012
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0006
Next Token : y, Posbility: 0.0024
Next Token : f, Posbility: 0.0036
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 10, Posbility: 0.0002
Next Token : 11, Posbility: 0.0002
Next Token : 20, Posbility: 0.0003
Next Token :  =, Posbility: 0.0004
Next Token : 12, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :     , Posbility: 0.0010
Next Token :       , Posbility: 0.0013
Next Token :        , Posbility: 0.0109
Next Token :         , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0081
Next Token : (, Posbility: 0.0132
Next Token : match, Posbility: 0.0132
Next Token : if, Posbility: 0.0193
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0008
Next Token :  is, Posbility: 0.0008
Next Token :  res, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0017
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0005
Next Token : y, Posbility: 0.0019
Next Token : f, Posbility: 0.0025
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0004
Next Token : 14, Posbility: 0.0005
Next Token :  =, Posbility: 0.0006
Next Token : 12, Posbility: 0.0008
Next Token : 13, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :       , Posbility: 0.0003
Next Token :        , Posbility: 0.0046
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0040
Next Token : (, Posbility: 0.0058
Next Token : match, Posbility: 0.0065
Next Token : if, Posbility: 0.0084
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  v, Posbility: 0.0003
Next Token :  res, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0008
Next Token : f, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : 15, Posbility: 0.0001
Next Token : 13, Posbility: 0.0007
Next Token : 14, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 13, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :       , Posbility: 0.0005
Next Token :        , Posbility: 0.0046
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0031
Next Token : (, Posbility: 0.0058
Next Token : if, Posbility: 0.0074
Next Token : match, Posbility: 0.0074
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0002
Next Token :  v, Posbility: 0.0003
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0007
Next Token : f, Posbility: 0.0009
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 16, Posbility: 0.0002
Next Token : 14, Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token : 17, Posbility: 0.0003
Next Token : 15, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 13, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :     , Posbility: 0.0010
Next Token :       , Posbility: 0.0011
Next Token :        , Posbility: 0.0179
Next Token :         , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0079
Next Token : match, Posbility: 0.0167
Next Token : (, Posbility: 0.0189
Next Token : if, Posbility: 0.0243
Next Token : let, Posbility: 0.9102
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0009
Next Token :  v, Posbility: 0.0009
Next Token :  res, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0019
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0005
Next Token : f, Posbility: 0.0031
Next Token : y, Posbility: 0.0031
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 15, Posbility: 0.0005
Next Token :  =, Posbility: 0.0005
Next Token : 17, Posbility: 0.0006
Next Token : 16_, Posbility: 0.0009
Next Token : 16, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 13, Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :     , Posbility: 0.0004
Next Token :       , Posbility: 0.0008
Next Token :        , Posbility: 0.0076
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0056
Next Token : (, Posbility: 0.0118
Next Token : match, Posbility: 0.0134
Next Token : if, Posbility: 0.0172
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0004
Next Token :  v, Posbility: 0.0004
Next Token :  res, Posbility: 0.0005
Next Token :  rec, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : f, Posbility: 0.0017
Next Token : y, Posbility: 0.0017
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 18, Posbility: 0.0001
Next Token : 20, Posbility: 0.0001
Next Token : 16, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : 17, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 15, Posbility: 0.0000
Next Token : 13, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :        , Posbility: 0.0028
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0021
Next Token : (, Posbility: 0.0040
Next Token : match, Posbility: 0.0045
Next Token : if, Posbility: 0.0058
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0004
Next Token : f, Posbility: 0.0005
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 19, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 17, Posbility: 0.0010
Next Token : 18, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 13, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :        , Posbility: 0.0041
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0035
Next Token : (, Posbility: 0.0051
Next Token : match, Posbility: 0.0051
Next Token : if, Posbility: 0.0066
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0004
Next Token : f, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  19, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 20, Posbility: 0.0002
Next Token : 18, Posbility: 0.0003
Next Token : 19, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 16, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0097
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :     , Posbility: 0.0010
Next Token :       , Posbility: 0.0013
Next Token :        , Posbility: 0.0159
Next Token :         , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0080
Next Token : (, Posbility: 0.0132
Next Token : match, Posbility: 0.0132
Next Token : if, Posbility: 0.0247
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0005
Next Token :  res, Posbility: 0.0005
Next Token :  a, Posbility: 0.0006
Next Token :  rec, Posbility: 0.0015
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0006
Next Token : y, Posbility: 0.0019
Next Token : f, Posbility: 0.0025
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : 19, Posbility: 0.0004
Next Token : 0, Posbility: 0.0007
Next Token :  =, Posbility: 0.0009
Next Token : 20, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 13, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :     , Posbility: 0.0008
Next Token :       , Posbility: 0.0017
Next Token :        , Posbility: 0.0140
Next Token :         , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0090
Next Token : match, Posbility: 0.0148
Next Token : (, Posbility: 0.0168
Next Token : if, Posbility: 0.0244
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0005
Next Token :  res, Posbility: 0.0005
Next Token :  v, Posbility: 0.0006
Next Token :  rec, Posbility: 0.0013
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : _, Posbility: 0.0005
Next Token : y, Posbility: 0.0022
Next Token : f, Posbility: 0.0025
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 30, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 20, Posbility: 0.0003
Next Token : 21, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :        , Posbility: 0.0059
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0040
Next Token : match, Posbility: 0.0058
Next Token : (, Posbility: 0.0065
Next Token : if, Posbility: 0.0084
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  res, Posbility: 0.0002
Next Token :  v, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0006
Next Token : f, Posbility: 0.0007
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : 23, Posbility: 0.0001
Next Token : 21, Posbility: 0.0008
Next Token : 22, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :        , Posbility: 0.0041
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0031
Next Token : match, Posbility: 0.0040
Next Token : (, Posbility: 0.0045
Next Token : if, Posbility: 0.0058
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0004
Next Token : f, Posbility: 0.0004
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 24, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 21, Posbility: 0.0001
Next Token : 23, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0028
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0005
Next Token :        , Posbility: 0.0076
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0040
Next Token : match, Posbility: 0.0051
Next Token : (, Posbility: 0.0065
Next Token : if, Posbility: 0.0084
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0002
Next Token :  a, Posbility: 0.0002
Next Token :  v, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : f, Posbility: 0.0007
Next Token : y, Posbility: 0.0008
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 23, Posbility: 0.0001
Next Token : 25, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : 24, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :        , Posbility: 0.0052
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0035
Next Token : match, Posbility: 0.0040
Next Token : (, Posbility: 0.0045
Next Token : if, Posbility: 0.0058
Next Token : let, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0006
Next Token : f, Posbility: 0.0006
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 26, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : 24, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 25, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :        , Posbility: 0.0059
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0027
Next Token : match, Posbility: 0.0035
Next Token : (, Posbility: 0.0045
Next Token : if, Posbility: 0.0051
Next Token : let, Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0005
Next Token : y, Posbility: 0.0005
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 27, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 25, Posbility: 0.0002
Next Token : 26, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0019
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0013
Next Token : match, Posbility: 0.0013
Next Token : (, Posbility: 0.0017
Next Token : if, Posbility: 0.0017
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 37, Posbility: 0.0000
Next Token : 127, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 28, Posbility: 0.0001
Next Token : 27, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0012
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0010
Next Token : match, Posbility: 0.0010
Next Token : (, Posbility: 0.0017
Next Token : if, Posbility: 0.0017
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  res, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 30, Posbility: 0.0001
Next Token : 27, Posbility: 0.0001
Next Token : 48, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 28, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :        , Posbility: 0.0032
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0017
Next Token : match, Posbility: 0.0019
Next Token : (, Posbility: 0.0025
Next Token : if, Posbility: 0.0028
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0003
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 39, Posbility: 0.0001
Next Token : 30, Posbility: 0.0001
Next Token :  29, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 29, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :       , Posbility: 0.0004
Next Token :        , Posbility: 0.0059
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0035
Next Token : match, Posbility: 0.0058
Next Token : (, Posbility: 0.0065
Next Token : if, Posbility: 0.0074
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0005
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : y, Posbility: 0.0007
Next Token : f, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 31, Posbility: 0.0001
Next Token : 20, Posbility: 0.0001
Next Token : 0, Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token : 30, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :     , Posbility: 0.0004
Next Token :       , Posbility: 0.0009
Next Token :        , Posbility: 0.0124
Next Token :         , Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0044
Next Token : (, Posbility: 0.0105
Next Token : match, Posbility: 0.0119
Next Token : if, Posbility: 0.0153
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  v, Posbility: 0.0004
Next Token :  res, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0004
Next Token : y, Posbility: 0.0019
Next Token : f, Posbility: 0.0022
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 41, Posbility: 0.0001
Next Token : 32, Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token : 1, Posbility: 0.0002
Next Token : 31, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  for, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0125
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0005
Next Token :     , Posbility: 0.0010
Next Token :       , Posbility: 0.0015
Next Token :        , Posbility: 0.0292
Next Token :         , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0078
Next Token : match, Posbility: 0.0187
Next Token : (, Posbility: 0.0211
Next Token : if, Posbility: 0.0308
Next Token : let, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0012
Next Token :  res, Posbility: 0.0012
Next Token :  v, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0028
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : _, Posbility: 0.0011
Next Token : f, Posbility: 0.0066
Next Token : y, Posbility: 0.0066
Next Token : x, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0004
Next Token : 32_, Posbility: 0.0005
Next Token : 0, Posbility: 0.0008
Next Token :  =, Posbility: 0.0019
Next Token : 32, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0004
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0085
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :     , Posbility: 0.0006
Next Token :       , Posbility: 0.0010
Next Token :        , Posbility: 0.0179
Next Token :         , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0071
Next Token : (, Posbility: 0.0132
Next Token : match, Posbility: 0.0132
Next Token : if, Posbility: 0.0219
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0006
Next Token :  v, Posbility: 0.0007
Next Token :  res, Posbility: 0.0009
Next Token :  rec, Posbility: 0.0017
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0006
Next Token : (, Posbility: 0.0007
Next Token : y, Posbility: 0.0028
Next Token : f, Posbility: 0.0031
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 0, Posbility: 0.0003
Next Token : 32, Posbility: 0.0004
Next Token :  =, Posbility: 0.0007
Next Token : 33, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :        , Posbility: 0.0041
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0015
Next Token : match, Posbility: 0.0024
Next Token : (, Posbility: 0.0031
Next Token : if, Posbility: 0.0040
Next Token : let, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0004
Next Token : f, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 35, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 33, Posbility: 0.0004
Next Token : 34, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :        , Posbility: 0.0025
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0012
Next Token : match, Posbility: 0.0013
Next Token : (, Posbility: 0.0017
Next Token : if, Posbility: 0.0022
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 36, Posbility: 0.0001
Next Token : 37, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 34, Posbility: 0.0004
Next Token : 35, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :        , Posbility: 0.0046
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0012
Next Token : (, Posbility: 0.0024
Next Token : match, Posbility: 0.0024
Next Token : if, Posbility: 0.0036
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0001
Next Token :  res, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0004
Next Token : f, Posbility: 0.0005
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 34, Posbility: 0.0001
Next Token : 37, Posbility: 0.0002
Next Token : 35, Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : 36, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0017
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : match, Posbility: 0.0010
Next Token : (, Posbility: 0.0015
Next Token : if, Posbility: 0.0017
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 36, Posbility: 0.0000
Next Token : 40, Posbility: 0.0000
Next Token : 38, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 37, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 =
 score:False
Error type: noerr
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :        , Posbility: 0.0012
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0006
Next Token : match, Posbility: 0.0008
Next Token : (, Posbility: 0.0009
Next Token : if, Posbility: 0.0010
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : 48, Posbility: 0.0001
Next Token : 39, Posbility: 0.0001
Next Token : 37, Posbility: 0.0002
Next Token : 38, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0022
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0012
Next Token : match, Posbility: 0.0015
Next Token : (, Posbility: 0.0017
Next Token : if, Posbility: 0.0019
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 37, Posbility: 0.0000
Next Token : 39,, Posbility: 0.0000
Next Token : 40, Posbility: 0.0000
Next Token : 38, Posbility: 0.0001
Next Token : 39, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :        , Posbility: 0.0067
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0035
Next Token : match, Posbility: 0.0045
Next Token : (, Posbility: 0.0051
Next Token : if, Posbility: 0.0074
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0001
Next Token :  v, Posbility: 0.0001
Next Token :  a, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : y, Posbility: 0.0005
Next Token : f, Posbility: 0.0007
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 41, Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token : 39, Posbility: 0.0004
Next Token : 40, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :        , Posbility: 0.0067
Next Token :         , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0039
Next Token : match, Posbility: 0.0057
Next Token : (, Posbility: 0.0065
Next Token : if, Posbility: 0.0084
Next Token : let, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  res, Posbility: 0.0002
Next Token :  v, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : f, Posbility: 0.0010
Next Token : y, Posbility: 0.0010
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 40, Posbility: 0.0000
Next Token : 42, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 41, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :        , Posbility: 0.0036
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0010
Next Token : match, Posbility: 0.0019
Next Token : (, Posbility: 0.0022
Next Token : if, Posbility: 0.0028
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 43, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : 41, Posbility: 0.0003
Next Token : 42, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0022
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : (, Posbility: 0.0015
Next Token : match, Posbility: 0.0015
Next Token : if, Posbility: 0.0017
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 42, Posbility: 0.0000
Next Token : 45, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : 43, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 =
 score:False
Error type: noerr
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0025
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0010
Next Token : match, Posbility: 0.0013
Next Token : (, Posbility: 0.0015
Next Token : if, Posbility: 0.0019
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 43, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 45, Posbility: 0.0001
Next Token : 48, Posbility: 0.0002
Next Token : 44, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0019
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0006
Next Token : match, Posbility: 0.0008
Next Token : (, Posbility: 0.0009
Next Token : if, Posbility: 0.0012
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 47, Posbility: 0.0001
Next Token : 46, Posbility: 0.0001
Next Token : 48, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : 45, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :        , Posbility: 0.0015
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : (, Posbility: 0.0008
Next Token : match, Posbility: 0.0008
Next Token : if, Posbility: 0.0010
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 47, Posbility: 0.0001
Next Token : 45, Posbility: 0.0001
Next Token : 48, Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token : 46, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0013
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0007
Next Token : match, Posbility: 0.0010
Next Token : (, Posbility: 0.0012
Next Token : if, Posbility: 0.0013
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  res, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 46, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : 48, Posbility: 0.0001
Next Token : 47, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0019
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0008
Next Token : match, Posbility: 0.0015
Next Token : (, Posbility: 0.0017
Next Token : if, Posbility: 0.0022
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0000
Next Token :  res, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : f, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x
 score:False
Error type: noerr
---------------------------
Next Token : 48,, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 49, Posbility: 0.0000
Next Token : 47, Posbility: 0.0000
Next Token : 48, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 =
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = x
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = xs in
 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = xs in

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0028
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = xs in
        
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0010
Next Token : (, Posbility: 0.0019
Next Token : match, Posbility: 0.0022
Next Token : if, Posbility: 0.0025
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = xs in
        let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  result, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = xs in
        let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check whether the given array is monotonic or not. *)
let is_monotonic x =
  let rec f x =
    match x with
    | [] -> true
    | x :: xs ->
        let x0 = x in
        let x1 = xs in
        let x2 = xs in
        let x3 = xs in
        let x4 = xs in
        let x5 = xs in
        let x6 = xs in
        let x7 = xs in
        let x8 = xs in
        let x9 = xs in
        let x10 = xs in
        let x11 = xs in
        let x12 = xs in
        let x13 = xs in
        let x14 = xs in
        let x15 = xs in
        let x16 = xs in
        let x17 = xs in
        let x18 = xs in
        let x19 = xs in
        let x20 = xs in
        let x21 = xs in
        let x22 = xs in
        let x23 = xs in
        let x24 = xs in
        let x25 = xs in
        let x26 = xs in
        let x27 = xs in
        let x28 = xs in
        let x29 = xs in
        let x30 = xs in
        let x31 = xs in
        let x32 = xs in
        let x33 = xs in
        let x34 = xs in
        let x35 = xs in
        let x36 = xs in
        let x37 = xs in
        let x38 = xs in
        let x39 = xs in
        let x40 = xs in
        let x41 = xs in
        let x42 = xs in
        let x43 = xs in
        let x44 = xs in
        let x45 = xs in
        let x46 = xs in
        let x47 = xs in
        let x48 = xs in
        let x
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>