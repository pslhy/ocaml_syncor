code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0129
Next Token :  missing, Posbility: 0.0742
Next Token :  find, Posbility: 0.0840
Next Token :  , Posbility: 0.2012
Next Token :  rec, Posbility: 0.4824
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  search, Posbility: 0.0166
Next Token :  loop, Posbility: 0.0273
Next Token :  missing, Posbility: 0.1226
Next Token :  find, Posbility: 0.2285
Next Token :  , Posbility: 0.4277
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0122
Next Token : fi, Posbility: 0.0292
Next Token : f, Posbility: 0.0547
Next Token : min, Posbility: 0.1680
Next Token : smallest, Posbility: 0.5195
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0085
Next Token : -, Posbility: 0.0085
Next Token :  , Posbility: 0.0430
Next Token :  =, Posbility: 0.0488
Next Token : _, Posbility: 0.8672
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0045
Next Token : num, Posbility: 0.0085
Next Token : na, Posbility: 0.0159
Next Token : number, Posbility: 0.0204
Next Token : missing, Posbility: 0.8672
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  number, Posbility: 0.0074
Next Token : (, Posbility: 0.0549
Next Token :  , Posbility: 0.0908
Next Token :  =, Posbility: 0.1494
Next Token : _, Posbility: 0.6719
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0159
Next Token : n, Posbility: 0.0204
Next Token : natural, Posbility: 0.0381
Next Token : num, Posbility: 0.0708
Next Token : number, Posbility: 0.6758
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0271
Next Token :  l, Posbility: 0.0835
Next Token :  =, Posbility: 0.1074
Next Token : _, Posbility: 0.1377
Next Token :  , Posbility: 0.4805
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nums, Posbility: 0.0496
Next Token : lst, Posbility: 0.0815
Next Token : (, Posbility: 0.1523
Next Token : x, Posbility: 0.1523
Next Token : n, Posbility: 0.2852
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0221
Next Token :  acc, Posbility: 0.0251
Next Token :  l, Posbility: 0.0469
Next Token :  , Posbility: 0.2100
Next Token :  =, Posbility: 0.5703
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0031
Next Token :  function, Posbility: 0.0065
Next Token :  match, Posbility: 0.0547
Next Token :  , Posbility: 0.0703
Next Token : 
, Posbility: 0.8555
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0047
Next Token :    , Posbility: 0.0128
Next Token : 	, Posbility: 0.0165
Next Token :     , Posbility: 0.1562
Next Token :   , Posbility: 0.7930
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0056
Next Token : (, Posbility: 0.0104
Next Token : let, Posbility: 0.1113
Next Token : match, Posbility: 0.3438
Next Token : if, Posbility: 0.5000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0018
Next Token :  String, Posbility: 0.0034
Next Token :  !, Posbility: 0.0050
Next Token :  not, Posbility: 0.0136
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0033
Next Token : Int, Posbility: 0.0049
Next Token : List, Posbility: 0.0150
Next Token : (, Posbility: 0.0359
Next Token : n, Posbility: 0.9258
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0282
Next Token :  ==, Posbility: 0.0466
Next Token :  <=, Posbility: 0.2090
Next Token :  , Posbility: 0.3438
Next Token :  =, Posbility: 0.3438
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0020
Next Token :  , Posbility: 0.0151
Next Token :  [], Posbility: 0.0410
Next Token :  1, Posbility: 0.1113
Next Token :  0, Posbility: 0.8242
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0014
Next Token :  , Posbility: 0.0045
Next Token :  ||, Posbility: 0.0065
Next Token : 
, Posbility: 0.0226
Next Token :  then, Posbility: 0.9609
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Some, Posbility: 0.0234
Next Token :  1, Posbility: 0.1738
Next Token :  0, Posbility: 0.1738
Next Token : 
, Posbility: 0.2871
Next Token :  , Posbility: 0.2871
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0256
Next Token : 
, Posbility: 0.0374
Next Token : (), Posbility: 0.0374
Next Token : return, Posbility: 0.2148
Next Token : n, Posbility: 0.5859
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
 score:False
Error type: noerr
---------------------------
Next Token : +1, Posbility: 0.0708
Next Token :  , Posbility: 0.1030
Next Token :  +, Posbility: 0.1504
Next Token :  else, Posbility: 0.1699
Next Token : 
, Posbility: 0.4609
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0005
Next Token :       , Posbility: 0.0006
Next Token :     , Posbility: 0.0028
Next Token :  , Posbility: 0.0036
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  
 score:False
Error type: noerr
---------------------------
Next Token : then, Posbility: 0.0005
Next Token : if, Posbility: 0.0005
Next Token : let, Posbility: 0.0019
Next Token : elif, Posbility: 0.0028
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0021
Next Token :  match, Posbility: 0.0123
Next Token :  {, Posbility: 0.0229
Next Token : 
, Posbility: 0.1924
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0211
Next Token : let, Posbility: 0.0271
Next Token : n, Posbility: 0.0447
Next Token : smallest, Posbility: 0.1768
Next Token : if, Posbility: 0.6992
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0019
Next Token :   , Posbility: 0.0021
Next Token :  is, Posbility: 0.0021
Next Token :  not, Posbility: 0.0084
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0048
Next Token : nth, Posbility: 0.0079
Next Token : List, Posbility: 0.0079
Next Token : (, Posbility: 0.0454
Next Token : n, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0231
Next Token :  %, Posbility: 0.0378
Next Token :  <=, Posbility: 0.0552
Next Token :  =, Posbility: 0.2188
Next Token :  , Posbility: 0.5938
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : %%, Posbility: 0.0022
Next Token : /, Posbility: 0.0052
Next Token : -, Posbility: 0.0161
Next Token : >, Posbility: 0.2852
Next Token : <, Posbility: 0.6836
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0422
Next Token :  1, Posbility: 0.0698
Next Token : >, Posbility: 0.0894
Next Token :  , Posbility: 0.3125
Next Token :  0, Posbility: 0.4004
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0042
Next Token :  , Posbility: 0.0042
Next Token : 
, Posbility: 0.0062
Next Token :  ||, Posbility: 0.0586
Next Token :  then, Posbility: 0.9141
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0129
Next Token :  1, Posbility: 0.0352
Next Token :  0, Posbility: 0.0579
Next Token : 
, Posbility: 0.1572
Next Token :  , Posbility: 0.7031
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0054
Next Token : (, Posbility: 0.0242
Next Token : -, Posbility: 0.0242
Next Token : n, Posbility: 0.2021
Next Token : smallest, Posbility: 0.7031
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  missing, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_
 score:False
Error type: noerr
---------------------------
Next Token : miss, Posbility: 0.0000
Next Token : non, Posbility: 0.0000
Next Token : negative, Posbility: 0.0000
Next Token : number, Posbility: 0.0001
Next Token : missing, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  number, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_
 score:False
Error type: noerr
---------------------------
Next Token : index, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : numbers, Posbility: 0.0001
Next Token : num, Posbility: 0.0001
Next Token : number, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0096
Next Token :  (1, Posbility: 0.0160
Next Token :  ((, Posbility: 0.0160
Next Token : (, Posbility: 0.0713
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number 
 score:False
Error type: noerr
---------------------------
Next Token : abs, Posbility: 0.0007
Next Token : (-1), Posbility: 0.0022
Next Token : -, Posbility: 0.0447
Next Token : n, Posbility: 0.0505
Next Token : (, Posbility: 0.8984
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -1, Posbility: 0.0079
Next Token :  , Posbility: 0.0115
Next Token : 2, Posbility: 0.0131
Next Token : -, Posbility: 0.2969
Next Token : n, Posbility: 0.6289
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0153
Next Token : -1), Posbility: 0.0532
Next Token : +1), Posbility: 0.0879
Next Token :  , Posbility: 0.3066
Next Token :  +, Posbility: 0.5078
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10), Posbility: 0.0029
Next Token :  1, Posbility: 0.0049
Next Token :  2), Posbility: 0.0062
Next Token :  , Posbility: 0.0459
Next Token :  1), Posbility: 0.9219
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0016
Next Token :  +, Posbility: 0.0049
Next Token :  , Posbility: 0.0249
Next Token :  else, Posbility: 0.0249
Next Token : 
, Posbility: 0.9336
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : |, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0018
Next Token :  match, Posbility: 0.0132
Next Token :  {, Posbility: 0.0150
Next Token : 
, Posbility: 0.1416
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0121
Next Token : let, Posbility: 0.0425
Next Token : n, Posbility: 0.0544
Next Token : smallest, Posbility: 0.1157
Next Token : if, Posbility: 0.7539
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0021
Next Token :  list, Posbility: 0.0027
Next Token :  !, Posbility: 0.0093
Next Token :  not, Posbility: 0.0173
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0074
Next Token : nth, Posbility: 0.0108
Next Token : List, Posbility: 0.0293
Next Token : (, Posbility: 0.0549
Next Token : n, Posbility: 0.8594
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0364
Next Token :  %, Posbility: 0.0466
Next Token :  >=, Posbility: 0.0874
Next Token :  =, Posbility: 0.2695
Next Token :  , Posbility: 0.4434
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0011
Next Token : ≥, Posbility: 0.0023
Next Token : -, Posbility: 0.0120
Next Token : <, Posbility: 0.1455
Next Token : >, Posbility: 0.8359
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  100, Posbility: 0.0095
Next Token :  max, Posbility: 0.0095
Next Token :  1, Posbility: 0.0330
Next Token :  , Posbility: 0.2441
Next Token :  0, Posbility: 0.6641
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0016
Next Token : 
, Posbility: 0.0156
Next Token :  and, Posbility: 0.0156
Next Token :  &&, Posbility: 0.1147
Next Token :  then, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0037
Next Token :  {, Posbility: 0.0047
Next Token :  1, Posbility: 0.0128
Next Token : 
, Posbility: 0.2578
Next Token :  , Posbility: 0.6992
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0098
Next Token : let, Posbility: 0.0111
Next Token : if, Posbility: 0.0208
Next Token : n, Posbility: 0.0498
Next Token : smallest, Posbility: 0.8828
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest
 score:False
Error type: noerr
---------------------------
Next Token : Missing, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  missing, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_
 score:False
Error type: noerr
---------------------------
Next Token : non, Posbility: 0.0000
Next Token : miss, Posbility: 0.0000
Next Token : existing, Posbility: 0.0001
Next Token : number, Posbility: 0.0003
Next Token : missing, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  number, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_
 score:False
Error type: noerr
---------------------------
Next Token : value, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : num, Posbility: 0.0000
Next Token : numbers, Posbility: 0.0000
Next Token : number, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0038
Next Token : (, Posbility: 0.0071
Next Token :  (1, Posbility: 0.0091
Next Token :  ((, Posbility: 0.0408
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number 
 score:False
Error type: noerr
---------------------------
Next Token : (1), Posbility: 0.0014
Next Token : (-1), Posbility: 0.0030
Next Token : (0), Posbility: 0.0064
Next Token : n, Posbility: 0.0369
Next Token : (, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 0, Posbility: 0.0016
Next Token : smallest, Posbility: 0.0057
Next Token : -, Posbility: 0.0065
Next Token : 2, Posbility: 0.0107
Next Token : n, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0021
Next Token :  -1), Posbility: 0.0023
Next Token :  +, Posbility: 0.0221
Next Token : -1), Posbility: 0.0284
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : >, Posbility: 0.0000
Next Token : ^, Posbility: 0.0002
Next Token : /, Posbility: 0.0006
Next Token : −, Posbility: 0.0017
Next Token : -, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token :  1);, Posbility: 0.0009
Next Token :  2), Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  1), Posbility: 0.9961
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n - 1)
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0312
Next Token :  else, Posbility: 0.0403
Next Token :  +, Posbility: 0.0403
Next Token : 

, Posbility: 0.0586
Next Token : 
, Posbility: 0.8086
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n - 1)

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0067
Next Token : else, Posbility: 0.0067
Next Token :     , Posbility: 0.0143
Next Token : let, Posbility: 0.0143
Next Token :   , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n - 1)
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : //, Posbility: 0.0002
Next Token : then, Posbility: 0.0005
Next Token : |, Posbility: 0.0474
Next Token : else, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n - 1)
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0188
Next Token :  0, Posbility: 0.0352
Next Token :  fail, Posbility: 0.0840
Next Token : 
, Posbility: 0.1079
Next Token :  , Posbility: 0.7070
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n - 1)
  else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0413
Next Token : if, Posbility: 0.0679
Next Token : smallest, Posbility: 0.1123
Next Token : raise, Posbility: 0.1436
Next Token : n, Posbility: 0.4434
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n - 1)
  else n
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0457
Next Token :  +, Posbility: 0.0586
Next Token :  , Posbility: 0.0664
Next Token : 
, Posbility: 0.2314
Next Token : 

, Posbility: 0.5547
---------------------------
code:
 (* Write a  function to find the smallest missing number from a sorted list of natural numbers. *)
let rec smallest_missing_number n =
  if n = 0 then n
  else if n < 0 then smallest_missing_number (n + 1)
  else if n > 0 then smallest_missing_number (n - 1)
  else n


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :31.089603185653687

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>