code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  all, Posbility: 0.0091
Next Token :  get, Posbility: 0.0591
Next Token :  extract, Posbility: 0.0591
Next Token :  rec, Posbility: 0.3848
Next Token :  , Posbility: 0.3848
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : coords, Posbility: 0.0299
Next Token : adj, Posbility: 0.0435
Next Token : neighbors, Posbility: 0.0435
Next Token : coord, Posbility: 0.0493
Next Token : adjacent, Posbility: 0.4668
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0051
Next Token :  , Posbility: 0.0791
Next Token : s, Posbility: 0.2148
Next Token :  =, Posbility: 0.2148
Next Token : _, Posbility: 0.4551
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : positions, Posbility: 0.0135
Next Token : coord, Posbility: 0.0286
Next Token : tuple, Posbility: 0.0417
Next Token : coordinates, Posbility: 0.3066
Next Token : coords, Posbility: 0.4473
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0122
Next Token :  a, Posbility: 0.0201
Next Token : _, Posbility: 0.0703
Next Token :  =, Posbility: 0.4043
Next Token :  , Posbility: 0.4043
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : coords, Posbility: 0.0527
Next Token : c, Posbility: 0.0596
Next Token : x, Posbility: 0.0869
Next Token : coord, Posbility: 0.2354
Next Token : (, Posbility: 0.3887
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : a, Posbility: 0.0206
Next Token : i, Posbility: 0.0206
Next Token : coord, Posbility: 0.0206
Next Token : c, Posbility: 0.0562
Next Token : x, Posbility: 0.6836
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0143
Next Token : :, Posbility: 0.0236
Next Token : 1,, Posbility: 0.0388
Next Token :  , Posbility: 0.1055
Next Token : ,, Posbility: 0.7812
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : y, Posbility: 0.2676
Next Token :  , Posbility: 0.7305
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : r, Posbility: 0.0001
Next Token : z, Posbility: 0.0002
Next Token : x, Posbility: 0.0004
Next Token : _, Posbility: 0.0052
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : 1,, Posbility: 0.0002
Next Token : ):, Posbility: 0.0018
Next Token : ,, Posbility: 0.2676
Next Token : ), Posbility: 0.7305
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0019
Next Token :  a, Posbility: 0.0025
Next Token :  tuple, Posbility: 0.0067
Next Token :  , Posbility: 0.1738
Next Token :  =, Posbility: 0.7773
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0055
Next Token :  match, Posbility: 0.0080
Next Token :  [, Posbility: 0.0317
Next Token :  , Posbility: 0.1104
Next Token : 
, Posbility: 0.8164
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0043
Next Token : 	, Posbility: 0.0090
Next Token :    , Posbility: 0.0116
Next Token :     , Posbility: 0.1416
Next Token :   , Posbility: 0.8164
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0674
Next Token : List, Posbility: 0.0674
Next Token : match, Posbility: 0.0674
Next Token : [, Posbility: 0.2070
Next Token : let, Posbility: 0.4980
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pos, Posbility: 0.0063
Next Token :  offset, Posbility: 0.0091
Next Token :  open, Posbility: 0.0864
Next Token :  , Posbility: 0.3418
Next Token :  rec, Posbility: 0.3867
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0386
Next Token :  go, Posbility: 0.0437
Next Token :  rec, Posbility: 0.0815
Next Token :  loop, Posbility: 0.1523
Next Token :  , Posbility: 0.4688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0513
Next Token : adjacent, Posbility: 0.0581
Next Token : f, Posbility: 0.0845
Next Token : aux, Posbility: 0.1084
Next Token : helper, Posbility: 0.1396
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0137
Next Token :  [, Posbility: 0.0155
Next Token :  i, Posbility: 0.0476
Next Token :  =, Posbility: 0.1465
Next Token :  , Posbility: 0.6562
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : coords, Posbility: 0.0410
Next Token : coord, Posbility: 0.0674
Next Token : (), Posbility: 0.0674
Next Token : (, Posbility: 0.3027
Next Token : x, Posbility: 0.3027
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0082
Next Token : _, Posbility: 0.0195
Next Token : s, Posbility: 0.0251
Next Token :  =, Posbility: 0.0771
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0004
Next Token : n, Posbility: 0.0004
Next Token : (, Posbility: 0.0040
Next Token : x, Posbility: 0.0052
Next Token : y, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0127
Next Token :  acc, Posbility: 0.0238
Next Token :  i, Posbility: 0.0391
Next Token :  , Posbility: 0.2891
Next Token :  =, Posbility: 0.4766
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0009
Next Token :  function, Posbility: 0.0044
Next Token :  match, Posbility: 0.0082
Next Token :  , Posbility: 0.0288
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0016
Next Token :    , Posbility: 0.0050
Next Token :       , Posbility: 0.0107
Next Token :   , Posbility: 0.0226
Next Token :     , Posbility: 0.9609
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0154
Next Token : (, Posbility: 0.0325
Next Token : let, Posbility: 0.1133
Next Token : match, Posbility: 0.3965
Next Token : if, Posbility: 0.3965
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0062
Next Token :  Not, Posbility: 0.0070
Next Token :  !, Posbility: 0.0102
Next Token :  not, Posbility: 0.0354
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0012
Next Token : let, Posbility: 0.0012
Next Token : y, Posbility: 0.0830
Next Token : (, Posbility: 0.1069
Next Token : x, Posbility: 0.7891
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0752
Next Token :  <=, Posbility: 0.0752
Next Token :  ==, Posbility: 0.1240
Next Token :  , Posbility: 0.3379
Next Token :  =, Posbility: 0.3379
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0031
Next Token :  -1, Posbility: 0.0231
Next Token :  1, Posbility: 0.0231
Next Token :  , Posbility: 0.4648
Next Token :  0, Posbility: 0.4648
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  or, Posbility: 0.0309
Next Token :  then, Posbility: 0.1221
Next Token :  ||, Posbility: 0.1572
Next Token :  and, Posbility: 0.1777
Next Token :  &&, Posbility: 0.4824
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token :  !, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : abs, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : x, Posbility: 0.0019
Next Token : (, Posbility: 0.0032
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0015
Next Token :  >=, Posbility: 0.0024
Next Token :  ==, Posbility: 0.0065
Next Token :  , Posbility: 0.0177
Next Token :  =, Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0003
Next Token :  , Posbility: 0.0024
Next Token :  -1, Posbility: 0.0024
Next Token :  1, Posbility: 0.0067
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0050
Next Token :  , Posbility: 0.0082
Next Token : 
, Posbility: 0.0417
Next Token :  ||, Posbility: 0.1001
Next Token :  then, Posbility: 0.8359
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0251
Next Token :  [, Posbility: 0.0532
Next Token : 
, Posbility: 0.2383
Next Token :  [], Posbility: 0.3066
Next Token :  , Posbility: 0.3066
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ();, Posbility: 0.0645
Next Token : x, Posbility: 0.1201
Next Token : (, Posbility: 0.1357
Next Token : return, Posbility: 0.1748
Next Token : (), Posbility: 0.2539
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0046
Next Token :  |, Posbility: 0.0046
Next Token :  , Posbility: 0.0234
Next Token :  else, Posbility: 0.1738
Next Token : 
, Posbility: 0.7773
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :       , Posbility: 0.0015
Next Token :    , Posbility: 0.0041
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : els, Posbility: 0.0004
Next Token : if, Posbility: 0.0010
Next Token : |, Posbility: 0.0095
Next Token : elif, Posbility: 0.0178
Next Token : else, Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0019
Next Token :  match, Posbility: 0.0110
Next Token :  {, Posbility: 0.0110
Next Token : 
, Posbility: 0.1953
Next Token :  , Posbility: 0.7695
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0172
Next Token : helper, Posbility: 0.0250
Next Token : x, Posbility: 0.0413
Next Token : (, Posbility: 0.1118
Next Token : if, Posbility: 0.7305
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token :  !, Posbility: 0.0008
Next Token :  ((, Posbility: 0.0010
Next Token :  not, Posbility: 0.0017
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0003
Next Token : abs, Posbility: 0.0003
Next Token : (, Posbility: 0.0159
Next Token : y, Posbility: 0.1167
Next Token : x, Posbility: 0.8633
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0102
Next Token :  ==, Posbility: 0.0216
Next Token :  +, Posbility: 0.0216
Next Token :  , Posbility: 0.2051
Next Token :  =, Posbility: 0.7148
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0064
Next Token :  , Posbility: 0.0176
Next Token :  1, Posbility: 0.0176
Next Token :  0, Posbility: 0.9570
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0042
Next Token : 
, Posbility: 0.0047
Next Token :  ||, Posbility: 0.1216
Next Token :  then, Posbility: 0.4258
Next Token :  &&, Posbility: 0.4258
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0003
Next Token :  not, Posbility: 0.0004
Next Token :  0, Posbility: 0.0012
Next Token :  !, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0001
Next Token : !(, Posbility: 0.0003
Next Token : x, Posbility: 0.0005
Next Token : (, Posbility: 0.0110
Next Token : y, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0055
Next Token :  >=, Posbility: 0.0148
Next Token :  !=, Posbility: 0.1094
Next Token :  =, Posbility: 0.2314
Next Token :  , Posbility: 0.6289
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0003
Next Token : ^, Posbility: 0.0007
Next Token : -, Posbility: 0.0012
Next Token : <, Posbility: 0.3203
Next Token : >, Posbility: 0.6758
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token :  -1, Posbility: 0.0009
Next Token :  1, Posbility: 0.0067
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0060
Next Token :  &&, Posbility: 0.0099
Next Token : 
, Posbility: 0.0127
Next Token :  ||, Posbility: 0.0732
Next Token :  then, Posbility: 0.8906
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0070
Next Token :  ((, Posbility: 0.0275
Next Token :  [, Posbility: 0.0311
Next Token : 
, Posbility: 0.2031
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0166
Next Token : (), Posbility: 0.0352
Next Token : y, Posbility: 0.0452
Next Token : helper, Posbility: 0.2930
Next Token : (, Posbility: 0.5469
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0131
Next Token :  , Posbility: 0.0168
Next Token : helper, Posbility: 0.1245
Next Token : y, Posbility: 0.2988
Next Token : x, Posbility: 0.4922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0030
Next Token : ',, Posbility: 0.0034
Next Token :  , Posbility: 0.0220
Next Token :  +, Posbility: 0.0282
Next Token : ,, Posbility: 0.9336
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0,, Posbility: 0.0033
Next Token :  1), Posbility: 0.0055
Next Token : y, Posbility: 0.0117
Next Token :  0), Posbility: 0.0359
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0021
Next Token : -, Posbility: 0.0057
Next Token : helper, Posbility: 0.0156
Next Token : (, Posbility: 0.1152
Next Token : y, Posbility: 0.8516
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0099
Next Token : ), Posbility: 0.0571
Next Token :  +, Posbility: 0.0571
Next Token : -1), Posbility: 0.1553
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ^, Posbility: 0.0001
Next Token : +1), Posbility: 0.0001
Next Token : −, Posbility: 0.0012
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0022
Next Token :  1),, Posbility: 0.0162
Next Token :  , Posbility: 0.0442
Next Token :  1);, Posbility: 0.0442
Next Token :  1), Posbility: 0.8867
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0023
Next Token :  else, Posbility: 0.0089
Next Token :  |, Posbility: 0.0275
Next Token :  , Posbility: 0.0398
Next Token : 
, Posbility: 0.9062
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :             , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :         , Posbility: 0.0006
Next Token :       , Posbility: 0.0006
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : els, Posbility: 0.0006
Next Token : |, Posbility: 0.0007
Next Token : elif, Posbility: 0.0019
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : (), Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : helper, Posbility: 0.0003
Next Token : if, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : xy, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : (, Posbility: 0.0010
Next Token : y, Posbility: 0.1826
Next Token : x, Posbility: 0.8164
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0005
Next Token :  >=, Posbility: 0.0019
Next Token :  ==, Posbility: 0.0021
Next Token :  =, Posbility: 0.1475
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : <, Posbility: 0.0229
Next Token : >, Posbility: 0.9766
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  and, Posbility: 0.0006
Next Token :  then, Posbility: 0.0017
Next Token :  &&, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Y, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  , Posbility: 0.0031
Next Token :  ==, Posbility: 0.0067
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :   , Posbility: 0.0004
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  (*, Posbility: 0.0003
Next Token : 
, Posbility: 0.0010
Next Token :  ((, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : adjacent, Posbility: 0.0001
Next Token : (), Posbility: 0.0002
Next Token : x, Posbility: 0.0005
Next Token : helper, Posbility: 0.0015
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1,, Posbility: 0.0003
Next Token :  +, Posbility: 0.0009
Next Token : ,, Posbility: 0.0010
Next Token : -1,, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : +1,, Posbility: 0.0000
Next Token : −, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0001
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 1,0, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token : 1,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token :  0), Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : helper, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0009
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0000
Next Token : );, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  +, Posbility: 0.0015
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  else, Posbility: 0.0002
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :    , Posbility: 0.0003
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : elif, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0007
Next Token :  (*, Posbility: 0.0011
Next Token :  ((, Posbility: 0.0031
Next Token : 
, Posbility: 0.0201
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0017
Next Token : (), Posbility: 0.0126
Next Token : helper, Posbility: 0.0342
Next Token : (, Posbility: 0.2539
Next Token : if, Posbility: 0.6875
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  !, Posbility: 0.0002
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : !(, Posbility: 0.0001
Next Token : (, Posbility: 0.0025
Next Token : y, Posbility: 0.0067
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0020
Next Token :  ==, Posbility: 0.0042
Next Token :  >=, Posbility: 0.0054
Next Token :  =, Posbility: 0.1797
Next Token :  , Posbility: 0.8047
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0009
Next Token : <, Posbility: 0.0293
Next Token : >, Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  then, Posbility: 0.0003
Next Token :  and, Posbility: 0.0004
Next Token :  &&, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : !(, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0005
Next Token :  =, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : <, Posbility: 0.0086
Next Token : >, Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0007
Next Token :  &&, Posbility: 0.0032
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0006
Next Token :  [, Posbility: 0.0014
Next Token :  ((, Posbility: 0.0398
Next Token : 
, Posbility: 0.1572
Next Token :  , Posbility: 0.7969
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0005
Next Token : (), Posbility: 0.0009
Next Token : 
, Posbility: 0.0014
Next Token : helper, Posbility: 0.0471
Next Token : (, Posbility: 0.9453
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : max, Posbility: 0.0000
Next Token :  , Posbility: 0.0007
Next Token : 
, Posbility: 0.0008
Next Token : helper, Posbility: 0.0012
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1,, Posbility: 0.0003
Next Token :  +, Posbility: 0.0006
Next Token : -1,, Posbility: 0.0026
Next Token : ,, Posbility: 0.0598
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : >, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1;, Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3,, Posbility: 0.0000
Next Token : 1",, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0002
Next Token : 1,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  --, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0006
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1), Posbility: 0.0003
Next Token :  -1), Posbility: 0.0004
Next Token : ), Posbility: 0.0007
Next Token :  +, Posbility: 0.0041
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : +1), Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  1),, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  1);, Posbility: 0.0025
Next Token :  1), Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0045
Next Token :  in, Posbility: 0.0051
Next Token : 

, Posbility: 0.0065
Next Token :  |, Posbility: 0.0074
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0005
Next Token :         , Posbility: 0.0007
Next Token :    , Posbility: 0.0074
Next Token :   , Posbility: 0.0228
Next Token :     , Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : helper, Posbility: 0.0006
Next Token : let, Posbility: 0.0019
Next Token : |, Posbility: 0.0109
Next Token : else, Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0042
Next Token :  error, Posbility: 0.0115
Next Token :  fail, Posbility: 0.0243
Next Token : 
, Posbility: 0.0312
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0486
Next Token : helper, Posbility: 0.0708
Next Token : (, Posbility: 0.1162
Next Token : (), Posbility: 0.1162
Next Token : if, Posbility: 0.5898
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  !, Posbility: 0.0002
Next Token :  not, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : (, Posbility: 0.0024
Next Token : y, Posbility: 0.0179
Next Token : x, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0017
Next Token :  >=, Posbility: 0.0022
Next Token :  ==, Posbility: 0.0047
Next Token :  =, Posbility: 0.3730
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0005
Next Token : >, Posbility: 0.4688
Next Token : <, Posbility: 0.5312
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  N, Posbility: 0.0083
Next Token :  max, Posbility: 0.0083
Next Token :  1, Posbility: 0.0226
Next Token :  , Posbility: 0.4551
Next Token :  0, Posbility: 0.4551
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token :  ||, Posbility: 0.0032
Next Token :  &&, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0002
Next Token :  >=, Posbility: 0.0007
Next Token :  ==, Posbility: 0.0018
Next Token :  , Posbility: 0.2676
Next Token :  =, Posbility: 0.7305
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0001
Next Token :  1, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  &&, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  ||, Posbility: 0.0003
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0006
Next Token :  None, Posbility: 0.0009
Next Token : 
, Posbility: 0.0010
Next Token :  ((, Posbility: 0.0036
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0019
Next Token : (0,, Posbility: 0.0019
Next Token : (), Posbility: 0.0045
Next Token : helper, Posbility: 0.0052
Next Token : (, Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : -, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0001
Next Token : +1,, Posbility: 0.0003
Next Token :  , Posbility: 0.0113
Next Token :  +, Posbility: 0.3730
Next Token : ,, Posbility: 0.6133
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token : y, Posbility: 0.0003
Next Token :  1), Posbility: 0.0007
Next Token :  0), Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : +1), Posbility: 0.0002
Next Token :  , Posbility: 0.0132
Next Token :  +, Posbility: 0.2656
Next Token : ), Posbility: 0.7227
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0002
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token :  else, Posbility: 0.0013
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :    , Posbility: 0.0003
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : elif, Posbility: 0.0000
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token :  fail, Posbility: 0.0008
Next Token : 
, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0056
Next Token : assert, Posbility: 0.0056
Next Token : helper, Posbility: 0.0413
Next Token : (, Posbility: 0.1123
Next Token : if, Posbility: 0.8281
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  not, Posbility: 0.0000
Next Token :  !, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : (, Posbility: 0.0009
Next Token : y, Posbility: 0.0032
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0003
Next Token :  >=, Posbility: 0.0010
Next Token :  <=, Posbility: 0.0031
Next Token :  =, Posbility: 0.0292
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token : ><, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : >, Posbility: 0.0293
Next Token : <, Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  ||, Posbility: 0.0002
Next Token :  &&, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  >=, Posbility: 0.0003
Next Token :  =, Posbility: 0.0022
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ≤, Posbility: 0.0000
Next Token : ><, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : <, Posbility: 0.2695
Next Token : >, Posbility: 0.7305
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0002
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  None, Posbility: 0.0001
Next Token : 
, Posbility: 0.0012
Next Token :  ((, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : (0,, Posbility: 0.0012
Next Token : helper, Posbility: 0.0140
Next Token : (, Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : helper, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : +1,, Posbility: 0.0002
Next Token :  , Posbility: 0.0327
Next Token :  +, Posbility: 0.3105
Next Token : ,, Posbility: 0.6562
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1), Posbility: 0.0001
Next Token : -1), Posbility: 0.0003
Next Token : ), Posbility: 0.0009
Next Token :  +, Posbility: 0.2676
Next Token :  , Posbility: 0.7305
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : −, Posbility: 0.0000
Next Token : -2, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : +1), Posbility: 0.0002
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1);, Posbility: 0.0000
Next Token :  1),, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  2), Posbility: 0.0001
Next Token :  1), Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  else, Posbility: 0.0007
Next Token :  in, Posbility: 0.0007
Next Token : 

, Posbility: 0.0022
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0028
Next Token :    , Posbility: 0.0067
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0007
Next Token : |, Posbility: 0.0024
Next Token : let, Posbility: 0.0024
Next Token : helper, Posbility: 0.0040
Next Token : else, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0041
Next Token : 
, Posbility: 0.0233
Next Token :  error, Posbility: 0.0233
Next Token :  fail, Posbility: 0.0559
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0547
Next Token : (, Posbility: 0.0620
Next Token : helper, Posbility: 0.0620
Next Token : (), Posbility: 0.0903
Next Token : if, Posbility: 0.6680
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0001
Next Token :  !, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  not, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : !(, Posbility: 0.0003
Next Token : (, Posbility: 0.0039
Next Token : y, Posbility: 0.0292
Next Token : x, Posbility: 0.9648
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0041
Next Token :  <=, Posbility: 0.0087
Next Token :  >=, Posbility: 0.0087
Next Token :  =, Posbility: 0.3691
Next Token :  , Posbility: 0.6094
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ≤, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : >, Posbility: 0.2227
Next Token : <, Posbility: 0.7773
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  -1, Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  and, Posbility: 0.0002
Next Token :  ||, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  &&, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  !, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  =, Posbility: 0.0085
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : >, Posbility: 0.0052
Next Token : <, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  &&, Posbility: 0.0005
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0010
Next Token :  ((, Posbility: 0.0010
Next Token : 
, Posbility: 0.0017
Next Token :  None, Posbility: 0.0109
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0011
Next Token : x, Posbility: 0.0018
Next Token : helper, Posbility: 0.0275
Next Token : (), Posbility: 0.0581
Next Token : (, Posbility: 0.9102
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : None, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0001
Next Token : +1,, Posbility: 0.0002
Next Token :  , Posbility: 0.0996
Next Token :  +, Posbility: 0.1641
Next Token : ,, Posbility: 0.7344
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1), Posbility: 0.0000
Next Token :  1), Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token :  0), Posbility: 0.0015
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 0.0005
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : );, Posbility: 0.0001
Next Token : +1), Posbility: 0.0011
Next Token :  , Posbility: 0.0352
Next Token :  +, Posbility: 0.2598
Next Token : ), Posbility: 0.7031
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0075
Next Token :  in, Posbility: 0.0075
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :    , Posbility: 0.0251
Next Token :   , Posbility: 0.0286
Next Token :     , Posbility: 0.9453
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0012
Next Token : helper, Posbility: 0.0019
Next Token : let, Posbility: 0.0028
Next Token : |, Posbility: 0.0066
Next Token : else, Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  un, Posbility: 0.0020
Next Token :  error, Posbility: 0.0283
Next Token : 
, Posbility: 0.0598
Next Token :  fail, Posbility: 0.0598
Next Token :  , Posbility: 0.8281
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0732
Next Token : assert, Posbility: 0.0942
Next Token : helper, Posbility: 0.1064
Next Token : (), Posbility: 0.1367
Next Token : if, Posbility: 0.4785
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  0, Posbility: 0.0003
Next Token :  !, Posbility: 0.0005
Next Token :  not, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0003
Next Token : !(, Posbility: 0.0003
Next Token : (, Posbility: 0.0063
Next Token : y, Posbility: 0.0471
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0013
Next Token :  ==, Posbility: 0.0032
Next Token :  >=, Posbility: 0.0112
Next Token :  =, Posbility: 0.3711
Next Token :  , Posbility: 0.6094
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ≥, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : <, Posbility: 0.1484
Next Token : >, Posbility: 0.8516
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x >
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  -1, Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  then, Posbility: 0.0007
Next Token :  and, Posbility: 0.0008
Next Token :  ||, Posbility: 0.0008
Next Token :  &&, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  !, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : !(, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 0.0025
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0004
Next Token :  >=, Posbility: 0.0005
Next Token :  ==, Posbility: 0.0007
Next Token :  =, Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : >, Posbility: 0.0179
Next Token : <, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  &&, Posbility: 0.0002
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0003
Next Token :  (*, Posbility: 0.0003
Next Token : 
, Posbility: 0.0017
Next Token :  ((, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0001
Next Token : adjacent, Posbility: 0.0003
Next Token : (), Posbility: 0.0004
Next Token : helper, Posbility: 0.0140
Next Token : (, Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  -1,, Posbility: 0.0009
Next Token : -1,, Posbility: 0.0010
Next Token :  +, Posbility: 0.0447
Next Token : ,, Posbility: 0.0574
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : +1,, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,0, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0001
Next Token : 1,, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  0), Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : )), Posbility: 0.0000
Next Token : );, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  else, Posbility: 0.0017
Next Token :  in, Posbility: 0.0031
Next Token : 

, Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :    , Posbility: 0.0155
Next Token :   , Posbility: 0.0255
Next Token :     , Posbility: 0.9570
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : helper, Posbility: 0.0019
Next Token : let, Posbility: 0.0022
Next Token : |, Posbility: 0.0075
Next Token : else, Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  un, Posbility: 0.0024
Next Token :  error, Posbility: 0.0292
Next Token : 
, Posbility: 0.0481
Next Token :  fail, Posbility: 0.0481
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : raise, Posbility: 0.0596
Next Token : (, Posbility: 0.0767
Next Token : (), Posbility: 0.0981
Next Token : assert, Posbility: 0.1260
Next Token : if, Posbility: 0.5664
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token :  !, Posbility: 0.0005
Next Token :  not, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : !(, Posbility: 0.0002
Next Token : (, Posbility: 0.0039
Next Token : y, Posbility: 0.0371
Next Token : x, Posbility: 0.9570
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0027
Next Token :  ==, Posbility: 0.0045
Next Token :  <=, Posbility: 0.0095
Next Token :  =, Posbility: 0.3145
Next Token :  , Posbility: 0.6680
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ≤, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : >, Posbility: 0.0850
Next Token : <, Posbility: 0.9141
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token :  -1, Posbility: 0.0001
Next Token :  1, Posbility: 0.0009
Next Token :  , Posbility: 0.0067
Next Token :  0, Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  and, Posbility: 0.0002
Next Token :  ||, Posbility: 0.0003
Next Token :  &&, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 &&
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0003
Next Token :  >=, Posbility: 0.0004
Next Token :  ==, Posbility: 0.0005
Next Token :  =, Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ><, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token : >, Posbility: 0.0601
Next Token : <, Posbility: 0.9414
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  -1, Posbility: 0.0002
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  else, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0002
Next Token :  then, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  error, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token :  None, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0004
Next Token : x, Posbility: 0.0005
Next Token : (), Posbility: 0.0019
Next Token : helper, Posbility: 0.0022
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -1,, Posbility: 0.0000
Next Token : +1,, Posbility: 0.0000
Next Token :  , Posbility: 0.0067
Next Token :  +, Posbility: 0.0067
Next Token : ,, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1), Posbility: 0.0000
Next Token :  0), Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : +1), Posbility: 0.0001
Next Token : );, Posbility: 0.0005
Next Token :  +, Posbility: 0.0015
Next Token :  , Posbility: 0.0041
Next Token : ), Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  in, Posbility: 0.0108
Next Token : 

, Posbility: 0.0178
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0003
Next Token :         , Posbility: 0.0003
Next Token :    , Posbility: 0.0747
Next Token :   , Posbility: 0.1230
Next Token :     , Posbility: 0.8008
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0034
Next Token : (, Posbility: 0.0044
Next Token : let, Posbility: 0.0056
Next Token : |, Posbility: 0.0325
Next Token : else, Posbility: 0.9453
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  un, Posbility: 0.0028
Next Token :  error, Posbility: 0.0830
Next Token : 
, Posbility: 0.0942
Next Token :  fail, Posbility: 0.0942
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0432
Next Token : (), Posbility: 0.1514
Next Token : raise, Posbility: 0.1709
Next Token : if, Posbility: 0.2490
Next Token : assert, Posbility: 0.2832
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  False, Posbility: 0.0064
Next Token :  , Posbility: 0.0093
Next Token : _, Posbility: 0.0093
Next Token :  !, Posbility: 0.0119
Next Token :  false, Posbility: 0.9453
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0160
Next Token :  with, Posbility: 0.0232
Next Token : 

, Posbility: 0.0337
Next Token : ;, Posbility: 0.1177
Next Token : 
, Posbility: 0.7695
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0011
Next Token :    , Posbility: 0.0104
Next Token :     , Posbility: 0.0221
Next Token :  , Posbility: 0.0250
Next Token :   , Posbility: 0.9414
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0022
Next Token : helper, Posbility: 0.0025
Next Token :  in, Posbility: 0.0037
Next Token : end, Posbility: 0.0137
Next Token : in, Posbility: 0.9648
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :   , Posbility: 0.0007
Next Token : 

, Posbility: 0.0058
Next Token :  , Posbility: 0.0201
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :    , Posbility: 0.0007
Next Token :     , Posbility: 0.0124
Next Token :   , Posbility: 0.9844
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0261
Next Token : x, Posbility: 0.0334
Next Token : (, Posbility: 0.0908
Next Token : let, Posbility: 0.2188
Next Token : helper, Posbility: 0.5234
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  helper
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0039
Next Token :  ~, Posbility: 0.0039
Next Token :  0, Posbility: 0.0082
Next Token : 
, Posbility: 0.0198
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  helper 
 score:False
Error type: noerr
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token : y, Posbility: 0.0016
Next Token : (, Posbility: 0.0371
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  helper x
 score:False
Error type: noerr
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  ~, Posbility: 0.0003
Next Token :  0, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  helper x 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token : (, Posbility: 0.0019
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  helper x y
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0085
Next Token :  =, Posbility: 0.0085
Next Token : ;, Posbility: 0.0232
Next Token : 

, Posbility: 0.4648
Next Token : 
, Posbility: 0.4648
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  helper x y

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0256
Next Token : ```, Posbility: 0.0309
Next Token : ;, Posbility: 0.0698
Next Token :   , Posbility: 0.0742
Next Token : 

, Posbility: 0.3535
---------------------------
code:
 (* Write a function to extract all the adjacent coordinates of the given coordinate tuple. *)
let adjacent_coords (x, y) =
  let rec helper x y =
    if x = 0 && y = 0 then ()
    else if x = 0 && y > 0 then (x, y - 1)
    else if x > 0 && y = 0 then (x - 1, y)
    else if x > 0 && y > 0 then (x - 1, y - 1)
    else if x < 0 && y = 0 then (x, y)
    else if x < 0 && y > 0 then (x, y - 1)
    else if x < 0 && y < 0 then (x, y)
    else if x > 0 && y < 0 then (x - 1, y)
    else if x < 0 && y < 0 then (x, y)
    else assert false
  in
  helper x y



 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :109.3578028678894

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>