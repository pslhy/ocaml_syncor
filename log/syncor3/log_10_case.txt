code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  has, Posbility: 0.0371
Next Token :  rec, Posbility: 0.0889
Next Token :  is, Posbility: 0.1885
Next Token :  contains, Posbility: 0.2422
Next Token :  , Posbility: 0.2422
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : split, Posbility: 0.0216
Next Token : s, Posbility: 0.0315
Next Token : end, Posbility: 0.0405
Next Token : underscore, Posbility: 0.0972
Next Token : _, Posbility: 0.2324
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : is, Posbility: 0.0337
Next Token : contains, Posbility: 0.0383
Next Token :  , Posbility: 0.0432
Next Token : _, Posbility: 0.0432
Next Token :  =, Posbility: 0.5273
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0078
Next Token :  open, Posbility: 0.0186
Next Token :  String, Posbility: 0.0447
Next Token : 
, Posbility: 0.3301
Next Token :  , Posbility: 0.4805
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0557
Next Token : print, Posbility: 0.0630
Next Token : let, Posbility: 0.0718
Next Token : Printf, Posbility: 0.0918
Next Token : assert, Posbility: 0.1719
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (<, Posbility: 0.0400
Next Token :  String, Posbility: 0.0513
Next Token : 
, Posbility: 0.0659
Next Token : _, Posbility: 0.1230
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Is, Posbility: 0.0030
Next Token : @@, Posbility: 0.0034
Next Token : <, Posbility: 0.0034
Next Token : 
, Posbility: 0.0071
Next Token : (, Posbility: 0.9375
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : 
, Posbility: 0.0415
Next Token : is, Posbility: 0.0469
Next Token : fun, Posbility: 0.0603
Next Token : contains, Posbility: 0.0684
Next Token : String, Posbility: 0.1641
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0034
Next Token : Contains, Posbility: 0.0034
Next Token : s, Posbility: 0.0093
Next Token : _, Posbility: 0.1133
Next Token : ., Posbility: 0.8398
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0330
Next Token : is, Posbility: 0.0544
Next Token : iter, Posbility: 0.1152
Next Token : length, Posbility: 0.1904
Next Token : contains, Posbility: 0.2158
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0161
Next Token :  ', Posbility: 0.0266
Next Token :  , Posbility: 0.1055
Next Token :  ", Posbility: 0.3242
Next Token : _, Posbility: 0.4727
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : all, Posbility: 0.0435
Next Token : seq, Posbility: 0.0493
Next Token : any, Posbility: 0.0559
Next Token : sub, Posbility: 0.0923
Next Token : substring, Posbility: 0.1953
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ?, Posbility: 0.0260
Next Token : _, Posbility: 0.0708
Next Token :  , Posbility: 0.1162
Next Token : s, Posbility: 0.1494
Next Token :  ", Posbility: 0.5195
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : foo, Posbility: 0.0330
Next Token : _, Posbility: 0.0479
Next Token : hello, Posbility: 0.0613
Next Token : abc, Posbility: 0.0894
Next Token : a, Posbility: 0.1895
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0102
Next Token : B, Posbility: 0.0102
Next Token : 1, Posbility: 0.0131
Next Token :  , Posbility: 0.0586
Next Token : _, Posbility: 0.8086
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0349
Next Token : bc, Posbility: 0.0510
Next Token : a, Posbility: 0.0579
Next Token : _, Posbility: 0.0654
Next Token : b, Posbility: 0.6211
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0026
Next Token :  , Posbility: 0.0034
Next Token : "), Posbility: 0.0195
Next Token : ", Posbility: 0.1270
Next Token : _, Posbility: 0.8281
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0048
Next Token : ", Posbility: 0.0062
Next Token : _, Posbility: 0.0216
Next Token : cd, Posbility: 0.0216
Next Token : c, Posbility: 0.9219
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0025
Next Token : def, Posbility: 0.0025
Next Token : "), Posbility: 0.0076
Next Token : ", Posbility: 0.3672
Next Token : _, Posbility: 0.6055
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : de, Posbility: 0.0045
Next Token : def, Posbility: 0.0075
Next Token : ", Posbility: 0.0261
Next Token : _, Posbility: 0.0625
Next Token : d, Posbility: 0.8633
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0019
Next Token : -, Posbility: 0.0028
Next Token : "), Posbility: 0.0161
Next Token : ", Posbility: 0.3652
Next Token : _, Posbility: 0.6055
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0042
Next Token : ef, Posbility: 0.0129
Next Token : _, Posbility: 0.0273
Next Token : ", Posbility: 0.0273
Next Token : e, Posbility: 0.9062
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0028
Next Token : -, Posbility: 0.0041
Next Token : "), Posbility: 0.0068
Next Token : ", Posbility: 0.2871
Next Token : _, Posbility: 0.6914
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0013
Next Token : a, Posbility: 0.0018
Next Token : ", Posbility: 0.0120
Next Token : _, Posbility: 0.0198
Next Token : f, Posbility: 0.9531
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0027
Next Token : ., Posbility: 0.0034
Next Token : "), Posbility: 0.0176
Next Token : ", Posbility: 0.3105
Next Token : _, Posbility: 0.6562
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0013
Next Token : gh, Posbility: 0.0019
Next Token : _, Posbility: 0.0045
Next Token : ", Posbility: 0.0095
Next Token : g, Posbility: 0.9688
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0017
Next Token : -, Posbility: 0.0025
Next Token : "), Posbility: 0.0112
Next Token : ", Posbility: 0.1973
Next Token : _, Posbility: 0.7812
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : hi, Posbility: 0.0013
Next Token : ", Posbility: 0.0045
Next Token : _, Posbility: 0.0051
Next Token : i, Posbility: 0.0058
Next Token : h, Posbility: 0.9766
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0012
Next Token : ";, Posbility: 0.0013
Next Token : "), Posbility: 0.0085
Next Token : ", Posbility: 0.1172
Next Token : _, Posbility: 0.8672
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ijk, Posbility: 0.0006
Next Token : j, Posbility: 0.0013
Next Token : _, Posbility: 0.0024
Next Token : ", Posbility: 0.0046
Next Token : i, Posbility: 0.9844
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0005
Next Token : ., Posbility: 0.0005
Next Token : "), Posbility: 0.0013
Next Token : ", Posbility: 0.0203
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : jk, Posbility: 0.0003
Next Token : _, Posbility: 0.0007
Next Token : ", Posbility: 0.0009
Next Token : k, Posbility: 0.0032
Next Token : j, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0009
Next Token : ., Posbility: 0.0012
Next Token : "), Posbility: 0.0077
Next Token : ", Posbility: 0.0942
Next Token : _, Posbility: 0.8906
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : kl, Posbility: 0.0002
Next Token : l, Posbility: 0.0004
Next Token : _, Posbility: 0.0008
Next Token : ", Posbility: 0.0008
Next Token : k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0006
Next Token : ";, Posbility: 0.0006
Next Token : "), Posbility: 0.0030
Next Token : ", Posbility: 0.0417
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : lm, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : ", Posbility: 0.0006
Next Token : m, Posbility: 0.0046
Next Token : l, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0005
Next Token : -, Posbility: 0.0006
Next Token : "), Posbility: 0.0031
Next Token : ", Posbility: 0.0371
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : mn, Posbility: 0.0003
Next Token : ", Posbility: 0.0006
Next Token : mM, Posbility: 0.0010
Next Token : m, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0004
Next Token : ";, Posbility: 0.0004
Next Token : "), Posbility: 0.0019
Next Token : ", Posbility: 0.0229
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : ", Posbility: 0.0009
Next Token : o, Posbility: 0.0012
Next Token : no, Posbility: 0.0012
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0002
Next Token : ., Posbility: 0.0002
Next Token : "), Posbility: 0.0013
Next Token : ", Posbility: 0.0179
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : O, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token : p, Posbility: 0.0006
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0003
Next Token : ., Posbility: 0.0003
Next Token : "), Posbility: 0.0005
Next Token : ", Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : pq, Posbility: 0.0001
Next Token : ", Posbility: 0.0006
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0004
Next Token : qr, Posbility: 0.0004
Next Token : "), Posbility: 0.0013
Next Token : ", Posbility: 0.0179
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : pq, Posbility: 0.0001
Next Token : qu, Posbility: 0.0002
Next Token : ", Posbility: 0.0008
Next Token : r, Posbility: 0.0052
Next Token : q, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : ";, Posbility: 0.0002
Next Token : "), Posbility: 0.0004
Next Token : ", Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0001
Next Token : ";, Posbility: 0.0002
Next Token : "), Posbility: 0.0003
Next Token : ", Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : t, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : u, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ";, Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : ", Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : uv, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : v, Posbility: 0.0001
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : w, Posbility: 0.0001
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : ";, Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : ", Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0002
Next Token : z, Posbility: 0.0003
Next Token : y, Posbility: 0.0015
Next Token : x, Posbility: 0.0067
Next Token : w, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : "), Posbility: 0.0003
Next Token : ", Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : xyz, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : "), Posbility: 0.0003
Next Token : ", Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : yy, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : z, Posbility: 0.0003
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : "), Posbility: 0.0003
Next Token : ", Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : zz, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : Z, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : A, Posbility: 0.0020
Next Token : ";, Posbility: 0.0049
Next Token : "), Posbility: 0.1436
Next Token : _, Posbility: 0.2676
Next Token : ", Posbility: 0.5664
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z"
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  ""), Posbility: 0.0205
Next Token : 
, Posbility: 0.0264
Next Token :  true, Posbility: 0.0435
Next Token :  , Posbility: 0.0718
Next Token :  ", Posbility: 0.6797
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0186
Next Token : ab, Posbility: 0.0210
Next Token : abc, Posbility: 0.0505
Next Token : _, Posbility: 0.3281
Next Token : a, Posbility: 0.4219
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0054
Next Token : ", Posbility: 0.0089
Next Token :  , Posbility: 0.0243
Next Token : "), Posbility: 0.0243
Next Token : _, Posbility: 0.9102
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0030
Next Token : bc, Posbility: 0.0082
Next Token : _, Posbility: 0.0105
Next Token : "), Posbility: 0.0173
Next Token : b, Posbility: 0.9453
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0008
Next Token : ");, Posbility: 0.0044
Next Token : ", Posbility: 0.0063
Next Token : "), Posbility: 0.0415
Next Token : _, Posbility: 0.9414
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0010
Next Token : cd, Posbility: 0.0012
Next Token : _, Posbility: 0.0022
Next Token : "), Posbility: 0.0045
Next Token : c, Posbility: 0.9844
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : def, Posbility: 0.0014
Next Token : ");, Posbility: 0.0023
Next Token : ", Posbility: 0.0064
Next Token : "), Posbility: 0.0369
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0004
Next Token : e, Posbility: 0.0012
Next Token : _, Posbility: 0.0019
Next Token : "), Posbility: 0.0032
Next Token : d, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0010
Next Token : ");, Posbility: 0.0039
Next Token : ", Posbility: 0.0072
Next Token : "), Posbility: 0.0415
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0008
Next Token : f, Posbility: 0.0012
Next Token : _, Posbility: 0.0028
Next Token : "), Posbility: 0.0046
Next Token : e, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0007
Next Token : ");, Posbility: 0.0024
Next Token : ", Posbility: 0.0094
Next Token : "), Posbility: 0.0289
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0006
Next Token : g, Posbility: 0.0006
Next Token : fg, Posbility: 0.0009
Next Token : "), Posbility: 0.0025
Next Token : f, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0003
Next Token : ");, Posbility: 0.0013
Next Token : ", Posbility: 0.0045
Next Token : "), Posbility: 0.0178
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0002
Next Token : ", Posbility: 0.0002
Next Token : h, Posbility: 0.0008
Next Token : "), Posbility: 0.0017
Next Token : g, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0005
Next Token : ");, Posbility: 0.0011
Next Token : ", Posbility: 0.0045
Next Token : "), Posbility: 0.0157
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token : "), Posbility: 0.0010
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0006
Next Token : ");, Posbility: 0.0019
Next Token : ", Posbility: 0.0066
Next Token : "), Posbility: 0.0178
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : j, Posbility: 0.0002
Next Token : ", Posbility: 0.0004
Next Token : "), Posbility: 0.0017
Next Token : i, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0003
Next Token : ", Posbility: 0.0022
Next Token : "), Posbility: 0.0032
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0003
Next Token : k, Posbility: 0.0006
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0006
Next Token : ");, Posbility: 0.0027
Next Token : ", Posbility: 0.0084
Next Token : "), Posbility: 0.0227
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token : l, Posbility: 0.0004
Next Token : "), Posbility: 0.0008
Next Token : k, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0002
Next Token : ");, Posbility: 0.0005
Next Token : ", Posbility: 0.0022
Next Token : "), Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : lm, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : m, Posbility: 0.0012
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0002
Next Token : ");, Posbility: 0.0005
Next Token : ", Posbility: 0.0019
Next Token : "), Posbility: 0.0076
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : mM, Posbility: 0.0003
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0002
Next Token : ", Posbility: 0.0017
Next Token : "), Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : no, Posbility: 0.0001
Next Token : o, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0002
Next Token : ");, Posbility: 0.0004
Next Token : ", Posbility: 0.0028
Next Token : "), Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : p, Posbility: 0.0001
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0001
Next Token : "), Posbility: 0.0019
Next Token : ", Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : pq, Posbility: 0.0001
Next Token : q, Posbility: 0.0001
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0003
Next Token : ", Posbility: 0.0025
Next Token : "), Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : qu, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 0.0006
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0002
Next Token : ", Posbility: 0.0009
Next Token : "), Posbility: 0.0010
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0001
Next Token : ", Posbility: 0.0006
Next Token : "), Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ");, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token : "), Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : u, Posbility: 0.0001
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0001
Next Token : ";, Posbility: 0.0001
Next Token : ", Posbility: 0.0010
Next Token : "), Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0001
Next Token : ", Posbility: 0.0007
Next Token : "), Posbility: 0.0012
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : u, Posbility: 0.0001
Next Token : w, Posbility: 0.0003
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0004
Next Token : ", Posbility: 0.0017
Next Token : "), Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0002
Next Token : ", Posbility: 0.0017
Next Token : "), Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ");, Posbility: 0.0003
Next Token : ", Posbility: 0.0022
Next Token : "), Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : z, Posbility: 0.0005
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0002
Next Token : ");, Posbility: 0.0002
Next Token : ", Posbility: 0.0028
Next Token : "), Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : zz, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0078
Next Token : ");, Posbility: 0.0571
Next Token : ", Posbility: 0.0732
Next Token : _, Posbility: 0.1553
Next Token : "), Posbility: 0.6953
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
 score:False
Error type: noerr
---------------------------
Next Token :  false, Posbility: 0.0205
Next Token :  true, Posbility: 0.0339
Next Token :  , Posbility: 0.0339
Next Token : 

, Posbility: 0.3633
Next Token : 
, Posbility: 0.4668
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")

 score:False
Error type: noerr
---------------------------
Next Token : ", Posbility: 0.0123
Next Token : ```, Posbility: 0.0157
Next Token : val, Posbility: 0.0216
Next Token : (, Posbility: 0.0535
Next Token : let, Posbility: 0.5078
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0093
Next Token :  is, Posbility: 0.0135
Next Token :  rec, Posbility: 0.0173
Next Token :  contains, Posbility: 0.0287
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0043
Next Token : f, Posbility: 0.0055
Next Token : x, Posbility: 0.0080
Next Token : (), Posbility: 0.0192
Next Token : _, Posbility: 0.9219
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token : x, Posbility: 0.0004
Next Token : _, Posbility: 0.0025
Next Token :  , Posbility: 0.0028
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  String, Posbility: 0.0008
Next Token : 
, Posbility: 0.0159
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0006
Next Token : let, Posbility: 0.0009
Next Token : (), Posbility: 0.0010
Next Token : ref, Posbility: 0.0010
Next Token : assert, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0139
Next Token :  not, Posbility: 0.0378
Next Token :  (!, Posbility: 0.0625
Next Token :  !, Posbility: 0.1030
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token : (", Posbility: 0.0005
Next Token : (__, Posbility: 0.0007
Next Token : !(, Posbility: 0.0052
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Not, Posbility: 0.0011
Next Token : List, Posbility: 0.0013
Next Token : 
, Posbility: 0.0021
Next Token : not, Posbility: 0.0415
Next Token : String, Posbility: 0.9453
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : Contains, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0006
Next Token : has, Posbility: 0.0006
Next Token : is, Posbility: 0.0008
Next Token : not, Posbility: 0.0028
Next Token : contains, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  "\, Posbility: 0.0000
Next Token : ?, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 0.0001
Next Token : string, Posbility: 0.0003
Next Token : suffix, Posbility: 0.0003
Next Token : substring, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0023
Next Token : _, Posbility: 0.0039
Next Token :  , Posbility: 0.0064
Next Token :  "", Posbility: 0.0287
Next Token :  ", Posbility: 0.9492
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ab, Posbility: 0.0126
Next Token : abc, Posbility: 0.0183
Next Token : _, Posbility: 0.0388
Next Token : A, Posbility: 0.1533
Next Token : a, Posbility: 0.6055
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0042
Next Token : B, Posbility: 0.0101
Next Token : -, Posbility: 0.0101
Next Token :  , Posbility: 0.0311
Next Token : _, Posbility: 0.9102
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0030
Next Token : bc, Posbility: 0.0132
Next Token : B, Posbility: 0.0132
Next Token : _, Posbility: 0.0219
Next Token : b, Posbility: 0.9297
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0008
Next Token : -, Posbility: 0.0012
Next Token :  , Posbility: 0.0017
Next Token : ", Posbility: 0.0031
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0005
Next Token : C, Posbility: 0.0012
Next Token : cd, Posbility: 0.0022
Next Token : _, Posbility: 0.0059
Next Token : c, Posbility: 0.9844
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : def, Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token : -, Posbility: 0.0013
Next Token : ", Posbility: 0.0052
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0005
Next Token : D, Posbility: 0.0005
Next Token : e, Posbility: 0.0015
Next Token : _, Posbility: 0.0041
Next Token : d, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : -, Posbility: 0.0008
Next Token : ", Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0005
Next Token : ef, Posbility: 0.0006
Next Token : f, Posbility: 0.0006
Next Token : _, Posbility: 0.0036
Next Token : e, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : -, Posbility: 0.0017
Next Token : ", Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : F, Posbility: 0.0004
Next Token : fg, Posbility: 0.0005
Next Token : _, Posbility: 0.0010
Next Token : g, Posbility: 0.0017
Next Token : f, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : gh, Posbility: 0.0003
Next Token : -, Posbility: 0.0006
Next Token : ", Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0002
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 0.0006
Next Token : h, Posbility: 0.0010
Next Token : g, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : ", Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : hi, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : i, Posbility: 0.0008
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : I, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ", Posbility: 0.0004
Next Token : j, Posbility: 0.0004
Next Token : i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0001
Next Token : l, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : k, Posbility: 0.0004
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0052
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ", Posbility: 0.0002
Next Token : l, Posbility: 0.0002
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0002
Next Token : ", Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : m, Posbility: 0.0010
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : mn, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : mM, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : no, Posbility: 0.0003
Next Token : o, Posbility: 0.0006
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : O, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : p, Posbility: 0.0001
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : q, Posbility: 0.0001
Next Token : pq, Posbility: 0.0001
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : qu, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : r, Posbility: 0.0002
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0017
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : ", Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : v, Posbility: 0.0001
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : w, Posbility: 0.0004
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token : x, Posbility: 0.0006
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0017
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : z, Posbility: 0.0002
Next Token : y, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0052
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : yy, Posbility: 0.0001
Next Token : z, Posbility: 0.0012
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : /, Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token : ", Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Z, Posbility: 0.0001
Next Token : zz, Posbility: 0.0001
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : A, Posbility: 0.0006
Next Token : 1, Posbility: 0.0008
Next Token :  , Posbility: 0.0021
Next Token : _, Posbility: 0.3164
Next Token : ", Posbility: 0.6719
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z"
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0022
Next Token :  "__, Posbility: 0.0024
Next Token : 
, Posbility: 0.0028
Next Token :  ""), Posbility: 0.0066
Next Token :  ", Posbility: 0.9805
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0162
Next Token : A, Posbility: 0.0162
Next Token : b, Posbility: 0.0342
Next Token : _, Posbility: 0.1357
Next Token : a, Posbility: 0.6875
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : B, Posbility: 0.0008
Next Token : -, Posbility: 0.0021
Next Token : "), Posbility: 0.0035
Next Token :  , Posbility: 0.0139
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0019
Next Token : c, Posbility: 0.0035
Next Token : bc, Posbility: 0.0045
Next Token : _, Posbility: 0.0108
Next Token : b, Posbility: 0.9727
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0004
Next Token : ____, Posbility: 0.0010
Next Token :  , Posbility: 0.0017
Next Token : "), Posbility: 0.0046
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0006
Next Token : "), Posbility: 0.0010
Next Token : cd, Posbility: 0.0012
Next Token : _, Posbility: 0.0040
Next Token : c, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0001
Next Token : -, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : "), Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : D, Posbility: 0.0002
Next Token : "), Posbility: 0.0005
Next Token : e, Posbility: 0.0022
Next Token : _, Posbility: 0.0025
Next Token : d, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0001
Next Token : -, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : "), Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ef, Posbility: 0.0003
Next Token : "), Posbility: 0.0005
Next Token : f, Posbility: 0.0007
Next Token : _, Posbility: 0.0028
Next Token : e, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : fg, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : -, Posbility: 0.0003
Next Token : "), Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0005
Next Token : fg, Posbility: 0.0012
Next Token : _, Posbility: 0.0015
Next Token : g, Posbility: 0.0019
Next Token : f, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0002
Next Token : -, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token : "), Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : gh, Posbility: 0.0004
Next Token : h, Posbility: 0.0013
Next Token : g, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : "), Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : g, Posbility: 0.0001
Next Token : i, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : "), Posbility: 0.0006
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : "), Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0002
Next Token : j, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : "), Posbility: 0.0008
Next Token : i, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : i, Posbility: 0.0001
Next Token : "), Posbility: 0.0002
Next Token : k, Posbility: 0.0012
Next Token : j, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : l, Posbility: 0.0003
Next Token : "), Posbility: 0.0003
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : "), Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : m, Posbility: 0.0010
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : "), Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ma, Posbility: 0.0001
Next Token : mM, Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : n, Posbility: 0.0005
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : no, Posbility: 0.0001
Next Token : o, Posbility: 0.0007
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : p, Posbility: 0.0002
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0001
Next Token : pq, Posbility: 0.0001
Next Token : o, Posbility: 0.0001
Next Token : q, Posbility: 0.0002
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : qr, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : qu, Posbility: 0.0000
Next Token : r, Posbility: 0.0002
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 0.0005
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : u, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : t, Posbility: 0.0001
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : w, Posbility: 0.0006
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : "), Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token : x, Posbility: 0.0010
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0052
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : xy, Posbility: 0.0002
Next Token : z, Posbility: 0.0003
Next Token : y, Posbility: 0.0007
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ")), Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token : "), Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : yy, Posbility: 0.0001
Next Token : "), Posbility: 0.0002
Next Token : z, Posbility: 0.0012
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0001
Next Token : ")), Posbility: 0.0002
Next Token : ", Posbility: 0.0019
Next Token : "), Posbility: 0.0140
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0004
Next Token : _, Posbility: 0.0004
Next Token : zz, Posbility: 0.0005
Next Token : y, Posbility: 0.0006
Next Token : z, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : /, Posbility: 0.0029
Next Token :  , Posbility: 0.0117
Next Token : ", Posbility: 0.0280
Next Token : "), Posbility: 0.4375
Next Token : _, Posbility: 0.4961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0864
Next Token : 1, Posbility: 0.0981
Next Token : 0, Posbility: 0.1260
Next Token : "), Posbility: 0.2070
Next Token : a, Posbility: 0.2070
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 1, Posbility: 0.0005
Next Token : ")), Posbility: 0.0010
Next Token : ", Posbility: 0.0112
Next Token : "), Posbility: 0.3711
Next Token : _, Posbility: 0.6094
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0005
Next Token : z, Posbility: 0.0015
Next Token : a, Posbility: 0.0019
Next Token : c, Posbility: 0.0031
Next Token : b, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : ")), Posbility: 0.0001
Next Token : ", Posbility: 0.0027
Next Token : "), Posbility: 0.0420
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0001
Next Token : z, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : b, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "));, Posbility: 0.0000
Next Token : ")), Posbility: 0.0001
Next Token : ", Posbility: 0.0017
Next Token : "), Posbility: 0.0179
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : e, Posbility: 0.0002
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "));, Posbility: 0.0000
Next Token : ")), Posbility: 0.0001
Next Token : ", Posbility: 0.0012
Next Token : "), Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "));, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0008
Next Token : "), Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : a, Posbility: 0.0001
Next Token : g, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0007
Next Token : "), Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : h, Posbility: 0.0003
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "));, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "));, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token : "), Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "));, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : no, Posbility: 0.0000
Next Token : o, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : "), Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : ");, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : qr, Posbility: 0.0000
Next Token : qu, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "),, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : "), Posbility: 0.0003
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token : "), Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : "), Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")], Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token : "), Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : z, Posbility: 0.0002
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : "], Posbility: 0.0001
Next Token : ", Posbility: 0.0015
Next Token : "), Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : a, Posbility: 0.0001
Next Token : zz, Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : "], Posbility: 0.0004
Next Token : ", Posbility: 0.0469
Next Token : _, Posbility: 0.4453
Next Token : "), Posbility: 0.5039
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0061
Next Token :  =, Posbility: 0.0089
Next Token :  ==, Posbility: 0.0309
Next Token : 

, Posbility: 0.2285
Next Token : 
, Posbility: 0.7031
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0013
Next Token : assert, Posbility: 0.0015
Next Token : val, Posbility: 0.0072
Next Token : (, Posbility: 0.0112
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0004
Next Token :  check, Posbility: 0.0004
Next Token :  a, Posbility: 0.0006
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : f, Posbility: 0.0005
Next Token : x, Posbility: 0.0007
Next Token : (), Posbility: 0.0012
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  String, Posbility: 0.0008
Next Token : 
, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : (), Posbility: 0.0003
Next Token : ref, Posbility: 0.0006
Next Token : let, Posbility: 0.0007
Next Token : assert, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (!(, Posbility: 0.0059
Next Token :  not, Posbility: 0.0262
Next Token :  (!, Posbility: 0.0432
Next Token :  !, Posbility: 0.0432
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : (", Posbility: 0.0002
Next Token : (__, Posbility: 0.0003
Next Token : !(, Posbility: 0.0052
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : List, Posbility: 0.0008
Next Token : Not, Posbility: 0.0010
Next Token : 
, Posbility: 0.0013
Next Token : not, Posbility: 0.0292
Next Token : String, Posbility: 0.9648
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : Contains, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : does, Posbility: 0.0001
Next Token : has, Posbility: 0.0002
Next Token : is, Posbility: 0.0002
Next Token : not, Posbility: 0.0006
Next Token : contains, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ?, Posbility: 0.0000
Next Token :  "\, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : subset, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : string, Posbility: 0.0001
Next Token : suffix, Posbility: 0.0001
Next Token : substring, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0015
Next Token : 
, Posbility: 0.0024
Next Token :  , Posbility: 0.0024
Next Token :  "", Posbility: 0.0178
Next Token :  ", Posbility: 0.9727
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : aa, Posbility: 0.0034
Next Token : abc, Posbility: 0.0055
Next Token : A, Posbility: 0.0081
Next Token : _, Posbility: 0.0117
Next Token : a, Posbility: 0.9297
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0005
Next Token :  a, Posbility: 0.0006
Next Token : ", Posbility: 0.0009
Next Token :  , Posbility: 0.0017
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0004
Next Token : c, Posbility: 0.0004
Next Token : bc, Posbility: 0.0005
Next Token : _, Posbility: 0.0013
Next Token : b, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : cd, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : e, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ", Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : g, Posbility: 0.0003
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : h, Posbility: 0.0002
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : hi, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : i, Posbility: 0.0001
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : j, Posbility: 0.0001
Next Token : i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : lm, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : mn, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : no, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : qu, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : ";, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : ", Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0001
Next Token : A, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.3203
Next Token : ", Posbility: 0.6758
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z"
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token :  "__, Posbility: 0.0007
Next Token : 
, Posbility: 0.0012
Next Token :  ""), Posbility: 0.0052
Next Token :  ", Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : abc, Posbility: 0.0030
Next Token : c, Posbility: 0.0049
Next Token : b, Posbility: 0.0055
Next Token : _, Posbility: 0.0281
Next Token : a, Posbility: 0.9297
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0001
Next Token : -, Posbility: 0.0003
Next Token : "), Posbility: 0.0007
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0002
Next Token : c, Posbility: 0.0004
Next Token : bc, Posbility: 0.0005
Next Token : _, Posbility: 0.0013
Next Token : b, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ____, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : "), Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : cd, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : e, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : fg, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : g, Posbility: 0.0003
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : gh, Posbility: 0.0000
Next Token : h, Posbility: 0.0002
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : i, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : lm, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ma, Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : no, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : qu, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : "), Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0016
Next Token : -, Posbility: 0.0027
Next Token : ", Posbility: 0.0064
Next Token : "), Posbility: 0.0325
Next Token : _, Posbility: 0.9492
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0079
Next Token : A, Posbility: 0.0130
Next Token : c, Posbility: 0.0189
Next Token : b, Posbility: 0.1089
Next Token : a, Posbility: 0.8047
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : ", Posbility: 0.0009
Next Token : "), Posbility: 0.0097
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0004
Next Token : _, Posbility: 0.0008
Next Token : bc, Posbility: 0.0008
Next Token : c, Posbility: 0.0019
Next Token : b, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token : "), Posbility: 0.0085
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : cd, Posbility: 0.0001
Next Token : b, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : d, Posbility: 0.0003
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token : "), Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0001
Next Token : c, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : e, Posbility: 0.0004
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : "), Posbility: 0.0052
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0001
Next Token : a, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : f, Posbility: 0.0003
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token : "), Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : fg, Posbility: 0.0002
Next Token : g, Posbility: 0.0009
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token : "), Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : gh, Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : h, Posbility: 0.0007
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : i, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : "), Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : h, Posbility: 0.0001
Next Token : j, Posbility: 0.0001
Next Token : i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token : k, Posbility: 0.0001
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : "), Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : c, Posbility: 0.0001
Next Token : a, Posbility: 0.0001
Next Token : l, Posbility: 0.0001
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 0.0001
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : n, Posbility: 0.0002
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : no, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : q, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0001
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : "), Posbility: 0.0004
Next Token : ", Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : a, Posbility: 0.0001
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "),, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token : "), Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token : "), Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : xy, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : z, Posbility: 0.0002
Next Token : y, Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")], Posbility: 0.0000
Next Token : "], Posbility: 0.0001
Next Token : ", Posbility: 0.0008
Next Token : "), Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : z, Posbility: 0.0004
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : "], Posbility: 0.0001
Next Token : ", Posbility: 0.0019
Next Token : "), Posbility: 0.0076
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : zz, Posbility: 0.0002
Next Token : c, Posbility: 0.0002
Next Token : y, Posbility: 0.0003
Next Token : a, Posbility: 0.0004
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0016
Next Token : -, Posbility: 0.0026
Next Token : ", Posbility: 0.0408
Next Token : "), Posbility: 0.1250
Next Token : _, Posbility: 0.8164
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 1, Posbility: 0.0117
Next Token : z, Posbility: 0.0132
Next Token : c, Posbility: 0.0593
Next Token : a, Posbility: 0.3867
Next Token : b, Posbility: 0.4395
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0001
Next Token : ",, Posbility: 0.0002
Next Token : ", Posbility: 0.0620
Next Token : "), Posbility: 0.0796
Next Token : _, Posbility: 0.8555
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0003
Next Token : a, Posbility: 0.0012
Next Token : d, Posbility: 0.0015
Next Token : b, Posbility: 0.0015
Next Token : c, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0040
Next Token : "), Posbility: 0.0075
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : a, Posbility: 0.0001
Next Token : c, Posbility: 0.0001
Next Token : e, Posbility: 0.0002
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0006
Next Token : "), Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : a, Posbility: 0.0001
Next Token : f, Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token : "), Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : g, Posbility: 0.0001
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0005
Next Token : "), Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : h, Posbility: 0.0002
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")), Posbility: 0.0000
Next Token : ",, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : g, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : k, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : h, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : n, Posbility: 0.0002
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : "),, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : no, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "),, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : "),, Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",, Posbility: 0.0000
Next Token : "),, Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : qu, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token : rs, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ");, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : "),, Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : "),, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token : t, Posbility: 0.0001
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "),, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "),, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "),, Posbility: 0.0000
Next Token : ")), Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "),, Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : "), Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : z, Posbility: 0.0001
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ")], Posbility: 0.0000
Next Token : "], Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : "), Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : b, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",, Posbility: 0.0001
Next Token : "], Posbility: 0.0002
Next Token : ", Posbility: 0.0240
Next Token : _, Posbility: 0.1777
Next Token : "), Posbility: 0.7969
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0004
Next Token :  , Posbility: 0.0014
Next Token : , Posbility: 0.0022
Next Token : 

, Posbility: 0.2002
Next Token : 
, Posbility: 0.7930
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0018
Next Token : Let, Posbility: 0.0019
Next Token : val, Posbility: 0.0027
Next Token : (, Posbility: 0.0216
Next Token : let, Posbility: 0.9180
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  test, Posbility: 0.0004
Next Token :  check, Posbility: 0.0004
Next Token :  a, Posbility: 0.0006
Next Token :  rec, Posbility: 0.0006
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : f, Posbility: 0.0007
Next Token : x, Posbility: 0.0010
Next Token : (), Posbility: 0.0019
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  not, Posbility: 0.0001
Next Token :  String, Posbility: 0.0013
Next Token : 
, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : ref, Posbility: 0.0003
Next Token : let, Posbility: 0.0007
Next Token : assert, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (!(, Posbility: 0.0023
Next Token :  not, Posbility: 0.0105
Next Token :  (!, Posbility: 0.0173
Next Token :  !, Posbility: 0.0173
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (", Posbility: 0.0001
Next Token : (__, Posbility: 0.0001
Next Token : !(, Posbility: 0.0017
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : List, Posbility: 0.0006
Next Token : Not, Posbility: 0.0006
Next Token : 
, Posbility: 0.0007
Next Token : not, Posbility: 0.0179
Next Token : String, Posbility: 0.9766
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : Contains, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : does, Posbility: 0.0001
Next Token : has, Posbility: 0.0002
Next Token : is, Posbility: 0.0002
Next Token : not, Posbility: 0.0004
Next Token : contains, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ?, Posbility: 0.0000
Next Token :  "\, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : subset, Posbility: 0.0000
Next Token : string, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : suffix, Posbility: 0.0001
Next Token : substring, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0011
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.0019
Next Token :  "", Posbility: 0.0140
Next Token :  ", Posbility: 0.9766
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0019
Next Token : A, Posbility: 0.0021
Next Token : abc, Posbility: 0.0039
Next Token : _, Posbility: 0.0057
Next Token : a, Posbility: 0.9609
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0003
Next Token : ,, Posbility: 0.0004
Next Token : ", Posbility: 0.0007
Next Token :  , Posbility: 0.0010
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0002
Next Token : c, Posbility: 0.0003
Next Token : bc, Posbility: 0.0004
Next Token : _, Posbility: 0.0007
Next Token : b, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : d, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : cd, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : e, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : fg, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : g, Posbility: 0.0002
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : h, Posbility: 0.0001
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : hi, Posbility: 0.0000
Next Token : i, Posbility: 0.0000
Next Token : h, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : j, Posbility: 0.0001
Next Token : i, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : jj, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Next Token : j, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : k, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : lm, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : o, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : mM, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : m, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : p, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : no, Posbility: 0.0000
Next Token : o, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : о, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : o, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : pq, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : p, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : qr, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : qu, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : q, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : v, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : r, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : t, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : u, Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 0.0000
Next Token : u, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : w, Posbility: 0.0000
Next Token : v, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : W, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : w, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : xy, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ", Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : yy, Posbility: 0.0000
Next Token : ", Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : y, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ", Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : b, Posbility: 0.0000
Next Token : Z, Posbility: 0.0000
Next Token : zz, Posbility: 0.0000
Next Token : z, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token : ., Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0601
Next Token : ", Posbility: 0.9375
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z"
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  "__, Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0009
Next Token :  ""), Posbility: 0.0052
Next Token :  ", Posbility: 0.9922
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ab, Posbility: 0.0021
Next Token : c, Posbility: 0.0024
Next Token : b, Posbility: 0.0120
Next Token : _, Posbility: 0.0136
Next Token : a, Posbility: 0.9531
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : "), Posbility: 0.0007
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0002
Next Token : c, Posbility: 0.0003
Next Token : bc, Posbility: 0.0003
Next Token : _, Posbility: 0.0006
Next Token : b, Posbility: 0.9961
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ____, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : b, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : cd, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : c, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : e, Posbility: 0.0001
Next Token : d, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : d, Posbility: 0.0000
Next Token : f, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : e, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : e, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : "), Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "), Posbility: 0.0000
Next Token : fg, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : g, Posbility: 0.0001
Next Token : f, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gh, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : h, Posbility: 0.0001
Next Token : g, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : "), Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise. *)
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z")
let _ = assert (String.contains_substring "a_b_c_d_e_f_g_h_i_j_k_l_m_n_o_p_q_r_s_t_u_v_w_x_y_z" "a_b_c_d_e_f_g_
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>