code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  tuple, Posbility: 0.0110
Next Token :  get, Posbility: 0.0820
Next Token :  extract, Posbility: 0.1348
Next Token :  rec, Posbility: 0.2227
Next Token :  , Posbility: 0.3672
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0396
Next Token : (, Posbility: 0.0737
Next Token : f, Posbility: 0.0737
Next Token : map, Posbility: 0.1221
Next Token : rear, Posbility: 0.1562
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Index, Posbility: 0.0116
Next Token : s, Posbility: 0.0170
Next Token :  , Posbility: 0.0520
Next Token :  =, Posbility: 0.1416
Next Token : _, Posbility: 0.7188
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : element, Posbility: 0.0250
Next Token : idx, Posbility: 0.0322
Next Token : of, Posbility: 0.0413
Next Token : indices, Posbility: 0.0469
Next Token : index, Posbility: 0.6445
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  el, Posbility: 0.0076
Next Token :  i, Posbility: 0.0160
Next Token :  , Posbility: 0.2520
Next Token :  =, Posbility: 0.2520
Next Token : _, Posbility: 0.4141
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : only, Posbility: 0.0325
Next Token : elements, Posbility: 0.0417
Next Token : list, Posbility: 0.0605
Next Token : element, Posbility: 0.1279
Next Token : of, Posbility: 0.3496
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0014
Next Token :  each, Posbility: 0.0022
Next Token :  , Posbility: 0.0447
Next Token :  =, Posbility: 0.0447
Next Token : _, Posbility: 0.8945
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0471
Next Token : tuple, Posbility: 0.0776
Next Token : each, Posbility: 0.0996
Next Token : string, Posbility: 0.1455
Next Token : strings, Posbility: 0.3945
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  tuple, Posbility: 0.0112
Next Token :  a, Posbility: 0.0304
Next Token : _, Posbility: 0.1064
Next Token :  =, Posbility: 0.2891
Next Token :  , Posbility: 0.4766
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ts, Posbility: 0.0265
Next Token : x, Posbility: 0.1348
Next Token : t, Posbility: 0.1523
Next Token : s, Posbility: 0.2217
Next Token : (, Posbility: 0.2852
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : a, Posbility: 0.0332
Next Token : string, Posbility: 0.0376
Next Token : x, Posbility: 0.1021
Next Token : s, Posbility: 0.1680
Next Token : strings, Posbility: 0.1904
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0220
Next Token : :, Posbility: 0.0220
Next Token : ), Posbility: 0.0596
Next Token :  , Posbility: 0.4395
Next Token : ,, Posbility: 0.4395
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  start, Posbility: 0.0161
Next Token : ), Posbility: 0.0236
Next Token :  i, Posbility: 0.0302
Next Token :  index, Posbility: 0.0820
Next Token :  , Posbility: 0.6875
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : length, Posbility: 0.0292
Next Token : idx, Posbility: 0.0374
Next Token : ), Posbility: 0.0425
Next Token : indices, Posbility: 0.0618
Next Token : _, Posbility: 0.5859
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : i, Posbility: 0.0090
Next Token : index, Posbility: 0.0090
Next Token :  , Posbility: 0.0131
Next Token : ,, Posbility: 0.0586
Next Token : ), Posbility: 0.8086
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  strings, Posbility: 0.0005
Next Token :   , Posbility: 0.0027
Next Token : 
, Posbility: 0.0083
Next Token :  , Posbility: 0.0226
Next Token :  =, Posbility: 0.9570
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0035
Next Token :  strings, Posbility: 0.0096
Next Token :  String, Posbility: 0.0109
Next Token :  , Posbility: 0.0908
Next Token : 
, Posbility: 0.8633
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0052
Next Token : let, Posbility: 0.0052
Next Token :    , Posbility: 0.0086
Next Token :     , Posbility: 0.0923
Next Token :   , Posbility: 0.8789
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0400
Next Token : match, Posbility: 0.0400
Next Token : strings, Posbility: 0.0454
Next Token : List, Posbility: 0.2041
Next Token : let, Posbility: 0.4883
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0242
Next Token :  open, Posbility: 0.0513
Next Token :  strings, Posbility: 0.0957
Next Token :  rec, Posbility: 0.2598
Next Token :  , Posbility: 0.2949
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0547
Next Token : indices, Posbility: 0.0620
Next Token : rear, Posbility: 0.0703
Next Token : s, Posbility: 0.0796
Next Token : (, Posbility: 0.0903
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : string, Posbility: 0.0576
Next Token : first, Posbility: 0.0576
Next Token : rear, Posbility: 0.0737
Next Token : _, Posbility: 0.1074
Next Token : strings, Posbility: 0.1074
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0050
Next Token : 1,, Posbility: 0.0137
Next Token : _, Posbility: 0.1011
Next Token : ',, Posbility: 0.1011
Next Token : ,, Posbility: 0.7461
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : _, Posbility: 0.0095
Next Token :  strings, Posbility: 0.0156
Next Token :  index, Posbility: 0.0201
Next Token :  rest, Posbility: 0.0201
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : idx, Posbility: 0.0060
Next Token : remainder, Posbility: 0.0077
Next Token : length, Posbility: 0.0112
Next Token : indices, Posbility: 0.0143
Next Token : _, Posbility: 0.8906
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : index, Posbility: 0.0016
Next Token : ),, Posbility: 0.0020
Next Token : rest, Posbility: 0.0029
Next Token : ,, Posbility: 0.0408
Next Token : ), Posbility: 0.9258
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  in, Posbility: 0.0015
Next Token :  be, Posbility: 0.0022
Next Token :  , Posbility: 0.0031
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0078
Next Token :  strings, Posbility: 0.0270
Next Token : 
, Posbility: 0.1069
Next Token :  String, Posbility: 0.1377
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0223
Next Token : (, Posbility: 0.0325
Next Token : Tuple, Posbility: 0.0605
Next Token : Array, Posbility: 0.1455
Next Token : List, Posbility: 0.4473
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Helpers, Posbility: 0.0003
Next Token : Util, Posbility: 0.0005
Next Token : s, Posbility: 0.0006
Next Token : _, Posbility: 0.0036
Next Token : ., Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0420
Next Token : split, Posbility: 0.0476
Next Token : iter, Posbility: 0.0476
Next Token : map, Posbility: 0.2139
Next Token : unzip, Posbility: 0.3984
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  with, Posbility: 0.0215
Next Token : 2, Posbility: 0.0244
Next Token :  , Posbility: 0.0586
Next Token : _, Posbility: 0.2041
Next Token :  strings, Posbility: 0.6289
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0008
Next Token :  , Posbility: 0.0010
Next Token : ,, Posbility: 0.0015
Next Token : 
, Posbility: 0.0046
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0003
Next Token :   , Posbility: 0.0021
Next Token :  , Posbility: 0.0031
Next Token : 

, Posbility: 0.0140
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0006
Next Token :  , Posbility: 0.0015
Next Token :     , Posbility: 0.0028
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0222
Next Token : (, Posbility: 0.0322
Next Token : strings, Posbility: 0.1128
Next Token : List, Posbility: 0.2109
Next Token : let, Posbility: 0.5039
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0210
Next Token :  index, Posbility: 0.0444
Next Token :  strings, Posbility: 0.0942
Next Token :  rec, Posbility: 0.1367
Next Token :  , Posbility: 0.4219
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0500
Next Token : r, Posbility: 0.0500
Next Token : s, Posbility: 0.0566
Next Token : rear, Posbility: 0.1543
Next Token : (, Posbility: 0.1543
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : index, Posbility: 0.0396
Next Token : string, Posbility: 0.0447
Next Token : rear, Posbility: 0.0649
Next Token : _, Posbility: 0.1216
Next Token : strings, Posbility: 0.3301
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0061
Next Token : 1,, Posbility: 0.0101
Next Token : ',, Posbility: 0.0129
Next Token : _, Posbility: 0.0452
Next Token : ,, Posbility: 0.9102
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  i, Posbility: 0.0075
Next Token :  rest, Posbility: 0.0075
Next Token :  strings, Posbility: 0.0096
Next Token :  index, Posbility: 0.0337
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : indexes, Posbility: 0.0065
Next Token : idx, Posbility: 0.0137
Next Token : rear, Posbility: 0.0227
Next Token : indices, Posbility: 0.0330
Next Token : _, Posbility: 0.8516
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0006
Next Token : index, Posbility: 0.0008
Next Token : rear, Posbility: 0.0027
Next Token : ,, Posbility: 0.0096
Next Token : ), Posbility: 0.9766
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 0.0004
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0018
Next Token :  strings, Posbility: 0.0082
Next Token :  String, Posbility: 0.0284
Next Token : 
, Posbility: 0.1123
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0052
Next Token : Tuple, Posbility: 0.0052
Next Token : Map, Posbility: 0.0234
Next Token : Array, Posbility: 0.0496
Next Token : List, Posbility: 0.8789
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : Util, Posbility: 0.0000
Next Token : Ext, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0183
Next Token : filter, Posbility: 0.0234
Next Token : zip, Posbility: 0.0300
Next Token : unzip, Posbility: 0.2520
Next Token : map, Posbility: 0.6055
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0292
Next Token : _, Posbility: 0.0791
Next Token :  strings, Posbility: 0.0898
Next Token : i, Posbility: 0.1904
Next Token :  , Posbility: 0.5156
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Fun, Posbility: 0.0043
Next Token : f, Posbility: 0.0080
Next Token : s, Posbility: 0.0091
Next Token : List, Posbility: 0.0103
Next Token : (, Posbility: 0.9258
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : List, Posbility: 0.0182
Next Token : Fun, Posbility: 0.0205
Next Token : function, Posbility: 0.0923
Next Token : String, Posbility: 0.1045
Next Token : fun, Posbility: 0.6016
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  index, Posbility: 0.0138
Next Token :  i, Posbility: 0.0227
Next Token :  str, Posbility: 0.0544
Next Token :  string, Posbility: 0.1680
Next Token :  , Posbility: 0.6641
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0036
Next Token : _, Posbility: 0.0099
Next Token : x, Posbility: 0.1064
Next Token : (, Posbility: 0.1543
Next Token : s, Posbility: 0.6953
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ->, Posbility: 0.0007
Next Token : s, Posbility: 0.0012
Next Token : _, Posbility: 0.0013
Next Token : 1, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : →, Posbility: 0.0003
Next Token : _, Posbility: 0.0019
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0133
Next Token :  string, Posbility: 0.0133
Next Token : 
, Posbility: 0.0220
Next Token :  String, Posbility: 0.1621
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0210
Next Token : Int, Posbility: 0.0210
Next Token : List, Posbility: 0.0830
Next Token : (, Posbility: 0.1367
Next Token : s, Posbility: 0.5430
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : [, Posbility: 0.0391
Next Token :  [, Posbility: 0.0728
Next Token :  @, Posbility: 0.0825
Next Token :  , Posbility: 0.1543
Next Token : ., Posbility: 0.4199
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0388
Next Token : [0], Posbility: 0.0498
Next Token : [1]), Posbility: 0.1738
Next Token : [, Posbility: 0.1973
Next Token : [0]), Posbility: 0.2871
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0])
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0003
Next Token :  in, Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0052
Next Token :  strings, Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0]) strings
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  strings, Posbility: 0.0009
Next Token :  , Posbility: 0.0028
Next Token : 
, Posbility: 0.0031
Next Token : ,, Posbility: 0.0066
Next Token :  in, Posbility: 0.9805
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0]) strings in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  strings, Posbility: 0.0002
Next Token :   , Posbility: 0.0014
Next Token :  , Posbility: 0.0045
Next Token : 

, Posbility: 0.0291
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0]) strings in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :  , Posbility: 0.0052
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0]) strings in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0063
Next Token : (, Posbility: 0.0469
Next Token : List, Posbility: 0.0996
Next Token : let, Posbility: 0.3477
Next Token : strings, Posbility: 0.4453
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0]) strings in
  strings
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0071
Next Token :  |, Posbility: 0.0104
Next Token : ., Posbility: 0.0118
Next Token : 

, Posbility: 0.4414
Next Token : 
, Posbility: 0.5000
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0]) strings in
  strings

 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0228
Next Token : let, Posbility: 0.0228
Next Token :   , Posbility: 0.0284
Next Token : ```, Posbility: 0.0515
Next Token : 

, Posbility: 0.0850
---------------------------
code:
 (* Write a function to extract only the rear index element of each string in the given tuple. *)
let rear_index_of_strings (strings, _) =
  let (strings, _) = List.unzip strings in
  let (strings, _) = List.map (fun s -> s.[0]) strings in
  strings



 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :29.32435655593872

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>