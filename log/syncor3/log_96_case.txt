code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0239
Next Token :  char, Posbility: 0.0308
Next Token :  , Posbility: 0.2275
Next Token :  rec, Posbility: 0.2275
Next Token :  count, Posbility: 0.2910
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Alpha, Posbility: 0.0034
Next Token : Char, Posbility: 0.0105
Next Token :  , Posbility: 0.0222
Next Token :  =, Posbility: 0.0991
Next Token : _, Posbility: 0.8320
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : letter, Posbility: 0.0481
Next Token : same, Posbility: 0.0481
Next Token : alphabet, Posbility: 0.0618
Next Token : character, Posbility: 0.0791
Next Token : char, Posbility: 0.2441
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0029
Next Token :  , Posbility: 0.0583
Next Token :  =, Posbility: 0.0583
Next Token : _, Posbility: 0.1582
Next Token : s, Posbility: 0.7109
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0137
Next Token : (, Posbility: 0.0176
Next Token :  , Posbility: 0.2754
Next Token :  =, Posbility: 0.2754
Next Token : _, Posbility: 0.3516
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0159
Next Token : same, Posbility: 0.0261
Next Token : of, Posbility: 0.0554
Next Token : at, Posbility: 0.2188
Next Token : in, Posbility: 0.3613
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : sensitive, Posbility: 0.0013
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0166
Next Token : al, Posbility: 0.0166
Next Token : string, Posbility: 0.1221
Next Token : english, Posbility: 0.2012
Next Token : alphabet, Posbility: 0.3770
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0198
Next Token : s, Posbility: 0.0198
Next Token : _, Posbility: 0.1001
Next Token :  =, Posbility: 0.3496
Next Token :  , Posbility: 0.3965
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0068
Next Token : alphabet, Posbility: 0.0112
Next Token : (, Posbility: 0.0237
Next Token : x, Posbility: 0.0269
Next Token : s, Posbility: 0.8906
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0015
Next Token : 
, Posbility: 0.0021
Next Token : 1, Posbility: 0.0045
Next Token :  , Posbility: 0.0066
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0056
Next Token :  String, Posbility: 0.0063
Next Token :  0, Posbility: 0.0071
Next Token :  , Posbility: 0.1260
Next Token : 
, Posbility: 0.8242
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0084
Next Token :    , Posbility: 0.0096
Next Token : 	, Posbility: 0.0096
Next Token :     , Posbility: 0.1025
Next Token :   , Posbility: 0.8594
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0109
Next Token : s, Posbility: 0.0140
Next Token : (, Posbility: 0.0159
Next Token : List, Posbility: 0.0204
Next Token : let, Posbility: 0.8672
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  open, Posbility: 0.0334
Next Token :  count, Posbility: 0.0381
Next Token :  chars, Posbility: 0.1035
Next Token :  rec, Posbility: 0.1934
Next Token :  , Posbility: 0.3613
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0226
Next Token : map, Posbility: 0.0226
Next Token : counts, Posbility: 0.0374
Next Token : s, Posbility: 0.0615
Next Token : alphabet, Posbility: 0.5156
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ical, Posbility: 0.0027
Next Token :  , Posbility: 0.0039
Next Token : s, Posbility: 0.0256
Next Token : _, Posbility: 0.1016
Next Token :  =, Posbility: 0.8516
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0225
Next Token :  , Posbility: 0.1660
Next Token : 
, Posbility: 0.1660
Next Token :  ', Posbility: 0.1660
Next Token :  ", Posbility: 0.4512
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : a, Posbility: 0.0081
Next Token : h, Posbility: 0.0092
Next Token : A, Posbility: 0.0220
Next Token : ABC, Posbility: 0.2676
Next Token : abc, Posbility: 0.6445
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abc
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : Def, Posbility: 0.0001
Next Token : xyz, Posbility: 0.0001
Next Token : deg, Posbility: 0.0004
Next Token : DEF, Posbility: 0.0009
Next Token : def, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdef
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : gk, Posbility: 0.0002
Next Token : gi, Posbility: 0.0002
Next Token : g, Posbility: 0.0051
Next Token : ghi, Posbility: 0.0178
Next Token : gh, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefgh
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : j, Posbility: 0.0001
Next Token : km, Posbility: 0.0002
Next Token : jk, Posbility: 0.0003
Next Token : ", Posbility: 0.0007
Next Token : ijk, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijk
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : m, Posbility: 0.0000
Next Token : l, Posbility: 0.0001
Next Token : ln, Posbility: 0.0001
Next Token : mn, Posbility: 0.0002
Next Token : lm, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklm
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : nos, Posbility: 0.0001
Next Token : np, Posbility: 0.0001
Next Token : NO, Posbility: 0.0003
Next Token : n, Posbility: 0.0015
Next Token : no, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmno
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : pt, Posbility: 0.0000
Next Token : qr, Posbility: 0.0000
Next Token : pr, Posbility: 0.0007
Next Token : pq, Posbility: 0.0293
Next Token : p, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnop
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : rst, Posbility: 0.0001
Next Token : qu, Posbility: 0.0001
Next Token : qz, Posbility: 0.0001
Next Token : ", Posbility: 0.0004
Next Token : qr, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqr
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : sm, Posbility: 0.0000
Next Token : tu, Posbility: 0.0000
Next Token : stu, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstu
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ", Posbility: 0.0001
Next Token : v, Posbility: 0.0001
Next Token : vy, Posbility: 0.0002
Next Token : wy, Posbility: 0.0003
Next Token : vw, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvw
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : XYZ, Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token : zy, Posbility: 0.0000
Next Token : xy, Posbility: 0.0022
Next Token : xyz, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token :  , Posbility: 0.0032
Next Token : 0, Posbility: 0.0041
Next Token : ";, Posbility: 0.0077
Next Token : ABC, Posbility: 0.0728
Next Token : ", Posbility: 0.8867
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz"
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0017
Next Token :  |, Posbility: 0.0021
Next Token :  =, Posbility: 0.0084
Next Token : 
, Posbility: 0.0139
Next Token :  in, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (*, Posbility: 0.0002
Next Token :   , Posbility: 0.0024
Next Token : 

, Posbility: 0.0028
Next Token :  , Posbility: 0.0059
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token :     , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0088
Next Token : (, Posbility: 0.0145
Next Token : s, Posbility: 0.0145
Next Token : List, Posbility: 0.0270
Next Token : let, Posbility: 0.8945
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0342
Next Token :  count, Posbility: 0.0564
Next Token :  rec, Posbility: 0.0564
Next Token :  chars, Posbility: 0.0933
Next Token :  , Posbility: 0.4180
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0291
Next Token : map, Posbility: 0.0291
Next Token : counts, Posbility: 0.0542
Next Token : s, Posbility: 0.0698
Next Token : alphabet, Posbility: 0.4004
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0054
Next Token : 2, Posbility: 0.0078
Next Token : s, Posbility: 0.0146
Next Token :  =, Posbility: 0.1387
Next Token : _, Posbility: 0.7969
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0757
Next Token : len, Posbility: 0.0859
Next Token : set, Posbility: 0.0972
Next Token : char, Posbility: 0.0972
Next Token : length, Posbility: 0.1250
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  be, Posbility: 0.0010
Next Token : _, Posbility: 0.0022
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0033
Next Token :  26, Posbility: 0.0033
Next Token :  string, Posbility: 0.0054
Next Token :  , Posbility: 0.1787
Next Token :  String, Posbility: 0.8008
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : Length, Posbility: 0.0009
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0002
Next Token : get, Posbility: 0.0011
Next Token : len, Posbility: 0.0015
Next Token : Length, Posbility: 0.0229
Next Token : length, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0008
Next Token : _, Posbility: 0.0009
Next Token : (, Posbility: 0.0036
Next Token :  in, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : alg, Posbility: 0.0000
Next Token : Alpha, Posbility: 0.0000
Next Token : s, Posbility: 0.0004
Next Token : (, Posbility: 0.0019
Next Token : alphabet, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token : ., Posbility: 0.0004
Next Token : 
, Posbility: 0.0009
Next Token :  =, Posbility: 0.0013
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0031
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0055
Next Token : (, Posbility: 0.0081
Next Token : String, Posbility: 0.0103
Next Token : List, Posbility: 0.0219
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0537
Next Token :  count, Posbility: 0.0537
Next Token :  rec, Posbility: 0.0537
Next Token :  chars, Posbility: 0.0884
Next Token :  , Posbility: 0.3965
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0228
Next Token : positions, Posbility: 0.0294
Next Token : counts, Posbility: 0.0332
Next Token : s, Posbility: 0.1689
Next Token : alphabet, Posbility: 0.3574
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0015
Next Token : ed, Posbility: 0.0058
Next Token : s, Posbility: 0.0084
Next Token :  =, Posbility: 0.0084
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : position, Posbility: 0.0393
Next Token : map, Posbility: 0.0503
Next Token : set, Posbility: 0.0645
Next Token : index, Posbility: 0.1064
Next Token : char, Posbility: 0.1992
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0016
Next Token :  , Posbility: 0.0044
Next Token :  =, Posbility: 0.0879
Next Token : _, Posbility: 0.2393
Next Token : s, Posbility: 0.6484
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token : :, Posbility: 0.0035
Next Token :  , Posbility: 0.0096
Next Token : _, Posbility: 0.1167
Next Token :  =, Posbility: 0.8633
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0070
Next Token :  [, Posbility: 0.0315
Next Token : 
, Posbility: 0.1406
Next Token :  , Posbility: 0.2988
Next Token :  String, Posbility: 0.4902
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : Map, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0181
Next Token : map, Posbility: 0.0630
Next Token : sub, Posbility: 0.1040
Next Token : to, Posbility: 0.2832
Next Token : split, Posbility: 0.3633
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0014
Next Token :  ', Posbility: 0.0016
Next Token :  ~, Posbility: 0.0102
Next Token : _, Posbility: 0.2617
Next Token :  , Posbility: 0.7148
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ',', Posbility: 0.0009
Next Token : ",", Posbility: 0.0015
Next Token : (, Posbility: 0.0066
Next Token : s, Posbility: 0.0066
Next Token : alphabet, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0162
Next Token :  ", Posbility: 0.0566
Next Token :  "", Posbility: 0.0566
Next Token :  , Posbility: 0.2539
Next Token :  in, Posbility: 0.5391
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0006
Next Token :   , Posbility: 0.0008
Next Token :  , Posbility: 0.0044
Next Token : 

, Posbility: 0.0530
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0004
Next Token :       , Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token :     , Posbility: 0.0010
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0071
Next Token : (, Posbility: 0.0071
Next Token : String, Posbility: 0.0081
Next Token : List, Posbility: 0.0219
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0206
Next Token :  char, Posbility: 0.0562
Next Token :  count, Posbility: 0.0562
Next Token :  chars, Posbility: 0.1523
Next Token :  , Posbility: 0.4160
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0159
Next Token : positions, Posbility: 0.0203
Next Token : counts, Posbility: 0.0295
Next Token : s, Posbility: 0.1924
Next Token : alphabet, Posbility: 0.4629
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ed, Posbility: 0.0008
Next Token : ic, Posbility: 0.0009
Next Token : s, Posbility: 0.0040
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0330
Next Token : indices, Posbility: 0.0330
Next Token : index, Posbility: 0.0374
Next Token : positions, Posbility: 0.0422
Next Token : char, Posbility: 0.5156
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0008
Next Token : set, Posbility: 0.0008
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.1177
Next Token : s, Posbility: 0.8711
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0009
Next Token :  , Posbility: 0.0047
Next Token : 2, Posbility: 0.0047
Next Token :  =, Posbility: 0.0938
Next Token : _, Posbility: 0.8867
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0266
Next Token : map, Posbility: 0.0342
Next Token : count, Posbility: 0.0439
Next Token : set, Posbility: 0.0723
Next Token : length, Posbility: 0.5352
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token : _, Posbility: 0.0017
Next Token : s, Posbility: 0.0085
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  Vec, Posbility: 0.0012
Next Token : 
, Posbility: 0.0242
Next Token :  String, Posbility: 0.4844
Next Token :  , Posbility: 0.4844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0085
Next Token : Seq, Posbility: 0.0125
Next Token : alphabet, Posbility: 0.0635
Next Token : List, Posbility: 0.2832
Next Token : Array, Posbility: 0.6016
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0002
Next Token : map, Posbility: 0.0003
Next Token : Length, Posbility: 0.0003
Next Token : len, Posbility: 0.0005
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : alg, Posbility: 0.0000
Next Token : Alpha, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0007
Next Token : alphabet, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  chars, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  in, Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token : ., Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0022
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0021
Next Token : 

, Posbility: 0.0532
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0003
Next Token : 

, Posbility: 0.0003
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0056
Next Token : 
, Posbility: 0.0071
Next Token : (, Posbility: 0.0071
Next Token : List, Posbility: 0.0151
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0454
Next Token :  char, Posbility: 0.0581
Next Token :  count, Posbility: 0.0581
Next Token :  chars, Posbility: 0.1230
Next Token :  , Posbility: 0.3340
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0205
Next Token : counts, Posbility: 0.0232
Next Token : positions, Posbility: 0.0264
Next Token : s, Posbility: 0.1514
Next Token : alphabet, Posbility: 0.4668
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ical, Posbility: 0.0009
Next Token : ic, Posbility: 0.0010
Next Token :  =, Posbility: 0.0028
Next Token : s, Posbility: 0.0036
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : position, Posbility: 0.0193
Next Token : indices, Posbility: 0.0193
Next Token : positions, Posbility: 0.0320
Next Token : index, Posbility: 0.0464
Next Token : char, Posbility: 0.6406
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token :  =, Posbility: 0.0157
Next Token : _, Posbility: 0.1167
Next Token : s, Posbility: 0.8633
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0003
Next Token : 2, Posbility: 0.0021
Next Token :  , Posbility: 0.0031
Next Token :  =, Posbility: 0.0227
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : set, Posbility: 0.0413
Next Token : map, Posbility: 0.0466
Next Token : indices, Posbility: 0.0466
Next Token : count, Posbility: 0.0601
Next Token : index, Posbility: 0.0991
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0067
Next Token :  i, Posbility: 0.0075
Next Token :  , Posbility: 0.0713
Next Token : _, Posbility: 0.1943
Next Token :  =, Posbility: 0.6797
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0122
Next Token :  String, Posbility: 0.0903
Next Token :  function, Posbility: 0.0903
Next Token : 
, Posbility: 0.2451
Next Token :  , Posbility: 0.5195
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0217
Next Token : (, Posbility: 0.0359
Next Token : ref, Posbility: 0.0359
Next Token : List, Posbility: 0.0977
Next Token : Array, Posbility: 0.6367
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : Map, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0315
Next Token : iter, Posbility: 0.0457
Next Token : fold, Posbility: 0.0967
Next Token : find, Posbility: 0.2051
Next Token : map, Posbility: 0.4922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0332
Next Token : _, Posbility: 0.0332
Next Token :  i, Posbility: 0.0703
Next Token : i, Posbility: 0.0903
Next Token :  , Posbility: 0.6680
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0094
Next Token : Char, Posbility: 0.0094
Next Token : s, Posbility: 0.0289
Next Token : alphabet, Posbility: 0.0786
Next Token : (, Posbility: 0.8477
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0129
Next Token : Function, Posbility: 0.0166
Next Token : String, Posbility: 0.1226
Next Token : function, Posbility: 0.1787
Next Token : fun, Posbility: 0.6211
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  letter, Posbility: 0.0074
Next Token :  a, Posbility: 0.0121
Next Token :  char, Posbility: 0.0425
Next Token :  i, Posbility: 0.0544
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0082
Next Token : s, Posbility: 0.0222
Next Token : ch, Posbility: 0.0366
Next Token : x, Posbility: 0.1641
Next Token : c, Posbility: 0.7383
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token :  =>, Posbility: 0.0003
Next Token : ->, Posbility: 0.0005
Next Token : 1, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : →, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0019
Next Token :  find, Posbility: 0.0019
Next Token : 
, Posbility: 0.0623
Next Token :  String, Posbility: 0.4590
Next Token :  , Posbility: 0.4590
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0481
Next Token : Char, Posbility: 0.1152
Next Token : Array, Posbility: 0.1680
Next Token : c, Posbility: 0.1895
Next Token : alphabet, Posbility: 0.2754
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0022
Next Token : ), Posbility: 0.0022
Next Token :  =, Posbility: 0.0089
Next Token : ., Posbility: 0.0742
Next Token : _, Posbility: 0.9062
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : indexOf, Posbility: 0.0000
Next Token : character, Posbility: 0.0001
Next Token : index, Posbility: 0.0003
Next Token : length, Posbility: 0.0067
Next Token : char, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_char
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0078
Next Token : ), Posbility: 0.0100
Next Token :  =, Posbility: 0.0271
Next Token : _, Posbility: 0.0447
Next Token : ., Posbility: 0.8984
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : find, Posbility: 0.0210
Next Token : [, Posbility: 0.0305
Next Token : Index, Posbility: 0.1367
Next Token : indexOf, Posbility: 0.1553
Next Token : index, Posbility: 0.6133
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : Of, Posbility: 0.0019
Next Token : (, Posbility: 0.0035
Next Token : ), Posbility: 0.0052
Next Token : _, Posbility: 0.2188
Next Token :  , Posbility: 0.7656
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0002
Next Token : ^, Posbility: 0.0002
Next Token : alphabet, Posbility: 0.0003
Next Token : (, Posbility: 0.0293
Next Token : c, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  >=, Posbility: 0.0024
Next Token :  +, Posbility: 0.0050
Next Token :  |, Posbility: 0.0064
Next Token :  , Posbility: 0.0225
Next Token : ), Posbility: 0.9531
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0017
Next Token :  [, Posbility: 0.0024
Next Token :  ~, Posbility: 0.0045
Next Token : 
, Posbility: 0.0051
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0012
Next Token : c, Posbility: 0.0088
Next Token : (, Posbility: 0.0239
Next Token : alphabet, Posbility: 0.4805
Next Token : s, Posbility: 0.4805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0037
Next Token :  |, Posbility: 0.0068
Next Token : 
, Posbility: 0.0211
Next Token : ., Posbility: 0.0649
Next Token :  in, Posbility: 0.8945
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 0.0013
Next Token :  , Posbility: 0.0044
Next Token : 

, Posbility: 0.0371
Next Token : 
, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0006
Next Token :  , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0058
Next Token : (, Posbility: 0.0140
Next Token : List, Posbility: 0.0179
Next Token : Array, Posbility: 0.0554
Next Token : let, Posbility: 0.8672
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0383
Next Token :  index, Posbility: 0.0383
Next Token :  count, Posbility: 0.0630
Next Token :  chars, Posbility: 0.1040
Next Token :  , Posbility: 0.4668
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : positions, Posbility: 0.0173
Next Token : indices, Posbility: 0.0222
Next Token : counts, Posbility: 0.0286
Next Token : s, Posbility: 0.0366
Next Token : alphabet, Posbility: 0.6484
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ical, Posbility: 0.0005
Next Token : ic, Posbility: 0.0006
Next Token :  =, Posbility: 0.0010
Next Token : s, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : indices, Posbility: 0.0142
Next Token : positions, Posbility: 0.0142
Next Token : count, Posbility: 0.0234
Next Token : index, Posbility: 0.0388
Next Token : char, Posbility: 0.7773
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 0.0474
Next Token : s, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : 2, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token :  =, Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : position, Posbility: 0.0250
Next Token : indices, Posbility: 0.0283
Next Token : length, Posbility: 0.0364
Next Token : count, Posbility: 0.1436
Next Token : index, Posbility: 0.3047
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0010
Next Token : 2, Posbility: 0.0024
Next Token :  , Posbility: 0.0027
Next Token :  =, Posbility: 0.0201
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0029
Next Token : size, Posbility: 0.0033
Next Token : set, Posbility: 0.0048
Next Token : count, Posbility: 0.0062
Next Token : length, Posbility: 0.9180
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  be, Posbility: 0.0003
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 0.0010
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0041
Next Token :  String, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0006
Next Token : (, Posbility: 0.0015
Next Token : List, Posbility: 0.0015
Next Token : alphabet, Posbility: 0.0025
Next Token : Array, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Length, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : Ext, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : map, Posbility: 0.0000
Next Token : count, Posbility: 0.0001
Next Token : size, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Alpha, Posbility: 0.0000
Next Token : alg, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : alphabet, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  chars, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : S, Posbility: 0.0000
Next Token : sz, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  index, Posbility: 0.0000
Next Token : ., Posbility: 0.0001
Next Token :  in, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : indices, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : index, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 0.0013
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0011
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : alphabet, Posbility: 0.0288
Next Token : if, Posbility: 0.0420
Next Token : Array, Posbility: 0.0476
Next Token : (, Posbility: 0.0540
Next Token : let, Posbility: 0.7422
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0300
Next Token :  count, Posbility: 0.0496
Next Token :  index, Posbility: 0.0815
Next Token :  chars, Posbility: 0.0815
Next Token :  , Posbility: 0.3672
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0175
Next Token : positions, Posbility: 0.0175
Next Token : indices, Posbility: 0.0198
Next Token : s, Posbility: 0.0417
Next Token : alphabet, Posbility: 0.5781
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ic, Posbility: 0.0006
Next Token : ical, Posbility: 0.0010
Next Token :  =, Posbility: 0.0015
Next Token : s, Posbility: 0.0019
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : indices, Posbility: 0.0072
Next Token : length, Posbility: 0.0092
Next Token : count, Posbility: 0.0152
Next Token : index, Posbility: 0.0413
Next Token : char, Posbility: 0.8281
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0023
Next Token : _, Posbility: 0.0474
Next Token : s, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _0_, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : indices, Posbility: 0.0120
Next Token : position, Posbility: 0.0154
Next Token : length, Posbility: 0.0199
Next Token : count, Posbility: 0.0786
Next Token : index, Posbility: 0.5781
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0009
Next Token :  , Posbility: 0.0021
Next Token : 2, Posbility: 0.0057
Next Token :  =, Posbility: 0.0227
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : set, Posbility: 0.0244
Next Token : index, Posbility: 0.0664
Next Token : char, Posbility: 0.0664
Next Token : count, Posbility: 0.0962
Next Token : length, Posbility: 0.1406
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0100
Next Token : 2, Posbility: 0.0129
Next Token :  , Posbility: 0.0449
Next Token :  =, Posbility: 0.1079
Next Token : _, Posbility: 0.7969
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : mod, Posbility: 0.0396
Next Token : plus, Posbility: 0.0449
Next Token : times, Posbility: 0.0449
Next Token : less, Posbility: 0.0510
Next Token : minus, Posbility: 0.2930
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0009
Next Token : 1, Posbility: 0.0173
Next Token :  =, Posbility: 0.0173
Next Token : _1_, Posbility: 0.0173
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0023
Next Token : i, Posbility: 0.0055
Next Token : alphabet, Posbility: 0.0317
Next Token : 1, Posbility: 0.1108
Next Token : one, Posbility: 0.8203
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  plus, Posbility: 0.0004
Next Token : 
, Posbility: 0.0016
Next Token :  , Posbility: 0.0135
Next Token : _, Posbility: 0.0287
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Math, Posbility: 0.0005
Next Token :  ((, Posbility: 0.0005
Next Token :  String, Posbility: 0.0007
Next Token : 
, Posbility: 0.0471
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0023
Next Token : if, Posbility: 0.0023
Next Token : (, Posbility: 0.0170
Next Token : Array, Posbility: 0.0461
Next Token : alphabet, Posbility: 0.9258
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : index, Posbility: 0.0001
Next Token : length, Posbility: 0.0003
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : indices, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 0.0110
Next Token : index, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  @, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Length, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  –, Posbility: 0.0002
Next Token :  +, Posbility: 0.0015
Next Token : -1, Posbility: 0.0040
Next Token :  -1, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : /, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : −, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  1;, Posbility: 0.0003
Next Token :  , Posbility: 0.0019
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : L, Posbility: 0.0002
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0022
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0031
Next Token : 

, Posbility: 0.0096
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :     , Posbility: 0.0009
Next Token :  , Posbility: 0.0028
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0097
Next Token : if, Posbility: 0.0160
Next Token : (, Posbility: 0.0205
Next Token : Array, Posbility: 0.0383
Next Token : let, Posbility: 0.8711
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0410
Next Token :  index, Posbility: 0.0527
Next Token :  count, Posbility: 0.0527
Next Token :  chars, Posbility: 0.0679
Next Token :  , Posbility: 0.3906
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0123
Next Token : n, Posbility: 0.0140
Next Token : indices, Posbility: 0.0140
Next Token : s, Posbility: 0.0708
Next Token : alphabet, Posbility: 0.5938
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ic, Posbility: 0.0005
Next Token : ical, Posbility: 0.0008
Next Token :  =, Posbility: 0.0010
Next Token : s, Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0075
Next Token : position, Posbility: 0.0075
Next Token : count, Posbility: 0.0096
Next Token : index, Posbility: 0.0261
Next Token : char, Posbility: 0.8672
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 0.0064
Next Token : _, Posbility: 0.0471
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _0_, Posbility: 0.0002
Next Token :  =, Posbility: 0.0012
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : indices, Posbility: 0.0096
Next Token : position, Posbility: 0.0139
Next Token : length, Posbility: 0.0294
Next Token : count, Posbility: 0.0378
Next Token : index, Posbility: 0.6680
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0006
Next Token :  , Posbility: 0.0009
Next Token : _0_, Posbility: 0.0052
Next Token :  =, Posbility: 0.0066
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0400
Next Token : char, Posbility: 0.0454
Next Token : plus, Posbility: 0.0583
Next Token : minus, Posbility: 0.0962
Next Token : length, Posbility: 0.2305
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0019
Next Token : _2_, Posbility: 0.0019
Next Token :  , Posbility: 0.0066
Next Token :  =, Posbility: 0.0123
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : mod, Posbility: 0.0118
Next Token : divide, Posbility: 0.0284
Next Token : times, Posbility: 0.0364
Next Token : plus, Posbility: 0.0684
Next Token : minus, Posbility: 0.6484
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : _2_, Posbility: 0.0012
Next Token : _1_, Posbility: 0.0015
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : three, Posbility: 0.0037
Next Token : zero, Posbility: 0.0042
Next Token : alphabet, Posbility: 0.0510
Next Token : two, Posbility: 0.1084
Next Token : one, Posbility: 0.8008
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0007
Next Token : 2, Posbility: 0.0016
Next Token :  , Posbility: 0.0105
Next Token :  =, Posbility: 0.0325
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : mod, Posbility: 0.0579
Next Token : times, Posbility: 0.0742
Next Token : divide, Posbility: 0.0742
Next Token : plus, Posbility: 0.1079
Next Token : minus, Posbility: 0.1787
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token : _1_, Posbility: 0.0012
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0037
Next Token : two, Posbility: 0.0079
Next Token : 1, Posbility: 0.0101
Next Token : alphabet, Posbility: 0.0354
Next Token : one, Posbility: 0.9141
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0021
Next Token :  , Posbility: 0.0035
Next Token : _, Posbility: 0.0139
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0004
Next Token :   , Posbility: 0.0006
Next Token : 
, Posbility: 0.0850
Next Token :  , Posbility: 0.9102
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0009
Next Token : Alpha, Posbility: 0.0009
Next Token : 
, Posbility: 0.0065
Next Token : (, Posbility: 0.0178
Next Token : alphabet, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : index, Posbility: 0.0003
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : idx, Posbility: 0.0000
Next Token : indexOf, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 0.0019
Next Token : index, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : [, Posbility: 0.0005
Next Token : ., Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0229
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : one, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  one, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _1., Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  one, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  in, Posbility: 0.0024
Next Token :  +, Posbility: 0.0045
Next Token :  -1, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : −, Posbility: 0.0001
Next Token : minus, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1;, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.0009
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token : 
, Posbility: 0.0032
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0022
Next Token : 

, Posbility: 0.0110
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0004
Next Token :     , Posbility: 0.0010
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0067
Next Token : if, Posbility: 0.0126
Next Token : (, Posbility: 0.0266
Next Token : Array, Posbility: 0.0266
Next Token : let, Posbility: 0.8828
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  index, Posbility: 0.0537
Next Token :  chars, Posbility: 0.0537
Next Token :  char, Posbility: 0.0537
Next Token :  count, Posbility: 0.0537
Next Token :  , Posbility: 0.3965
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0101
Next Token : length, Posbility: 0.0114
Next Token : n, Posbility: 0.0146
Next Token : s, Posbility: 0.0654
Next Token : alphabet, Posbility: 0.6211
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ic, Posbility: 0.0004
Next Token : ical, Posbility: 0.0007
Next Token : s, Posbility: 0.0013
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : position, Posbility: 0.0046
Next Token : length, Posbility: 0.0076
Next Token : count, Posbility: 0.0097
Next Token : index, Posbility: 0.0265
Next Token : char, Posbility: 0.8750
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 0.0064
Next Token : _, Posbility: 0.0471
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : _0_, Posbility: 0.0003
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0074
Next Token : indices, Posbility: 0.0074
Next Token : length, Posbility: 0.0259
Next Token : count, Posbility: 0.0332
Next Token : index, Posbility: 0.7578
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0005
Next Token :  , Posbility: 0.0013
Next Token : _0_, Posbility: 0.0051
Next Token :  =, Posbility: 0.0096
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0245
Next Token : first, Posbility: 0.0315
Next Token : minus, Posbility: 0.0405
Next Token : char, Posbility: 0.0588
Next Token : length, Posbility: 0.4355
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0015
Next Token : _2_, Posbility: 0.0017
Next Token :  , Posbility: 0.0058
Next Token :  =, Posbility: 0.0139
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : less, Posbility: 0.0067
Next Token : divide, Posbility: 0.0077
Next Token : times, Posbility: 0.0267
Next Token : plus, Posbility: 0.0498
Next Token : minus, Posbility: 0.7812
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : _2_, Posbility: 0.0007
Next Token : _1_, Posbility: 0.0008
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : zero, Posbility: 0.0034
Next Token : three, Posbility: 0.0071
Next Token : alphabet, Posbility: 0.0320
Next Token : two, Posbility: 0.1113
Next Token : one, Posbility: 0.8242
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0004
Next Token :  to, Posbility: 0.0008
Next Token :  , Posbility: 0.0065
Next Token :  =, Posbility: 0.0201
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0126
Next Token : to, Posbility: 0.0184
Next Token : times, Posbility: 0.0209
Next Token : plus, Posbility: 0.0640
Next Token : minus, Posbility: 0.6914
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : _2_, Posbility: 0.0004
Next Token : _1_, Posbility: 0.0008
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : three, Posbility: 0.0036
Next Token : zero, Posbility: 0.0060
Next Token : alphabet, Posbility: 0.0820
Next Token : two, Posbility: 0.1055
Next Token : one, Posbility: 0.7812
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0011
Next Token :  *, Posbility: 0.0018
Next Token :  , Posbility: 0.0148
Next Token :  =, Posbility: 0.0583
Next Token : _, Posbility: 0.9141
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : is, Posbility: 0.0334
Next Token : less, Posbility: 0.0334
Next Token : times, Posbility: 0.0430
Next Token : plus, Posbility: 0.0913
Next Token : minus, Posbility: 0.4629
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _1_, Posbility: 0.0003
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : three, Posbility: 0.0009
Next Token : 1, Posbility: 0.0031
Next Token : two, Posbility: 0.0084
Next Token : alphabet, Posbility: 0.0084
Next Token : one, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token : 
, Posbility: 0.0021
Next Token :  , Posbility: 0.0031
Next Token : _, Posbility: 0.0123
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0006
Next Token :   , Posbility: 0.0011
Next Token :  ((, Posbility: 0.0011
Next Token : 
, Posbility: 0.0947
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0003
Next Token : \, Posbility: 0.0009
Next Token : 
, Posbility: 0.0065
Next Token : (, Posbility: 0.0178
Next Token : alphabet, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ical, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : index, Posbility: 0.0001
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : indexOf, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 0.0009
Next Token : index, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : ., Posbility: 0.0004
Next Token : [, Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : index, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 0.0293
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _1., Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : on, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0010
Next Token : _, Posbility: 0.0015
Next Token :  +, Posbility: 0.0015
Next Token :  -1, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : minus, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0001
Next Token : −, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  -1, Posbility: 0.0001
Next Token :  1;, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token :  1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 0.0005
Next Token : 
, Posbility: 0.0076
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token : 

, Posbility: 0.0159
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0008
Next Token :     , Posbility: 0.0017
Next Token :  , Posbility: 0.0019
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0085
Next Token : if, Posbility: 0.0160
Next Token : Array, Posbility: 0.0181
Next Token : (, Posbility: 0.0339
Next Token : let, Posbility: 0.8711
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0403
Next Token :  index, Posbility: 0.0403
Next Token :  chars, Posbility: 0.0403
Next Token :  count, Posbility: 0.0664
Next Token :  , Posbility: 0.4902
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0089
Next Token : length, Posbility: 0.0089
Next Token : n, Posbility: 0.0114
Next Token : s, Posbility: 0.0513
Next Token : alphabet, Posbility: 0.7070
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ic, Posbility: 0.0003
Next Token : ical, Posbility: 0.0005
Next Token : s, Posbility: 0.0010
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : position, Posbility: 0.0023
Next Token : length, Posbility: 0.0079
Next Token : count, Posbility: 0.0079
Next Token : index, Posbility: 0.0166
Next Token : char, Posbility: 0.9102
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 0.0066
Next Token : _, Posbility: 0.0178
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : _0_, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0049
Next Token : in, Posbility: 0.0055
Next Token : length, Posbility: 0.0315
Next Token : count, Posbility: 0.0315
Next Token : index, Posbility: 0.8125
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token : _0_, Posbility: 0.0028
Next Token :  =, Posbility: 0.0096
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0154
Next Token : index, Posbility: 0.0175
Next Token : minus, Posbility: 0.0254
Next Token : char, Posbility: 0.0369
Next Token : length, Posbility: 0.6523
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0008
Next Token : s, Posbility: 0.0009
Next Token :  , Posbility: 0.0031
Next Token :  =, Posbility: 0.0123
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : is, Posbility: 0.0014
Next Token : less, Posbility: 0.0023
Next Token : times, Posbility: 0.0049
Next Token : plus, Posbility: 0.0219
Next Token : minus, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _3_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : _2_, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : zero, Posbility: 0.0014
Next Token : alphabet, Posbility: 0.0063
Next Token : three, Posbility: 0.0063
Next Token : two, Posbility: 0.0464
Next Token : one, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token :  to, Posbility: 0.0005
Next Token :  , Posbility: 0.0027
Next Token :  =, Posbility: 0.0159
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0023
Next Token : less, Posbility: 0.0030
Next Token : times, Posbility: 0.0030
Next Token : plus, Posbility: 0.0172
Next Token : minus, Posbility: 0.9414
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : _1_, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : zero, Posbility: 0.0019
Next Token : three, Posbility: 0.0024
Next Token : alphabet, Posbility: 0.0039
Next Token : two, Posbility: 0.0227
Next Token : one, Posbility: 0.9648
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0007
Next Token :  in, Posbility: 0.0011
Next Token :  , Posbility: 0.0045
Next Token :  =, Posbility: 0.0178
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : is, Posbility: 0.0023
Next Token : to, Posbility: 0.0030
Next Token : less, Posbility: 0.0038
Next Token : plus, Posbility: 0.0219
Next Token : minus, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : _1_, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : zero, Posbility: 0.0018
Next Token : three, Posbility: 0.0023
Next Token : alphabet, Posbility: 0.0105
Next Token : two, Posbility: 0.0366
Next Token : one, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0013
Next Token :  in, Posbility: 0.0019
Next Token :  , Posbility: 0.0177
Next Token :  =, Posbility: 0.1152
Next Token : _, Posbility: 0.8516
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0085
Next Token : is, Posbility: 0.0181
Next Token : less, Posbility: 0.0181
Next Token : plus, Posbility: 0.0630
Next Token : minus, Posbility: 0.7695
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : one, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : three, Posbility: 0.0007
Next Token : 1, Posbility: 0.0009
Next Token : alphabet, Posbility: 0.0009
Next Token : two, Posbility: 0.0085
Next Token : one, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0004
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.0024
Next Token : _, Posbility: 0.0123
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0005
Next Token :  String, Posbility: 0.0006
Next Token :   , Posbility: 0.0008
Next Token : 
, Posbility: 0.0532
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0001
Next Token : \, Posbility: 0.0009
Next Token : 
, Posbility: 0.0032
Next Token : (, Posbility: 0.0036
Next Token : alphabet, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ical, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : indexOf, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 0.0003
Next Token : index, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 0.0003
Next Token : [, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : subtract, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : three, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0179
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0006
Next Token :  -1, Posbility: 0.0012
Next Token :  +, Posbility: 0.0012
Next Token : _, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : \, Posbility: 0.0001
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  1;, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.0006
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token : 
, Posbility: 0.0036
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0011
Next Token : 

, Posbility: 0.0229
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :       , Posbility: 0.0013
Next Token :  , Posbility: 0.0019
Next Token :     , Posbility: 0.0028
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0110
Next Token : Array, Posbility: 0.0141
Next Token : if, Posbility: 0.0160
Next Token : (, Posbility: 0.0339
Next Token : let, Posbility: 0.8711
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  index, Posbility: 0.0388
Next Token :  chars, Posbility: 0.0388
Next Token :  char, Posbility: 0.0640
Next Token :  count, Posbility: 0.0640
Next Token :  , Posbility: 0.4727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0067
Next Token : length, Posbility: 0.0085
Next Token : n, Posbility: 0.0097
Next Token : s, Posbility: 0.0435
Next Token : alphabet, Posbility: 0.7734
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ic, Posbility: 0.0003
Next Token : ical, Posbility: 0.0006
Next Token : s, Posbility: 0.0012
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : indices, Posbility: 0.0018
Next Token : length, Posbility: 0.0062
Next Token : count, Posbility: 0.0080
Next Token : index, Posbility: 0.0132
Next Token : char, Posbility: 0.9258
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 0.0066
Next Token : _, Posbility: 0.0178
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : _0_, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0028
Next Token : in, Posbility: 0.0036
Next Token : length, Posbility: 0.0205
Next Token : count, Posbility: 0.0264
Next Token : index, Posbility: 0.8711
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0003
Next Token :  , Posbility: 0.0013
Next Token : _0_, Posbility: 0.0017
Next Token :  =, Posbility: 0.0140
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0098
Next Token : count, Posbility: 0.0111
Next Token : minus, Posbility: 0.0208
Next Token : char, Posbility: 0.0234
Next Token : length, Posbility: 0.7773
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0003
Next Token : s, Posbility: 0.0005
Next Token :  , Posbility: 0.0017
Next Token :  =, Posbility: 0.0109
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0009
Next Token : less, Posbility: 0.0009
Next Token : times, Posbility: 0.0019
Next Token : plus, Posbility: 0.0108
Next Token : minus, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _3_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _2_, Posbility: 0.0002
Next Token : _1_, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : zero, Posbility: 0.0007
Next Token : alphabet, Posbility: 0.0014
Next Token : three, Posbility: 0.0039
Next Token : two, Posbility: 0.0291
Next Token : one, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0002
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :  =, Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0004
Next Token : min, Posbility: 0.0004
Next Token : less, Posbility: 0.0005
Next Token : plus, Posbility: 0.0031
Next Token : minus, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : alphabet, Posbility: 0.0002
Next Token : zero, Posbility: 0.0003
Next Token : three, Posbility: 0.0005
Next Token : two, Posbility: 0.0041
Next Token : one, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0001
Next Token :  in, Posbility: 0.0006
Next Token :  , Posbility: 0.0013
Next Token :  =, Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0001
Next Token : min, Posbility: 0.0001
Next Token : less, Posbility: 0.0003
Next Token : plus, Posbility: 0.0012
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _1_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ones, Posbility: 0.0001
Next Token : zero, Posbility: 0.0002
Next Token : three, Posbility: 0.0004
Next Token : two, Posbility: 0.0032
Next Token : one, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  to, Posbility: 0.0002
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 0.0109
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0004
Next Token : to, Posbility: 0.0007
Next Token : less, Posbility: 0.0012
Next Token : plus, Posbility: 0.0040
Next Token : minus, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : zero, Posbility: 0.0004
Next Token : alphabet, Posbility: 0.0005
Next Token : three, Posbility: 0.0011
Next Token : two, Posbility: 0.0179
Next Token : one, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0008
Next Token :  in, Posbility: 0.0021
Next Token :  , Posbility: 0.0093
Next Token :  =, Posbility: 0.1455
Next Token : _, Posbility: 0.8359
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : equals, Posbility: 0.0029
Next Token : is, Posbility: 0.0062
Next Token : less, Posbility: 0.0062
Next Token : plus, Posbility: 0.0278
Next Token : minus, Posbility: 0.9219
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : zero, Posbility: 0.0003
Next Token : three, Posbility: 0.0004
Next Token : two, Posbility: 0.0052
Next Token : one, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.0109
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  String, Posbility: 0.0005
Next Token :  0, Posbility: 0.0007
Next Token : 
, Posbility: 0.0259
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : \, Posbility: 0.0004
Next Token : 
, Posbility: 0.0007
Next Token : (, Posbility: 0.0008
Next Token : alphabet, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ical, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : indexOf, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : length, Posbility: 0.0002
Next Token : index, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : subtract, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : on, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0229
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  -1, Posbility: 0.0007
Next Token :  +, Posbility: 0.0011
Next Token : _, Posbility: 0.0474
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  1;, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0017
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0293
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :       , Posbility: 0.0013
Next Token :  , Posbility: 0.0025
Next Token :     , Posbility: 0.0036
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0124
Next Token : Array, Posbility: 0.0124
Next Token : if, Posbility: 0.0140
Next Token : (, Posbility: 0.0381
Next Token : let, Posbility: 0.8672
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  index, Posbility: 0.0347
Next Token :  char, Posbility: 0.0444
Next Token :  chars, Posbility: 0.0444
Next Token :  count, Posbility: 0.0571
Next Token :  , Posbility: 0.5430
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0043
Next Token : length, Posbility: 0.0063
Next Token : n, Posbility: 0.0081
Next Token : s, Posbility: 0.0320
Next Token : alphabet, Posbility: 0.8242
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet
 score:False
Error type: noerr
---------------------------
Next Token : ic, Posbility: 0.0002
Next Token : ical, Posbility: 0.0004
Next Token : s, Posbility: 0.0008
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_
 score:False
Error type: noerr
---------------------------
Next Token : string, Posbility: 0.0014
Next Token : length, Posbility: 0.0063
Next Token : count, Posbility: 0.0063
Next Token : index, Posbility: 0.0104
Next Token : char, Posbility: 0.9414
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_char
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0024
Next Token : _, Posbility: 0.0179
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : _0_, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_
 score:False
Error type: noerr
---------------------------
Next Token : char, Posbility: 0.0022
Next Token : in, Posbility: 0.0028
Next Token : count, Posbility: 0.0209
Next Token : length, Posbility: 0.0269
Next Token : index, Posbility: 0.8906
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0002
Next Token : _0_, Posbility: 0.0008
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 0.0159
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0074
Next Token : count, Posbility: 0.0083
Next Token : char, Posbility: 0.0137
Next Token : minus, Posbility: 0.0176
Next Token : length, Posbility: 0.8477
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0002
Next Token : s, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0003
Next Token : min, Posbility: 0.0003
Next Token : times, Posbility: 0.0005
Next Token : plus, Posbility: 0.0041
Next Token : minus, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus
 score:False
Error type: noerr
---------------------------
Next Token : _3_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _1_, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0004
Next Token : alphabet, Posbility: 0.0004
Next Token : three, Posbility: 0.0015
Next Token : two, Posbility: 0.0140
Next Token : one, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  =, Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0001
Next Token : min, Posbility: 0.0001
Next Token : less, Posbility: 0.0001
Next Token : plus, Posbility: 0.0009
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0001
Next Token : zero, Posbility: 0.0001
Next Token : three, Posbility: 0.0001
Next Token : two, Posbility: 0.0013
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0000
Next Token :  in, Posbility: 0.0005
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0001
Next Token : less, Posbility: 0.0001
Next Token : plus, Posbility: 0.0003
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0001
Next Token : two, Posbility: 0.0007
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0001
Next Token : plus, Posbility: 0.0002
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0002
Next Token : two, Posbility: 0.0013
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0001
Next Token :  in, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  =, Posbility: 0.0140
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0003
Next Token : min, Posbility: 0.0003
Next Token : less, Posbility: 0.0007
Next Token : plus, Posbility: 0.0032
Next Token : minus, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : four, Posbility: 0.0001
Next Token : zero, Posbility: 0.0001
Next Token : three, Posbility: 0.0004
Next Token : two, Posbility: 0.0052
Next Token : one, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token :  in, Posbility: 0.0007
Next Token :  , Posbility: 0.0049
Next Token :  =, Posbility: 0.2656
Next Token : _, Posbility: 0.7227
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : equals, Posbility: 0.0011
Next Token : is, Posbility: 0.0019
Next Token : less, Posbility: 0.0019
Next Token : plus, Posbility: 0.0084
Next Token : minus, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : one, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : four, Posbility: 0.0001
Next Token : zero, Posbility: 0.0001
Next Token : three, Posbility: 0.0003
Next Token : two, Posbility: 0.0032
Next Token : one, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 0.0009
Next Token : _, Posbility: 0.0097
Next Token :  =, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one =
 score:False
Error type: noerr
---------------------------
Next Token :  String, Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :  0, Posbility: 0.0005
Next Token : 
, Posbility: 0.0140
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : \, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : alphabet, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ical, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_
 score:False
Error type: noerr
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_char
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : index, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : ., Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_
 score:False
Error type: noerr
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_
 score:False
Error type: noerr
---------------------------
Next Token : subtract, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_
 score:False
Error type: noerr
---------------------------
Next Token : three, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : subtract, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : three, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : one, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : on, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  , Posbility: 0.0474
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  -1, Posbility: 0.0007
Next Token :  +, Posbility: 0.0013
Next Token : _, Posbility: 0.0229
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one 
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one -
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1;, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0008
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
 score:False
Error type: noerr
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0330
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :       , Posbility: 0.0010
Next Token :  , Posbility: 0.0025
Next Token :     , Posbility: 0.0032
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0089
Next Token : in, Posbility: 0.0100
Next Token : Array, Posbility: 0.0114
Next Token : (, Posbility: 0.0272
Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  index, Posbility: 0.0306
Next Token :  chars, Posbility: 0.0306
Next Token :  char, Posbility: 0.0393
Next Token :  count, Posbility: 0.0505
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0040
Next Token : length, Posbility: 0.0051
Next Token : n, Posbility: 0.0065
Next Token : s, Posbility: 0.0293
Next Token : alphabet, Posbility: 0.8555
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet
 score:False
Error type: noerr
---------------------------
Next Token : ic, Posbility: 0.0002
Next Token : ical, Posbility: 0.0004
Next Token : s, Posbility: 0.0007
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_
 score:False
Error type: noerr
---------------------------
Next Token : string, Posbility: 0.0014
Next Token : length, Posbility: 0.0049
Next Token : count, Posbility: 0.0081
Next Token : index, Posbility: 0.0104
Next Token : char, Posbility: 0.9414
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_char
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0024
Next Token : _, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars
 score:False
Error type: noerr
---------------------------
Next Token : _0_, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_
 score:False
Error type: noerr
---------------------------
Next Token : indices, Posbility: 0.0020
Next Token : in, Posbility: 0.0025
Next Token : length, Posbility: 0.0166
Next Token : count, Posbility: 0.0214
Next Token : index, Posbility: 0.9102
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token : _0_, Posbility: 0.0006
Next Token :  , Posbility: 0.0011
Next Token :  =, Posbility: 0.0259
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_
 score:False
Error type: noerr
---------------------------
Next Token : index, Posbility: 0.0037
Next Token : count, Posbility: 0.0061
Next Token : char, Posbility: 0.0089
Next Token : minus, Posbility: 0.0115
Next Token : length, Posbility: 0.9102
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 0.0124
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0002
Next Token : min, Posbility: 0.0003
Next Token : times, Posbility: 0.0003
Next Token : plus, Posbility: 0.0019
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus
 score:False
Error type: noerr
---------------------------
Next Token : _3_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_
 score:False
Error type: noerr
---------------------------
Next Token : alphabet, Posbility: 0.0002
Next Token : zero, Posbility: 0.0003
Next Token : three, Posbility: 0.0009
Next Token : two, Posbility: 0.0067
Next Token : one, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0140
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : less, Posbility: 0.0001
Next Token : min, Posbility: 0.0001
Next Token : plus, Posbility: 0.0005
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : zero, Posbility: 0.0000
Next Token : three, Posbility: 0.0001
Next Token : two, Posbility: 0.0006
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  +=, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0097
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : zero, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0002
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0003
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0001
Next Token : plus, Posbility: 0.0002
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0001
Next Token : two, Posbility: 0.0007
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 0.0003
Next Token :  , Posbility: 0.0015
Next Token :  =, Posbility: 0.0229
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0001
Next Token : min, Posbility: 0.0002
Next Token : less, Posbility: 0.0004
Next Token : plus, Posbility: 0.0015
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0001
Next Token : four, Posbility: 0.0001
Next Token : three, Posbility: 0.0003
Next Token : two, Posbility: 0.0032
Next Token : one, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0018
Next Token :  =, Posbility: 0.2676
Next Token : _, Posbility: 0.7266
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : equals, Posbility: 0.0005
Next Token : is, Posbility: 0.0007
Next Token : less, Posbility: 0.0012
Next Token : plus, Posbility: 0.0052
Next Token : minus, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0001
Next Token : four, Posbility: 0.0001
Next Token : three, Posbility: 0.0003
Next Token : two, Posbility: 0.0025
Next Token : one, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token : 
, Posbility: 0.0009
Next Token : _, Posbility: 0.0229
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  String, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token : 
, Posbility: 0.0046
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : alphabet, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ical, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_
 score:False
Error type: noerr
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_char
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_
 score:False
Error type: noerr
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : index, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_
 score:False
Error type: noerr
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_
 score:False
Error type: noerr
---------------------------
Next Token : subtract, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus
 score:False
Error type: noerr
---------------------------
Next Token : _1_1, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : subtract, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : three, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : subtract, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _1_1, Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : on, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : one, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : on, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.1191
Next Token : _, Posbility: 0.8789
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  -1, Posbility: 0.0006
Next Token :  +, Posbility: 0.0011
Next Token : _, Posbility: 0.0292
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one 
 score:False
Error type: noerr
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one -
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  1;, Posbility: 0.0001
Next Token :  1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0001
Next Token : ..., Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0293
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :       , Posbility: 0.0009
Next Token :  , Posbility: 0.0025
Next Token :     , Posbility: 0.0032
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0078
Next Token : in, Posbility: 0.0089
Next Token : Array, Posbility: 0.0129
Next Token : (, Posbility: 0.0272
Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  index, Posbility: 0.0271
Next Token :  count, Posbility: 0.0271
Next Token :  chars, Posbility: 0.0271
Next Token :  char, Posbility: 0.0349
Next Token :  , Posbility: 0.6992
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0036
Next Token : length, Posbility: 0.0036
Next Token : n, Posbility: 0.0047
Next Token : s, Posbility: 0.0210
Next Token : alphabet, Posbility: 0.8945
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet
 score:False
Error type: noerr
---------------------------
Next Token : ic, Posbility: 0.0001
Next Token : ical, Posbility: 0.0003
Next Token : s, Posbility: 0.0006
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_
 score:False
Error type: noerr
---------------------------
Next Token : string, Posbility: 0.0011
Next Token : length, Posbility: 0.0039
Next Token : count, Posbility: 0.0050
Next Token : index, Posbility: 0.0083
Next Token : char, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_char
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 0.0110
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : _0_, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0018
Next Token : minus, Posbility: 0.0020
Next Token : length, Posbility: 0.0104
Next Token : count, Posbility: 0.0171
Next Token : index, Posbility: 0.9375
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : _0_, Posbility: 0.0004
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0159
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0034
Next Token : count, Posbility: 0.0043
Next Token : char, Posbility: 0.0049
Next Token : minus, Posbility: 0.0117
Next Token : length, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0001
Next Token : times, Posbility: 0.0001
Next Token : min, Posbility: 0.0002
Next Token : plus, Posbility: 0.0012
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_
 score:False
Error type: noerr
---------------------------
Next Token : alphabet, Posbility: 0.0001
Next Token : zero, Posbility: 0.0001
Next Token : three, Posbility: 0.0003
Next Token : two, Posbility: 0.0025
Next Token : one, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  to, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0002
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : zero, Posbility: 0.0000
Next Token : two, Posbility: 0.0003
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  +=, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : zero, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0001
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : one, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0001
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  +=, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0001
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  +=, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0003
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token :  =, Posbility: 0.0229
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0001
Next Token : min, Posbility: 0.0002
Next Token : less, Posbility: 0.0003
Next Token : plus, Posbility: 0.0009
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : one, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : zero, Posbility: 0.0000
Next Token : four, Posbility: 0.0000
Next Token : three, Posbility: 0.0001
Next Token : two, Posbility: 0.0012
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  +, Posbility: 0.0005
Next Token :  , Posbility: 0.0020
Next Token :  =, Posbility: 0.1816
Next Token : _, Posbility: 0.8125
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : is, Posbility: 0.0004
Next Token : min, Posbility: 0.0004
Next Token : less, Posbility: 0.0009
Next Token : plus, Posbility: 0.0040
Next Token : minus, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0001
Next Token : zero, Posbility: 0.0001
Next Token : three, Posbility: 0.0002
Next Token : two, Posbility: 0.0015
Next Token : one, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 0.0420
Next Token :  =, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  String, Posbility: 0.0003
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = 
 score:False
Error type: noerr
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : alphabet, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : ical, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_
 score:False
Error type: noerr
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_char
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_
 score:False
Error type: noerr
---------------------------
Next Token : count, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : index, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_
 score:False
Error type: noerr
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_
 score:False
Error type: noerr
---------------------------
Next Token : subtract, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus
 score:False
Error type: noerr
---------------------------
Next Token : _1_1, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : subtract, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : subtract, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : ____, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : once, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_
 score:False
Error type: noerr
---------------------------
Next Token : ones, Posbility: 0.0000
Next Token : on, Posbility: 0.0000
Next Token : three, Posbility: 0.0000
Next Token : two, Posbility: 0.0000
Next Token : one, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : dash, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count the number of characters in a string that occur at the same position in the string as in the English alphabet (case insensitive). *)
let count_chars_in_alphabet s =
  let alphabet = "abcdefghijklmnopqrstuvwxyz" in
  let alphabet_length = String.length alphabet in
  let alphabet_chars = String.split alphabet in
  let alphabet_chars_length = Array.length alphabet_chars in
  let alphabet_chars_index = Array.map (fun c -> alphabet_chars.index c) s in
  let alphabet_chars_index_length = Array.length alphabet_chars_index in
  let alphabet_chars_index_length_minus_one = alphabet_chars_index_length - 1 in
  let alphabet_chars_index_length_minus_one_minus_one = alphabet_chars_index_length_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one - 1 in
  let alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one_minus_one = alphabet_chars_index_length_minus_one_minus_one_minus_one_minus_one_minus
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>