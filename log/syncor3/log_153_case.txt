code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.1001
Next Token :  check, Posbility: 0.1138
Next Token :  rec, Posbility: 0.1650
Next Token :  unique, Posbility: 0.2715
Next Token :  is, Posbility: 0.2715
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Uni, Posbility: 0.0013
Next Token : unique, Posbility: 0.0021
Next Token : List, Posbility: 0.0058
Next Token : Unique, Posbility: 0.1167
Next Token : _, Posbility: 0.8633
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0056
Next Token : distinct, Posbility: 0.0250
Next Token : list, Posbility: 0.0413
Next Token : uniq, Posbility: 0.0413
Next Token : unique, Posbility: 0.8281
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0315
Next Token :  l, Posbility: 0.0664
Next Token : _, Posbility: 0.1807
Next Token :  =, Posbility: 0.2314
Next Token :  , Posbility: 0.3828
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : L, Posbility: 0.0322
Next Token : (, Posbility: 0.0415
Next Token : ls, Posbility: 0.0684
Next Token : lst, Posbility: 0.1855
Next Token : x, Posbility: 0.5039
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0009
Next Token :   , Posbility: 0.0015
Next Token :  , Posbility: 0.0161
Next Token : s, Posbility: 0.3652
Next Token :  =, Posbility: 0.6055
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0052
Next Token :  !, Posbility: 0.0076
Next Token :  match, Posbility: 0.0160
Next Token :  , Posbility: 0.1719
Next Token : 
, Posbility: 0.7695
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0089
Next Token : 	, Posbility: 0.0114
Next Token :    , Posbility: 0.0214
Next Token :     , Posbility: 0.1396
Next Token :   , Posbility: 0.8008
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0239
Next Token : if, Posbility: 0.0447
Next Token : match, Posbility: 0.0835
Next Token : List, Posbility: 0.0947
Next Token : let, Posbility: 0.6172
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0193
Next Token :  acc, Posbility: 0.0281
Next Token :  open, Posbility: 0.0410
Next Token :  , Posbility: 0.2354
Next Token :  rec, Posbility: 0.4395
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0454
Next Token :  check, Posbility: 0.0845
Next Token :  is, Posbility: 0.1582
Next Token :  loop, Posbility: 0.1797
Next Token :  , Posbility: 0.2949
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0317
Next Token : uniq, Posbility: 0.0593
Next Token : f, Posbility: 0.1108
Next Token : aux, Posbility: 0.1108
Next Token : helper, Posbility: 0.1611
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0206
Next Token :  acc, Posbility: 0.0928
Next Token :  i, Posbility: 0.1523
Next Token :  =, Posbility: 0.1963
Next Token :  , Posbility: 0.4141
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0219
Next Token : y, Posbility: 0.0281
Next Token : (), Posbility: 0.0410
Next Token : (, Posbility: 0.0674
Next Token : x, Posbility: 0.6406
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0175
Next Token :  acc, Posbility: 0.1289
Next Token :  i, Posbility: 0.1455
Next Token :  , Posbility: 0.1875
Next Token :  =, Posbility: 0.3965
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token :  function, Posbility: 0.0034
Next Token :  match, Posbility: 0.0064
Next Token :  , Posbility: 0.0325
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0027
Next Token :    , Posbility: 0.0050
Next Token :       , Posbility: 0.0107
Next Token :   , Posbility: 0.0199
Next Token :     , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0058
Next Token : List, Posbility: 0.0085
Next Token : let, Posbility: 0.0913
Next Token : if, Posbility: 0.4082
Next Token : match, Posbility: 0.4629
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token :  Hash, Posbility: 0.0008
Next Token :  !, Posbility: 0.0066
Next Token :  String, Posbility: 0.0096
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Set, Posbility: 0.0018
Next Token : Seq, Posbility: 0.0038
Next Token : (, Posbility: 0.0081
Next Token : List, Posbility: 0.1436
Next Token : x, Posbility: 0.8281
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  =, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token :  @, Posbility: 0.0015
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0010
Next Token :  , Posbility: 0.0045
Next Token :  [, Posbility: 0.0045
Next Token :  [], Posbility: 0.0123
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0008
Next Token :   , Posbility: 0.0010
Next Token :    , Posbility: 0.0011
Next Token :       , Posbility: 0.0598
Next Token :     , Posbility: 0.9375
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Nil, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : [, Posbility: 0.0084
Next Token : [], Posbility: 0.0258
Next Token : |, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0022
Next Token :  nil, Posbility: 0.0164
Next Token :  [, Posbility: 0.0270
Next Token :  , Posbility: 0.0569
Next Token :  [], Posbility: 0.8906
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0048
Next Token :    , Posbility: 0.0062
Next Token :  =>, Posbility: 0.0103
Next Token :  |, Posbility: 0.0356
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0004
Next Token : -, Posbility: 0.0007
Next Token : →, Posbility: 0.0009
Next Token : ::, Posbility: 0.0028
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0143
Next Token :  , Posbility: 0.0388
Next Token :  True, Posbility: 0.0388
Next Token :  false, Posbility: 0.1055
Next Token :  true, Posbility: 0.7812
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token : ;, Posbility: 0.0051
Next Token :  , Posbility: 0.0074
Next Token :  |, Posbility: 0.0095
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0077
Next Token :  a, Posbility: 0.0128
Next Token :  [], Posbility: 0.0144
Next Token :  [, Posbility: 0.1367
Next Token :  , Posbility: 0.7891
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0398
Next Token : head, Posbility: 0.0449
Next Token : hd, Posbility: 0.0742
Next Token : _, Posbility: 0.2598
Next Token : x, Posbility: 0.4844
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0193
Next Token : 1, Posbility: 0.0193
Next Token : :, Posbility: 0.0317
Next Token : ::, Posbility: 0.3867
Next Token :  , Posbility: 0.4961
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : if, Posbility: 0.0004
Next Token : ->, Posbility: 0.0036
Next Token : :, Posbility: 0.0059
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0045
Next Token :  acc, Posbility: 0.0051
Next Token :  [], Posbility: 0.0201
Next Token :  rest, Posbility: 0.0903
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0459
Next Token : _, Posbility: 0.0669
Next Token : t, Posbility: 0.0757
Next Token : y, Posbility: 0.2061
Next Token : x, Posbility: 0.5586
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0057
Next Token : _, Posbility: 0.0057
Next Token : 1, Posbility: 0.0073
Next Token : ', Posbility: 0.1147
Next Token : s, Posbility: 0.8477
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0017
Next Token :  =>, Posbility: 0.0022
Next Token :   , Posbility: 0.0028
Next Token :  when, Posbility: 0.0938
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0002
Next Token :  when, Posbility: 0.0002
Next Token : if, Posbility: 0.0044
Next Token : ::, Posbility: 0.0417
Next Token : ->, Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0251
Next Token :  !, Posbility: 0.0684
Next Token :  not, Posbility: 0.0684
Next Token :  , Posbility: 0.3066
Next Token : 
, Posbility: 0.5039
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0059
Next Token :      , Posbility: 0.0234
Next Token :        , Posbility: 0.0496
Next Token :       , Posbility: 0.2227
Next Token :         , Posbility: 0.6836
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0422
Next Token : x, Posbility: 0.0422
Next Token : match, Posbility: 0.0894
Next Token : if, Posbility: 0.3535
Next Token : let, Posbility: 0.3535
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0305
Next Token :  first, Posbility: 0.0305
Next Token :  is, Posbility: 0.0391
Next Token :  rec, Posbility: 0.1543
Next Token :  , Posbility: 0.4199
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0271
Next Token : f, Posbility: 0.0396
Next Token : h, Posbility: 0.0447
Next Token : y, Posbility: 0.1562
Next Token : x, Posbility: 0.2910
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0742
Next Token : 0, Posbility: 0.0845
Next Token : s, Posbility: 0.1572
Next Token : _, Posbility: 0.1787
Next Token :  =, Posbility: 0.2598
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0018
Next Token :  Car, Posbility: 0.0050
Next Token :  First, Posbility: 0.0064
Next Token :  first, Posbility: 0.0222
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0085
Next Token : hd, Posbility: 0.0262
Next Token : head, Posbility: 0.1177
Next Token : List, Posbility: 0.1709
Next Token : x, Posbility: 0.5977
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0332
Next Token : s, Posbility: 0.0623
Next Token : ::, Posbility: 0.1494
Next Token :  , Posbility: 0.1689
Next Token :  in, Posbility: 0.4590
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :   , Posbility: 0.0019
Next Token : 

, Posbility: 0.0019
Next Token :  , Posbility: 0.0159
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0010
Next Token :           , Posbility: 0.0045
Next Token :       , Posbility: 0.0051
Next Token :        , Posbility: 0.0177
Next Token :         , Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0688
Next Token : match, Posbility: 0.0884
Next Token : helper, Posbility: 0.1133
Next Token : if, Posbility: 0.3086
Next Token : let, Posbility: 0.3086
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  found, Posbility: 0.0090
Next Token :  acc, Posbility: 0.0102
Next Token :  is, Posbility: 0.0277
Next Token :  rec, Posbility: 0.1099
Next Token :  , Posbility: 0.7148
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0090
Next Token : f, Posbility: 0.0117
Next Token : helper, Posbility: 0.0459
Next Token : y, Posbility: 0.1104
Next Token : x, Posbility: 0.7188
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0011
Next Token : _, Posbility: 0.0081
Next Token : ', Posbility: 0.0104
Next Token :  =, Posbility: 0.0284
Next Token : s, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0016
Next Token : 2, Posbility: 0.0021
Next Token : _, Posbility: 0.0084
Next Token : ', Posbility: 0.0139
Next Token :  =, Posbility: 0.9688
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  remove, Posbility: 0.0002
Next Token :  list, Posbility: 0.0004
Next Token : 
, Posbility: 0.0010
Next Token :  [, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : helper, Posbility: 0.0013
Next Token : List, Posbility: 0.0032
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 0.0007
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0025
Next Token : 

, Posbility: 0.0041
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0010
Next Token :           , Posbility: 0.0018
Next Token :       , Posbility: 0.0030
Next Token :        , Posbility: 0.0369
Next Token :         , Posbility: 0.9531
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0728
Next Token : match, Posbility: 0.0825
Next Token : helper, Posbility: 0.1748
Next Token : let, Posbility: 0.2539
Next Token : if, Posbility: 0.2871
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0101
Next Token : 
, Posbility: 0.0129
Next Token :  !, Posbility: 0.0654
Next Token :  not, Posbility: 0.0742
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0067
Next Token : helper, Posbility: 0.0383
Next Token : (, Posbility: 0.0635
Next Token : List, Posbility: 0.1514
Next Token : x, Posbility: 0.6797
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0085
Next Token :  ==, Posbility: 0.0297
Next Token : s, Posbility: 0.1035
Next Token :  =, Posbility: 0.4102
Next Token :  , Posbility: 0.4102
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0309
Next Token : ∈, Posbility: 0.0309
Next Token : ::, Posbility: 0.0576
Next Token : >, Posbility: 0.1079
Next Token : <, Posbility: 0.7031
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =>, Posbility: 0.0043
Next Token : ->, Posbility: 0.0063
Next Token : -, Posbility: 0.0134
Next Token :  , Posbility: 0.0283
Next Token : >, Posbility: 0.9375
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0030
Next Token :  car, Posbility: 0.0063
Next Token :  last, Posbility: 0.0092
Next Token :  first, Posbility: 0.0172
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : helper, Posbility: 0.0186
Next Token : List, Posbility: 0.0211
Next Token : (, Posbility: 0.0306
Next Token : head, Posbility: 0.0942
Next Token : x, Posbility: 0.7891
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0008
Next Token : ',, Posbility: 0.0009
Next Token :  , Posbility: 0.0013
Next Token : ', Posbility: 0.0059
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0618
Next Token :  , Posbility: 0.0898
Next Token :  &&, Posbility: 0.1484
Next Token : [0], Posbility: 0.1484
Next Token :  then, Posbility: 0.4023
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0071
Next Token :  true, Posbility: 0.0281
Next Token : 
, Posbility: 0.2676
Next Token :  false, Posbility: 0.3418
Next Token :  , Posbility: 0.3418
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0271
Next Token : return, Posbility: 0.0308
Next Token : x, Posbility: 0.0508
Next Token : (, Posbility: 0.0574
Next Token : helper, Posbility: 0.7930
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0019
Next Token :  [], Posbility: 0.0021
Next Token : (, Posbility: 0.0051
Next Token :  [, Posbility: 0.0177
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0001
Next Token : ([], Posbility: 0.0001
Next Token : y, Posbility: 0.0003
Next Token : (, Posbility: 0.0474
Next Token : x, Posbility: 0.9492
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0007
Next Token : ;, Posbility: 0.0010
Next Token : 
, Posbility: 0.0014
Next Token :  , Posbility: 0.0292
Next Token : s, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0106
Next Token :  in, Posbility: 0.0225
Next Token : ;, Posbility: 0.0255
Next Token : 
, Posbility: 0.1660
Next Token :  else, Posbility: 0.7461
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0068
Next Token : 
, Posbility: 0.0144
Next Token :  true, Posbility: 0.0144
Next Token :  false, Posbility: 0.4766
Next Token :  , Posbility: 0.4766
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0021
Next Token : if, Posbility: 0.0056
Next Token : (, Posbility: 0.0118
Next Token : x, Posbility: 0.0221
Next Token : helper, Posbility: 0.9414
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0010
Next Token : (, Posbility: 0.0019
Next Token :  [], Posbility: 0.0137
Next Token :  [, Posbility: 0.0176
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (), Posbility: 0.0008
Next Token : y, Posbility: 0.0008
Next Token : ([], Posbility: 0.0022
Next Token : (, Posbility: 0.1182
Next Token : x, Posbility: 0.8750
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0183
Next Token :  |, Posbility: 0.0208
Next Token :  , Posbility: 0.1738
Next Token : s, Posbility: 0.3672
Next Token : 
, Posbility: 0.3672
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0312
Next Token :   , Posbility: 0.0850
Next Token :         , Posbility: 0.1592
Next Token :    , Posbility: 0.2314
Next Token :     , Posbility: 0.4336
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : es, Posbility: 0.0051
Next Token :  in, Posbility: 0.0062
Next Token : ;, Posbility: 0.1240
Next Token : end, Posbility: 0.2051
Next Token : |, Posbility: 0.6328
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0015
Next Token :  acc, Posbility: 0.0041
Next Token :  [, Posbility: 0.0128
Next Token :  [], Posbility: 0.1758
Next Token :  , Posbility: 0.7891
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0016
Next Token : head, Posbility: 0.0024
Next Token : y, Posbility: 0.0093
Next Token : x, Posbility: 0.3105
Next Token : _, Posbility: 0.6562
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token : x, Posbility: 0.0011
Next Token :  =>, Posbility: 0.0035
Next Token : ::, Posbility: 0.0045
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0004
Next Token :  =>, Posbility: 0.0006
Next Token : if, Posbility: 0.0011
Next Token : ::, Posbility: 0.0757
Next Token : ->, Posbility: 0.9219
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0024
Next Token :  error, Posbility: 0.0024
Next Token : 
, Posbility: 0.0175
Next Token :  , Posbility: 0.0175
Next Token :  false, Posbility: 0.9570
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0024
Next Token :  with, Posbility: 0.0057
Next Token : 

, Posbility: 0.0121
Next Token :  in, Posbility: 0.1152
Next Token : 
, Posbility: 0.8516
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0014
Next Token :     , Posbility: 0.0057
Next Token :    , Posbility: 0.0107
Next Token :  , Posbility: 0.0121
Next Token :   , Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : then, Posbility: 0.0000
Next Token : helper, Posbility: 0.0002
Next Token : end, Posbility: 0.0012
Next Token :  in, Posbility: 0.0041
Next Token : in, Posbility: 0.9922
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :   , Posbility: 0.0016
Next Token : 

, Posbility: 0.0074
Next Token :  , Posbility: 0.0258
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :       , Posbility: 0.0006
Next Token :    , Posbility: 0.0015
Next Token :     , Posbility: 0.0097
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : not, Posbility: 0.0124
Next Token : match, Posbility: 0.0159
Next Token : if, Posbility: 0.0262
Next Token : let, Posbility: 0.0432
Next Token : helper, Posbility: 0.8672
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  in
  helper
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  ~, Posbility: 0.0013
Next Token :  [, Posbility: 0.0035
Next Token :  [], Posbility: 0.0140
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  in
  helper 
 score:False
Error type: noerr
---------------------------
Next Token : Seq, Posbility: 0.0000
Next Token : [0, Posbility: 0.0000
Next Token : List, Posbility: 0.0004
Next Token : (, Posbility: 0.0028
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  in
  helper x
 score:False
Error type: noerr
---------------------------
Next Token : , Posbility: 0.0040
Next Token :  =, Posbility: 0.0108
Next Token : ;, Posbility: 0.0178
Next Token : 
, Posbility: 0.3594
Next Token : 

, Posbility: 0.5898
---------------------------
code:
 (* Write a  function to check if the elements of a given list are unique or not. *)
let is_unique x =
  let rec helper x =
    match x with
    | [] -> true
    | x :: xs ->
        let x = x in
        let xs = xs in
        if x <> xs then helper xs else helper x
    | _ -> false
  in
  helper x


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :43.224777936935425

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>