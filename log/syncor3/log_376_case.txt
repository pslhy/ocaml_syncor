code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0115
Next Token :  is, Posbility: 0.0189
Next Token :  find, Posbility: 0.0664
Next Token :  rec, Posbility: 0.2617
Next Token :  , Posbility: 0.5547
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : comm, Posbility: 0.0037
Next Token : lists, Posbility: 0.0037
Next Token : intersect, Posbility: 0.0047
Next Token : f, Posbility: 0.0088
Next Token : common, Posbility: 0.8945
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0084
Next Token : (, Posbility: 0.0121
Next Token :  , Posbility: 0.1021
Next Token :  =, Posbility: 0.2441
Next Token : _, Posbility: 0.5859
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elt, Posbility: 0.0275
Next Token : list, Posbility: 0.0400
Next Token : elem, Posbility: 0.0454
Next Token : element, Posbility: 0.0747
Next Token : elements, Posbility: 0.7109
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0347
Next Token : _, Posbility: 0.0830
Next Token :  =, Posbility: 0.1758
Next Token :  , Posbility: 0.2256
Next Token :  l, Posbility: 0.3711
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 0.0008
Next Token : 0, Posbility: 0.0013
Next Token : 1,, Posbility: 0.0085
Next Token : 1, Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0005
Next Token :  , Posbility: 0.0021
Next Token : _, Posbility: 0.0021
Next Token :  =, Posbility: 0.0292
Next Token :  l, Posbility: 0.9648
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0001
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0028
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token : 3\, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3,, Posbility: 0.0003
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0020
Next Token :  index, Posbility: 0.0049
Next Token :  , Posbility: 0.0247
Next Token :  i, Posbility: 0.0280
Next Token :  =, Posbility: 0.9258
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0053
Next Token :  match, Posbility: 0.0068
Next Token : 

, Posbility: 0.0087
Next Token :  , Posbility: 0.1553
Next Token : 
, Posbility: 0.7852
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0088
Next Token :    , Posbility: 0.0145
Next Token : 	, Posbility: 0.0186
Next Token :     , Posbility: 0.1553
Next Token :   , Posbility: 0.7891
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0107
Next Token : (, Posbility: 0.0374
Next Token : match, Posbility: 0.0374
Next Token : List, Posbility: 0.0894
Next Token : let, Posbility: 0.7500
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0099
Next Token :  open, Posbility: 0.0237
Next Token :  l, Posbility: 0.0825
Next Token :  , Posbility: 0.2246
Next Token :  rec, Posbility: 0.4766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0413
Next Token :  go, Posbility: 0.0601
Next Token :  loop, Posbility: 0.0874
Next Token :  find, Posbility: 0.1445
Next Token :  , Posbility: 0.4434
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : core, Posbility: 0.0530
Next Token : f, Posbility: 0.0684
Next Token : helper, Posbility: 0.1445
Next Token : aux, Posbility: 0.1445
Next Token : common, Posbility: 0.2383
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0156
Next Token :  l, Posbility: 0.0330
Next Token :  =, Posbility: 0.0425
Next Token :  , Posbility: 0.0898
Next Token : _, Posbility: 0.7539
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0205
Next Token : rec, Posbility: 0.0337
Next Token : helper, Posbility: 0.0811
Next Token : element, Posbility: 0.1040
Next Token : elements, Posbility: 0.5977
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0304
Next Token :  i, Posbility: 0.0391
Next Token :  l, Posbility: 0.0938
Next Token :  , Posbility: 0.1543
Next Token : _, Posbility: 0.5391
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0236
Next Token : iter, Posbility: 0.0723
Next Token : rec, Posbility: 0.1357
Next Token : helper, Posbility: 0.1533
Next Token : aux, Posbility: 0.3242
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0222
Next Token :  =, Posbility: 0.0532
Next Token :  i, Posbility: 0.1128
Next Token :  , Posbility: 0.3066
Next Token :  l, Posbility: 0.3926
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0050
Next Token :  =, Posbility: 0.0064
Next Token : 2, Posbility: 0.0073
Next Token :  , Posbility: 0.0082
Next Token : 1, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0026
Next Token :  , Posbility: 0.0115
Next Token : _, Posbility: 0.0215
Next Token :  =, Posbility: 0.0354
Next Token :  l, Posbility: 0.9180
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token : 2,, Posbility: 0.0004
Next Token : 3, Posbility: 0.0022
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0014
Next Token :  i, Posbility: 0.0047
Next Token :  , Posbility: 0.0212
Next Token :  =, Posbility: 0.0576
Next Token :  l, Posbility: 0.9023
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3\, Posbility: 0.0001
Next Token : 4, Posbility: 0.0001
Next Token : 3,, Posbility: 0.0006
Next Token : 2, Posbility: 0.0007
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0288
Next Token :  acc, Posbility: 0.1289
Next Token :  i, Posbility: 0.1289
Next Token :  , Posbility: 0.2129
Next Token :  =, Posbility: 0.3516
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0059
Next Token :  fun, Posbility: 0.0075
Next Token :  , Posbility: 0.0264
Next Token :  function, Posbility: 0.0811
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0034
Next Token :    , Posbility: 0.0064
Next Token :       , Posbility: 0.0173
Next Token :   , Posbility: 0.0253
Next Token :     , Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0154
Next Token : List, Posbility: 0.0175
Next Token : let, Posbility: 0.1289
Next Token : if, Posbility: 0.2412
Next Token : match, Posbility: 0.5781
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0101
Next Token : 
, Posbility: 0.0147
Next Token :  [, Posbility: 0.0214
Next Token :  l, Posbility: 0.3789
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0031
Next Token : Compare, Posbility: 0.0058
Next Token : Seq, Posbility: 0.0109
Next Token : List, Posbility: 0.1504
Next Token : (, Posbility: 0.7656
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Set, Posbility: 0.0039
Next Token : Seq, Posbility: 0.0074
Next Token :  l, Posbility: 0.0227
Next Token : List, Posbility: 0.2148
Next Token : l, Posbility: 0.6602
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 3,, Posbility: 0.0051
Next Token : 2,, Posbility: 0.0139
Next Token : 1., Posbility: 0.0203
Next Token : 1, Posbility: 0.0908
Next Token : 1,, Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token :  None, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : l, Posbility: 0.0474
Next Token :  l, Posbility: 0.9492
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2),, Posbility: 0.0034
Next Token : 3, Posbility: 0.0092
Next Token : 3,, Posbility: 0.0092
Next Token : 2), Posbility: 0.1445
Next Token : 2,, Posbility: 0.8320
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : l, Posbility: 0.0001
Next Token :  0), Posbility: 0.0001
Next Token :  None, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1), Posbility: 0.0000
Next Token : 3], Posbility: 0.0000
Next Token : 2), Posbility: 0.0002
Next Token : 3,, Posbility: 0.0067
Next Token : 3, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : ),, Posbility: 0.0025
Next Token :  with, Posbility: 0.0067
Next Token : ), Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token : with, Posbility: 0.0002
Next Token : 
, Posbility: 0.0067
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  [, Posbility: 0.0008
Next Token : 

, Posbility: 0.0032
Next Token :  , Posbility: 0.0041
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0004
Next Token :    , Posbility: 0.0008
Next Token :   , Posbility: 0.0009
Next Token :       , Posbility: 0.0179
Next Token :     , Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (0,, Posbility: 0.0016
Next Token : [, Posbility: 0.0064
Next Token : ([], Posbility: 0.0082
Next Token : (, Posbility: 0.0254
Next Token : |, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  nil, Posbility: 0.0048
Next Token :  [, Posbility: 0.0356
Next Token :  [], Posbility: 0.0586
Next Token :  [],, Posbility: 0.1592
Next Token :  , Posbility: 0.7148
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Nil, Posbility: 0.0093
Next Token : (),, Posbility: 0.0106
Next Token : _, Posbility: 0.0120
Next Token : (, Posbility: 0.2734
Next Token : ([], Posbility: 0.6562
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([]
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  |, Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :  as, Posbility: 0.0011
Next Token :  , Posbility: 0.0140
Next Token : ,, Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([],
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : _, Posbility: 0.0084
Next Token :  [], Posbility: 0.0108
Next Token : [],, Posbility: 0.0139
Next Token :  , Posbility: 0.3594
Next Token :  [],, Posbility: 0.5898
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [],
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0014
Next Token :  l, Posbility: 0.0014
Next Token :  [], Posbility: 0.0175
Next Token :  [],, Posbility: 0.0175
Next Token :  , Posbility: 0.9570
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ()), Posbility: 0.0005
Next Token : ([], Posbility: 0.0013
Next Token : x, Posbility: 0.0066
Next Token : _, Posbility: 0.1177
Next Token : []), Posbility: 0.8672
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], [])
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0047
Next Token :   , Posbility: 0.0047
Next Token :  |, Posbility: 0.0127
Next Token : ,, Posbility: 0.2559
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0005
Next Token : :, Posbility: 0.0005
Next Token : -, Posbility: 0.0015
Next Token : ::, Posbility: 0.0140
Next Token : ->, Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [];, Posbility: 0.0024
Next Token :  l, Posbility: 0.0039
Next Token : 
, Posbility: 0.0064
Next Token :  , Posbility: 0.0288
Next Token :  [], Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0027
Next Token :  |, Posbility: 0.0056
Next Token :   , Posbility: 0.0064
Next Token :  , Posbility: 0.0175
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : ,, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0021
Next Token :  l, Posbility: 0.0024
Next Token :  ((, Posbility: 0.0058
Next Token :  [, Posbility: 0.0177
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0049
Next Token : _, Posbility: 0.0359
Next Token : ([, Posbility: 0.2656
Next Token : ([], Posbility: 0.3418
Next Token : (, Posbility: 0.3418
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : h, Posbility: 0.1094
Next Token : _, Posbility: 0.1240
Next Token : hd, Posbility: 0.1406
Next Token : l, Posbility: 0.2041
Next Token : x, Posbility: 0.2314
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0820
Next Token : s, Posbility: 0.1050
Next Token :  , Posbility: 0.1348
Next Token : ::, Posbility: 0.1348
Next Token : ,, Posbility: 0.3672
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  rest, Posbility: 0.0125
Next Token :  [, Posbility: 0.0160
Next Token :  l, Posbility: 0.0923
Next Token :  , Posbility: 0.3223
Next Token :  [],, Posbility: 0.5312
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [],
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0117
Next Token :  [], Posbility: 0.0150
Next Token :  [, Posbility: 0.0247
Next Token :  l, Posbility: 0.1104
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0029
Next Token : x, Posbility: 0.0128
Next Token : y, Posbility: 0.0942
Next Token : _, Posbility: 0.3281
Next Token : []), Posbility: 0.5430
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], [])
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0035
Next Token :   , Posbility: 0.0058
Next Token :  |, Posbility: 0.0430
Next Token : ,, Posbility: 0.0708
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : →, Posbility: 0.0001
Next Token : if, Posbility: 0.0002
Next Token : ::, Posbility: 0.0006
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0019
Next Token :  [], Posbility: 0.0087
Next Token : 
, Posbility: 0.0237
Next Token :  , Posbility: 0.1748
Next Token :  [, Posbility: 0.7812
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Some, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : l, Posbility: 0.0006
Next Token :  , Posbility: 0.0532
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0012
Next Token : ];, Posbility: 0.0012
Next Token : ],, Posbility: 0.0019
Next Token : ;, Posbility: 0.0085
Next Token : ], Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0008
Next Token :  (*, Posbility: 0.0009
Next Token :   , Posbility: 0.0017
Next Token :  , Posbility: 0.0123
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :  [],, Posbility: 0.0002
Next Token :  [, Posbility: 0.0009
Next Token :  [], Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ({},, Posbility: 0.0010
Next Token : _, Posbility: 0.0013
Next Token : ([, Posbility: 0.0046
Next Token : (, Posbility: 0.1182
Next Token : ([], Posbility: 0.8750
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([]
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : [],, Posbility: 0.0000
Next Token :  as, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([],
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [], Posbility: 0.0010
Next Token :  l, Posbility: 0.0120
Next Token :  [, Posbility: 0.0889
Next Token :  [],, Posbility: 0.2412
Next Token :  , Posbility: 0.6562
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : ([], Posbility: 0.0038
Next Token : (, Posbility: 0.0103
Next Token : _, Posbility: 0.2070
Next Token : y, Posbility: 0.2070
Next Token : x, Posbility: 0.5625
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0008
Next Token : 1,, Posbility: 0.0008
Next Token : ',, Posbility: 0.0014
Next Token : s, Posbility: 0.0371
Next Token : ,, Posbility: 0.9570
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [],, Posbility: 0.0005
Next Token :  [, Posbility: 0.0015
Next Token :  l, Posbility: 0.0040
Next Token :  [], Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ()), Posbility: 0.0003
Next Token : x, Posbility: 0.0015
Next Token : y, Posbility: 0.0024
Next Token : _, Posbility: 0.0179
Next Token : []), Posbility: 0.9766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, [])
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token :  |, Posbility: 0.0003
Next Token : ,, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 0.0159
Next Token :  [], Posbility: 0.1172
Next Token :  [, Posbility: 0.8633
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : None, Posbility: 0.0001
Next Token : l, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1], Posbility: 0.0000
Next Token : ;, Posbility: 0.0001
Next Token : ];, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  ((, Posbility: 0.0004
Next Token :  [, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0007
Next Token : x, Posbility: 0.0032
Next Token : ([, Posbility: 0.0388
Next Token : (, Posbility: 0.1738
Next Token : ([], Posbility: 0.7812
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([]
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  as, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([],
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : [],, Posbility: 0.0005
Next Token :  [], Posbility: 0.0009
Next Token :  [, Posbility: 0.0014
Next Token :  , Posbility: 0.0474
Next Token :  [],, Posbility: 0.9492
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [],
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  l, Posbility: 0.0003
Next Token :  [, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0014
Next Token : []), Posbility: 0.0023
Next Token : _, Posbility: 0.0039
Next Token : y, Posbility: 0.0471
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : ),, Posbility: 0.0004
Next Token : s, Posbility: 0.0008
Next Token :  , Posbility: 0.0009
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :  |, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0066
Next Token :  [], Posbility: 0.0178
Next Token :  [, Posbility: 0.9766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : l, Posbility: 0.0000
Next Token : None, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ],, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ];, Posbility: 0.0001
Next Token : ], Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : else, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  [], Posbility: 0.0003
Next Token :  ((, Posbility: 0.0036
Next Token :  [, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0017
Next Token : x, Posbility: 0.0127
Next Token : ([], Posbility: 0.0344
Next Token : ([, Posbility: 0.2559
Next Token : (, Posbility: 0.6953
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : h, Posbility: 0.0078
Next Token : y, Posbility: 0.0100
Next Token : _, Posbility: 0.0240
Next Token : l, Posbility: 0.0272
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0,, Posbility: 0.0127
Next Token : s, Posbility: 0.0269
Next Token : ::, Posbility: 0.0344
Next Token : 1,, Posbility: 0.1982
Next Token : ,, Posbility: 0.6953
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [], Posbility: 0.0033
Next Token :  l, Posbility: 0.0187
Next Token :  [, Posbility: 0.0396
Next Token :  [],, Posbility: 0.1377
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (),, Posbility: 0.0018
Next Token : (, Posbility: 0.0049
Next Token : _, Posbility: 0.0981
Next Token : y, Posbility: 0.4395
Next Token : x, Posbility: 0.4395
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2,, Posbility: 0.0479
Next Token : 1,, Posbility: 0.0615
Next Token : ,, Posbility: 0.1299
Next Token : ',, Posbility: 0.3535
Next Token : s, Posbility: 0.3535
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ',, Posbility: 0.0023
Next Token :  @, Posbility: 0.0038
Next Token : _, Posbility: 0.0049
Next Token : 1,, Posbility: 0.2637
Next Token : ,, Posbility: 0.7188
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0005
Next Token :  rest, Posbility: 0.0015
Next Token :  [, Posbility: 0.0025
Next Token :  [], Posbility: 0.0041
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0035
Next Token : _, Posbility: 0.0427
Next Token : []), Posbility: 0.1157
Next Token : x, Posbility: 0.3145
Next Token : y, Posbility: 0.5195
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 0.0005
Next Token : ),, Posbility: 0.0020
Next Token : s, Posbility: 0.4980
Next Token : ), Posbility: 0.4980
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0029
Next Token :  with, Posbility: 0.0029
Next Token : 
, Posbility: 0.0131
Next Token :  when, Posbility: 0.2617
Next Token :  , Posbility: 0.7109
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0001
Next Token : ::, Posbility: 0.0005
Next Token : 
, Posbility: 0.0014
Next Token : if, Posbility: 0.2930
Next Token : ->, Posbility: 0.7031
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0010
Next Token :  [, Posbility: 0.0021
Next Token :  match, Posbility: 0.0201
Next Token :  , Posbility: 0.1157
Next Token : 
, Posbility: 0.8555
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0022
Next Token :        , Posbility: 0.0069
Next Token :     , Posbility: 0.0069
Next Token :         , Posbility: 0.4277
Next Token :       , Posbility: 0.5508
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0082
Next Token : List, Posbility: 0.0106
Next Token : match, Posbility: 0.1650
Next Token : let, Posbility: 0.2129
Next Token : if, Posbility: 0.5781
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0060
Next Token :  !, Posbility: 0.0077
Next Token :  String, Posbility: 0.0270
Next Token :  not, Posbility: 0.0347
Next Token :  , Posbility: 0.8906
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0024
Next Token : y, Posbility: 0.0058
Next Token : (, Posbility: 0.0430
Next Token : List, Posbility: 0.0549
Next Token : x, Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0332
Next Token : s, Posbility: 0.0425
Next Token :  ==, Posbility: 0.0425
Next Token :  , Posbility: 0.1904
Next Token :  =, Posbility: 0.6641
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ?, Posbility: 0.0001
Next Token :  first, Posbility: 0.0001
Next Token :  Some, Posbility: 0.0009
Next Token :  l, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0005
Next Token : (, Posbility: 0.0012
Next Token : head, Posbility: 0.0012
Next Token : y, Posbility: 0.4980
Next Token : x, Posbility: 0.4980
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0018
Next Token : 1, Posbility: 0.0030
Next Token :  &&, Posbility: 0.0072
Next Token : ', Posbility: 0.0325
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0576
Next Token :  ||, Posbility: 0.1387
Next Token :  &&, Posbility: 0.1777
Next Token :  then, Posbility: 0.2578
Next Token : [0], Posbility: 0.2578
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  or, Posbility: 0.0105
Next Token :  and, Posbility: 0.0366
Next Token :  ||, Posbility: 0.0771
Next Token :  &&, Posbility: 0.1279
Next Token :  then, Posbility: 0.7344
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0009
Next Token :  [], Posbility: 0.0019
Next Token :  [, Posbility: 0.0391
Next Token : 
, Posbility: 0.4766
Next Token :  , Posbility: 0.4766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0383
Next Token : (, Posbility: 0.0383
Next Token : y, Posbility: 0.0383
Next Token : x, Posbility: 0.1040
Next Token : common, Posbility: 0.7695
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : elem, Posbility: 0.0000
Next Token : element, Posbility: 0.0002
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0002
Next Token :  l, Posbility: 0.0003
Next Token : (, Posbility: 0.0006
Next Token :  , Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : extra, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0029
Next Token :  [, Posbility: 0.0037
Next Token : (, Posbility: 0.0215
Next Token :  l, Posbility: 0.0454
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0007
Next Token : ([], Posbility: 0.0018
Next Token : y, Posbility: 0.0132
Next Token : (, Posbility: 0.2637
Next Token : x, Posbility: 0.7188
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0014
Next Token :  [], Posbility: 0.0023
Next Token :  l, Posbility: 0.0062
Next Token :  , Posbility: 0.4316
Next Token : s, Posbility: 0.5547
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [1:], Posbility: 0.0095
Next Token :  [, Posbility: 0.0157
Next Token :  l, Posbility: 0.0201
Next Token :  1, Posbility: 0.0703
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [1], Posbility: 0.0002
Next Token : ([], Posbility: 0.0003
Next Token : x, Posbility: 0.1396
Next Token : (, Posbility: 0.2305
Next Token : y, Posbility: 0.6289
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0091
Next Token :  else, Posbility: 0.0859
Next Token : 
, Posbility: 0.1104
Next Token :  l, Posbility: 0.3848
Next Token :  , Posbility: 0.3848
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0068
Next Token : common, Posbility: 0.0184
Next Token : y, Posbility: 0.2246
Next Token : (, Posbility: 0.3711
Next Token : x, Posbility: 0.3711
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0019
Next Token :  , Posbility: 0.0096
Next Token :  else, Posbility: 0.0294
Next Token : 
, Posbility: 0.0908
Next Token : s, Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0386
Next Token : ., Posbility: 0.0437
Next Token : [1:], Posbility: 0.0635
Next Token :  else, Posbility: 0.1729
Next Token : 
, Posbility: 0.6055
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0004
Next Token :      , Posbility: 0.0019
Next Token :         , Posbility: 0.0052
Next Token :     , Posbility: 0.0052
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token : [, Posbility: 0.0002
Next Token : |, Posbility: 0.0003
Next Token : elif, Posbility: 0.0012
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0046
Next Token :  match, Posbility: 0.0059
Next Token :  [, Posbility: 0.0298
Next Token : 
, Posbility: 0.0811
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0071
Next Token : List, Posbility: 0.0117
Next Token : x, Posbility: 0.0864
Next Token : if, Posbility: 0.2344
Next Token : common, Posbility: 0.6367
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  elements, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elem, Posbility: 0.0000
Next Token : elt, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : element, Posbility: 0.0001
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token :  [, Posbility: 0.0011
Next Token :  l, Posbility: 0.0024
Next Token :  , Posbility: 0.0228
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ax, Posbility: 0.0000
Next Token : extra, Posbility: 0.0000
Next Token : tmp, Posbility: 0.0000
Next Token : helper, Posbility: 0.0001
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0036
Next Token : (, Posbility: 0.0036
Next Token :  [, Posbility: 0.0266
Next Token :  l, Posbility: 0.0723
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0008
Next Token : common, Posbility: 0.0056
Next Token : y, Posbility: 0.0415
Next Token : (, Posbility: 0.1133
Next Token : x, Posbility: 0.8359
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0006
Next Token :  [, Posbility: 0.0026
Next Token :  l, Posbility: 0.0038
Next Token :  , Posbility: 0.4336
Next Token : s, Posbility: 0.5547
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0016
Next Token :  [], Posbility: 0.0021
Next Token :  [, Posbility: 0.0093
Next Token :  l, Posbility: 0.1455
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0004
Next Token : common, Posbility: 0.0085
Next Token : (, Posbility: 0.0625
Next Token : y, Posbility: 0.4629
Next Token : x, Posbility: 0.4629
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token :  [, Posbility: 0.0027
Next Token :  l, Posbility: 0.0156
Next Token : s, Posbility: 0.3145
Next Token :  , Posbility: 0.6641
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : common, Posbility: 0.0058
Next Token : (, Posbility: 0.0157
Next Token : x, Posbility: 0.1167
Next Token : y, Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0082
Next Token : s, Posbility: 0.0371
Next Token :  , Posbility: 0.0420
Next Token : 

, Posbility: 0.0476
Next Token : 
, Posbility: 0.8438
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0011
Next Token :    , Posbility: 0.0479
Next Token :       , Posbility: 0.0894
Next Token :   , Posbility: 0.2754
Next Token :     , Posbility: 0.5820
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token : (, Posbility: 0.0027
Next Token : end, Posbility: 0.0095
Next Token : ;, Posbility: 0.0138
Next Token : |, Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0019
Next Token :  l, Posbility: 0.0024
Next Token :  [, Posbility: 0.0040
Next Token :  [], Posbility: 0.0084
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0305
Next Token : _, Posbility: 0.0391
Next Token : ([], Posbility: 0.0503
Next Token : x, Posbility: 0.0830
Next Token : (, Posbility: 0.7852
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : a, Posbility: 0.0090
Next Token : l, Posbility: 0.0115
Next Token : y, Posbility: 0.0148
Next Token : _, Posbility: 0.0312
Next Token : x, Posbility: 0.9141
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0014
Next Token : 0,, Posbility: 0.0037
Next Token : 1,, Posbility: 0.0273
Next Token : s, Posbility: 0.0579
Next Token : ,, Posbility: 0.9023
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [], Posbility: 0.0014
Next Token :  [, Posbility: 0.0039
Next Token :  [],, Posbility: 0.0107
Next Token :  l, Posbility: 0.0176
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (, Posbility: 0.0014
Next Token : s, Posbility: 0.0014
Next Token : y, Posbility: 0.0172
Next Token : _, Posbility: 0.0284
Next Token : x, Posbility: 0.9414
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token : ,, Posbility: 0.0007
Next Token : _, Posbility: 0.0012
Next Token : 1,, Posbility: 0.0025
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0011
Next Token : 0,, Posbility: 0.0011
Next Token : _, Posbility: 0.0018
Next Token : 1,, Posbility: 0.0471
Next Token : ,, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs,
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0002
Next Token :  l, Posbility: 0.0002
Next Token :  [], Posbility: 0.0025
Next Token :  [, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0043
Next Token : _, Posbility: 0.0315
Next Token : []), Posbility: 0.0859
Next Token : x, Posbility: 0.2334
Next Token : y, Posbility: 0.6367
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token : ,, Posbility: 0.0063
Next Token : ),, Posbility: 0.0063
Next Token : s, Posbility: 0.0466
Next Token : ), Posbility: 0.9375
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0015
Next Token :  |, Posbility: 0.0015
Next Token :  with, Posbility: 0.0024
Next Token :  when, Posbility: 0.1182
Next Token :  , Posbility: 0.8711
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0003
Next Token : →, Posbility: 0.0005
Next Token : if, Posbility: 0.0041
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  match, Posbility: 0.0044
Next Token :  [, Posbility: 0.0044
Next Token :  , Posbility: 0.1465
Next Token : 
, Posbility: 0.8398
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0004
Next Token :      , Posbility: 0.0007
Next Token :     , Posbility: 0.0013
Next Token :         , Posbility: 0.0075
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0031
Next Token : common, Posbility: 0.0228
Next Token : match, Posbility: 0.0376
Next Token : let, Posbility: 0.1689
Next Token : if, Posbility: 0.7539
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0005
Next Token :  [, Posbility: 0.0006
Next Token :  !, Posbility: 0.0010
Next Token :  not, Posbility: 0.0052
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0003
Next Token : common, Posbility: 0.0003
Next Token : (, Posbility: 0.0063
Next Token : y, Posbility: 0.0471
Next Token : x, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0030
Next Token : s, Posbility: 0.0082
Next Token :  !=, Posbility: 0.0106
Next Token :  , Posbility: 0.0225
Next Token :  =, Posbility: 0.9531
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  l, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.2695
Next Token : x, Posbility: 0.7305
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  then, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0, Posbility: 0.0035
Next Token : [-1], Posbility: 0.0095
Next Token : [1], Posbility: 0.0095
Next Token : [, Posbility: 0.1157
Next Token : [0], Posbility: 0.8555
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token :  ||, Posbility: 0.0062
Next Token :  and, Posbility: 0.0131
Next Token :  &&, Posbility: 0.0588
Next Token :  then, Posbility: 0.9180
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0004
Next Token :  [], Posbility: 0.0019
Next Token :  [, Posbility: 0.0437
Next Token : 
, Posbility: 0.0723
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0063
Next Token : let, Posbility: 0.0063
Next Token : (, Posbility: 0.0172
Next Token : x, Posbility: 0.0172
Next Token : common, Posbility: 0.9414
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  elements, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : elt, Posbility: 0.0000
Next Token : elem, Posbility: 0.0000
Next Token : element, Posbility: 0.0001
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  l, Posbility: 0.0009
Next Token :  , Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tmp, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : adj, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token :  [], Posbility: 0.0007
Next Token :  l, Posbility: 0.0024
Next Token :  [, Posbility: 0.0085
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0003
Next Token : ([], Posbility: 0.0003
Next Token : (, Posbility: 0.0159
Next Token : y, Posbility: 0.1172
Next Token : x, Posbility: 0.8672
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token :  [, Posbility: 0.0005
Next Token :  , Posbility: 0.1475
Next Token : s, Posbility: 0.8516
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0009
Next Token :  1, Posbility: 0.0012
Next Token :  [, Posbility: 0.0040
Next Token :  l, Posbility: 0.0040
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0001
Next Token : common, Posbility: 0.0001
Next Token : (, Posbility: 0.0132
Next Token : x, Posbility: 0.2656
Next Token : y, Posbility: 0.7188
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0031
Next Token :  [], Posbility: 0.0065
Next Token :  [, Posbility: 0.0083
Next Token :  l, Posbility: 0.0176
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0003
Next Token : common, Posbility: 0.0008
Next Token : (, Posbility: 0.0452
Next Token : y, Posbility: 0.0452
Next Token : x, Posbility: 0.9062
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :  , Posbility: 0.0173
Next Token : 
, Posbility: 0.0366
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0], Posbility: 0.0016
Next Token :  +, Posbility: 0.0030
Next Token :  , Posbility: 0.0118
Next Token :  else, Posbility: 0.0284
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :      , Posbility: 0.0003
Next Token :     , Posbility: 0.0012
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : els, Posbility: 0.0000
Next Token : [, Posbility: 0.0001
Next Token : elif, Posbility: 0.0004
Next Token : |, Posbility: 0.0007
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0046
Next Token :  [], Posbility: 0.0052
Next Token : 
, Posbility: 0.0342
Next Token :  [, Posbility: 0.0640
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0219
Next Token : let, Posbility: 0.0219
Next Token : x, Posbility: 0.0361
Next Token : if, Posbility: 0.1621
Next Token : common, Posbility: 0.7227
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  elements, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : elem, Posbility: 0.0000
Next Token : elt, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : element, Posbility: 0.0001
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0006
Next Token : (, Posbility: 0.0010
Next Token :  l, Posbility: 0.0012
Next Token :  , Posbility: 0.0109
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : extra, Posbility: 0.0000
Next Token : tmp, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  [], Posbility: 0.0019
Next Token :  l, Posbility: 0.0051
Next Token :  [, Posbility: 0.0227
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([, Posbility: 0.0003
Next Token : common, Posbility: 0.0009
Next Token : (, Posbility: 0.0171
Next Token : y, Posbility: 0.0464
Next Token : x, Posbility: 0.9336
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0002
Next Token :  l, Posbility: 0.0003
Next Token :  [, Posbility: 0.0010
Next Token :  , Posbility: 0.3203
Next Token : s, Posbility: 0.6758
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0015
Next Token :  [], Posbility: 0.0019
Next Token :  l, Posbility: 0.0031
Next Token :  [, Posbility: 0.0178
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : common, Posbility: 0.0003
Next Token : (, Posbility: 0.0059
Next Token : y, Posbility: 0.1182
Next Token : x, Posbility: 0.8750
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0009
Next Token :  l, Posbility: 0.0011
Next Token :  [, Posbility: 0.0031
Next Token : s, Posbility: 0.0140
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : common, Posbility: 0.0058
Next Token : (, Posbility: 0.0157
Next Token : x, Posbility: 0.1167
Next Token : y, Posbility: 0.8594
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0147
Next Token :  +, Posbility: 0.0167
Next Token : 

, Posbility: 0.0957
Next Token :  , Posbility: 0.1230
Next Token : 
, Posbility: 0.7070
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0042
Next Token :       , Posbility: 0.0139
Next Token :    , Posbility: 0.0156
Next Token :     , Posbility: 0.2773
Next Token :   , Posbility: 0.6680
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0004
Next Token : [, Posbility: 0.0010
Next Token :  in, Posbility: 0.0019
Next Token : end, Posbility: 0.0140
Next Token : in, Posbility: 0.9805
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0010
Next Token : 

, Posbility: 0.0010
Next Token :  , Posbility: 0.0292
Next Token : 
, Posbility: 0.9688
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :    , Posbility: 0.0009
Next Token :     , Posbility: 0.0059
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0038
Next Token : List, Posbility: 0.0049
Next Token : match, Posbility: 0.0080
Next Token : let, Posbility: 0.0461
Next Token : common, Posbility: 0.9258
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  elements, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_
 score:False
Error type: noerr
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : elt, Posbility: 0.0000
Next Token : elem, Posbility: 0.0000
Next Token : element, Posbility: 0.0000
Next Token : elements, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token :  l, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_
 score:False
Error type: noerr
---------------------------
Next Token : extra, Posbility: 0.0000
Next Token : dummy, Posbility: 0.0000
Next Token : ax, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : aux, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0015
Next Token :  [, Posbility: 0.0024
Next Token :  [], Posbility: 0.0040
Next Token :  , Posbility: 0.0109
Next Token :  l, Posbility: 0.9766
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l
 score:False
Error type: noerr
---------------------------
Next Token : 1., Posbility: 0.0001
Next Token : 1,, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0017
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l1
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  [], Posbility: 0.0004
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l1 l
 score:False
Error type: noerr
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l1 l2
 score:False
Error type: noerr
---------------------------
Next Token : l, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l1 l2 l
 score:False
Error type: noerr
---------------------------
Next Token : 3>, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 3,, Posbility: 0.0000
Next Token : 3], Posbility: 0.0000
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l1 l2 l3
 score:False
Error type: noerr
---------------------------
Next Token : , Posbility: 0.0040
Next Token :  =, Posbility: 0.0067
Next Token : ;, Posbility: 0.0067
Next Token : 

, Posbility: 0.3633
Next Token : 
, Posbility: 0.5977
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l1 l2 l3

 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0131
Next Token :   , Posbility: 0.0184
Next Token : let, Posbility: 0.0276
Next Token : [, Posbility: 0.0344
Next Token : 

, Posbility: 0.0391
---------------------------
code:
 (* We say that an element is common for lists l1, l2, l3 if it appears in all three lists under the same index. Write a function to find common elements from three lists. The function should return a list. *)
let common_elements l1 l2 l3 =
  let rec common_elements_aux l1 l2 l3 =
    match (l1, l2, l3) with
    | ([], [], []) -> []
    | (x, [], []) -> [x]
    | ([], x, []) -> [x]
    | ([], [], x) -> [x]
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
    | (x, xs, y) ->
      if x = xs[0] then common_elements_aux xs y xs
      else common_elements_aux xs x y
  in
  common_elements_aux l1 l2 l3



 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :97.54302763938904

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>