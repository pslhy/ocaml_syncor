code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0159
Next Token :  find, Posbility: 0.0491
Next Token :  minimum, Posbility: 0.0918
Next Token :  , Posbility: 0.2812
Next Token :  rec, Posbility: 0.4648
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0153
Next Token :  loop, Posbility: 0.0366
Next Token :  minimum, Posbility: 0.0605
Next Token :  find, Posbility: 0.2109
Next Token :  , Posbility: 0.5078
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0159
Next Token : f, Posbility: 0.0181
Next Token : prod, Posbility: 0.0297
Next Token : product, Posbility: 0.0713
Next Token : min, Posbility: 0.6758
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0118
Next Token : p, Posbility: 0.0118
Next Token : product, Posbility: 0.0172
Next Token : prod, Posbility: 0.0679
Next Token : _, Posbility: 0.8281
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : products, Posbility: 0.0061
Next Token : of, Posbility: 0.0242
Next Token : pair, Posbility: 0.0242
Next Token : prod, Posbility: 0.1787
Next Token : product, Posbility: 0.7070
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0250
Next Token :  l, Posbility: 0.0322
Next Token :  =, Posbility: 0.0991
Next Token : _, Posbility: 0.2695
Next Token :  , Posbility: 0.4434
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : prod, Posbility: 0.0359
Next Token : lst, Posbility: 0.1250
Next Token : pairs, Posbility: 0.1250
Next Token : x, Posbility: 0.1416
Next Token : (, Posbility: 0.1816
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : a, Posbility: 0.0476
Next Token : tuple, Posbility: 0.0476
Next Token : list, Posbility: 0.0693
Next Token : l, Posbility: 0.0786
Next Token : x, Posbility: 0.1006
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0094
Next Token : :, Posbility: 0.0693
Next Token :  , Posbility: 0.1895
Next Token : ,, Posbility: 0.1895
Next Token : s, Posbility: 0.5156
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0065
Next Token : 1,, Posbility: 0.0065
Next Token : :, Posbility: 0.0293
Next Token : ,, Posbility: 0.3574
Next Token :  , Posbility: 0.5898
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0004
Next Token : y, Posbility: 0.0007
Next Token : ,, Posbility: 0.0012
Next Token : ::, Posbility: 0.0140
Next Token : :, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs :
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [, Posbility: 0.0659
Next Token :  int, Posbility: 0.0659
Next Token :  list, Posbility: 0.0957
Next Token :  ', Posbility: 0.1230
Next Token :  , Posbility: 0.4863
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : (', Posbility: 0.0625
Next Token : x, Posbility: 0.1030
Next Token : List, Posbility: 0.1167
Next Token : t, Posbility: 0.1318
Next Token : (, Posbility: 0.2471
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0094
Next Token : a, Posbility: 0.0226
Next Token : float, Posbility: 0.0476
Next Token : string, Posbility: 0.0693
Next Token : int, Posbility: 0.7461
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *), Posbility: 0.0070
Next Token : *, Posbility: 0.0115
Next Token : ,, Posbility: 0.0515
Next Token :  , Posbility: 0.1094
Next Token :  *, Posbility: 0.8086
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0005
Next Token :  , Posbility: 0.0051
Next Token :  string, Posbility: 0.0084
Next Token :  float, Posbility: 0.0138
Next Token :  int, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0097
Next Token :  *, Posbility: 0.0233
Next Token : )), Posbility: 0.0339
Next Token :  list, Posbility: 0.0437
Next Token : ), Posbility: 0.8750
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int)
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  l, Posbility: 0.0007
Next Token :  tuple, Posbility: 0.0007
Next Token :  array, Posbility: 0.0037
Next Token :  , Posbility: 0.0947
Next Token :  list, Posbility: 0.8984
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0003
Next Token : ):, Posbility: 0.0008
Next Token :  =, Posbility: 0.0013
Next Token :  , Posbility: 0.0046
Next Token : ), Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0032
Next Token :  result, Posbility: 0.0060
Next Token : 
, Posbility: 0.0161
Next Token :  , Posbility: 0.1738
Next Token :  =, Posbility: 0.7773
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0042
Next Token :  function, Posbility: 0.0061
Next Token :  match, Posbility: 0.0309
Next Token :  , Posbility: 0.0508
Next Token : 
, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0032
Next Token :    , Posbility: 0.0047
Next Token : 	, Posbility: 0.0053
Next Token :     , Posbility: 0.0835
Next Token :   , Posbility: 0.8984
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0051
Next Token : List, Posbility: 0.0074
Next Token : if, Posbility: 0.1494
Next Token : let, Posbility: 0.1494
Next Token : match, Posbility: 0.6680
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token : 
, Posbility: 0.0006
Next Token :  !, Posbility: 0.0010
Next Token :  String, Posbility: 0.0059
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0019
Next Token : Seq, Posbility: 0.0057
Next Token : (, Posbility: 0.0107
Next Token : List, Posbility: 0.1152
Next Token : x, Posbility: 0.8516
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  with, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token :  @, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0019
Next Token : 

, Posbility: 0.0021
Next Token :  , Posbility: 0.0024
Next Token :  [], Posbility: 0.0258
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0004
Next Token :       , Posbility: 0.0018
Next Token :    , Posbility: 0.0023
Next Token :     , Posbility: 0.0845
Next Token :   , Posbility: 0.9102
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : [, Posbility: 0.0095
Next Token : [], Posbility: 0.0157
Next Token : |, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [],, Posbility: 0.0004
Next Token :  nil, Posbility: 0.0040
Next Token :  [, Posbility: 0.0084
Next Token :  , Posbility: 0.0123
Next Token :  [], Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token :    , Posbility: 0.0035
Next Token :  |, Posbility: 0.0065
Next Token :  =>, Posbility: 0.0084
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : →, Posbility: 0.0002
Next Token : ::, Posbility: 0.0006
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0386
Next Token : 
, Posbility: 0.1050
Next Token :  None, Posbility: 0.1050
Next Token :  0, Posbility: 0.2852
Next Token :  , Posbility: 0.2852
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : assert, Posbility: 0.0688
Next Token : return, Posbility: 0.0884
Next Token : (, Posbility: 0.1001
Next Token : (0,, Posbility: 0.1455
Next Token : raise, Posbility: 0.1875
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0079
Next Token : _, Posbility: 0.0243
Next Token :  ", Posbility: 0.0400
Next Token :  , Posbility: 0.2617
Next Token :  Not, Posbility: 0.6250
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not
 score:False
Error type: noerr
---------------------------
Next Token : found, Posbility: 0.0003
Next Token : En, Posbility: 0.0003
Next Token :  found, Posbility: 0.0003
Next Token :  enough, Posbility: 0.0004
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_
 score:False
Error type: noerr
---------------------------
Next Token : a, Posbility: 0.0064
Next Token : implement, Posbility: 0.0072
Next Token : en, Posbility: 0.0135
Next Token : reached, Posbility: 0.0325
Next Token : found, Posbility: 0.8359
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0286
Next Token : _, Posbility: 0.0325
Next Token :  ", Posbility: 0.0471
Next Token :  , Posbility: 0.0884
Next Token : 
, Posbility: 0.7383
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found

 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :           , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : |_|, Posbility: 0.0001
Next Token : //, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [[, Posbility: 0.0057
Next Token :  [{, Posbility: 0.0074
Next Token :  [], Posbility: 0.0177
Next Token :  [, Posbility: 0.2773
Next Token :  , Posbility: 0.6641
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0312
Next Token : ([, Posbility: 0.0356
Next Token : _, Posbility: 0.1406
Next Token : x, Posbility: 0.3379
Next Token : (, Posbility: 0.3379
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : i, Posbility: 0.0216
Next Token : h, Posbility: 0.0216
Next Token : a, Posbility: 0.0854
Next Token : _, Posbility: 0.1240
Next Token : x, Posbility: 0.5547
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1,, Posbility: 0.0381
Next Token : 0, Posbility: 0.0432
Next Token : 1, Posbility: 0.0913
Next Token :  , Posbility: 0.1934
Next Token : ,, Posbility: 0.5234
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  None, Posbility: 0.0121
Next Token :  rest, Posbility: 0.0155
Next Token : _, Posbility: 0.0226
Next Token : y, Posbility: 0.0693
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : ()), Posbility: 0.0055
Next Token : (, Posbility: 0.0117
Next Token : x, Posbility: 0.0522
Next Token : _, Posbility: 0.1826
Next Token : y, Posbility: 0.7227
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : s, Posbility: 0.0019
Next Token : ),, Posbility: 0.0024
Next Token :  , Posbility: 0.0027
Next Token : ,, Posbility: 0.0109
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0020
Next Token :  as, Posbility: 0.0033
Next Token : ::, Posbility: 0.0276
Next Token :  when, Posbility: 0.0454
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0003
Next Token : :, Posbility: 0.0003
Next Token : if, Posbility: 0.0292
Next Token : ::, Posbility: 0.2158
Next Token : ->, Posbility: 0.7539
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0028
Next Token :  {, Posbility: 0.0181
Next Token :  match, Posbility: 0.0432
Next Token :  , Posbility: 0.2490
Next Token : 
, Posbility: 0.6758
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0065
Next Token :      , Posbility: 0.0108
Next Token :   , Posbility: 0.0903
Next Token :       , Posbility: 0.1318
Next Token :     , Posbility: 0.7578
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0137
Next Token : (, Posbility: 0.0226
Next Token : match, Posbility: 0.1299
Next Token : let, Posbility: 0.4004
Next Token : if, Posbility: 0.4004
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0030
Next Token :  Not, Posbility: 0.0030
Next Token :  !, Posbility: 0.0034
Next Token :  not, Posbility: 0.0153
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0038
Next Token : Compare, Posbility: 0.0072
Next Token : (, Posbility: 0.0771
Next Token : y, Posbility: 0.4453
Next Token : x, Posbility: 0.4453
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0378
Next Token :  <=, Posbility: 0.0623
Next Token :  =, Posbility: 0.1318
Next Token :  *, Posbility: 0.3594
Next Token :  , Posbility: 0.3594
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0009
Next Token : ^, Posbility: 0.0012
Next Token : ≤, Posbility: 0.0017
Next Token : >, Posbility: 0.3750
Next Token : <, Posbility: 0.6172
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  100, Posbility: 0.0009
Next Token :  1, Posbility: 0.0015
Next Token :  0, Posbility: 0.0625
Next Token : >, Posbility: 0.1699
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : 1000, Posbility: 0.0004
Next Token : min, Posbility: 0.0004
Next Token : 2, Posbility: 0.0010
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0016
Next Token :  ||, Posbility: 0.0035
Next Token :  , Posbility: 0.0057
Next Token : 
, Posbility: 0.0177
Next Token :  then, Posbility: 0.9648
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0016
Next Token :  Some, Posbility: 0.0062
Next Token :  {, Posbility: 0.0131
Next Token : 
, Posbility: 0.3379
Next Token :  , Posbility: 0.6289
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0172
Next Token : y, Posbility: 0.0469
Next Token : (, Posbility: 0.1270
Next Token : x, Posbility: 0.2100
Next Token : min, Posbility: 0.5703
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :  (*, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token :  , Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_
 score:False
Error type: noerr
---------------------------
Next Token : of, Posbility: 0.0000
Next Token : products, Posbility: 0.0001
Next Token : pair, Posbility: 0.0001
Next Token : prod, Posbility: 0.0001
Next Token : product, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0074
Next Token : (, Posbility: 0.0200
Next Token :  ((, Posbility: 0.0200
Next Token :  [, Posbility: 0.0894
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product 
 score:False
Error type: noerr
---------------------------
Next Token : [0, Posbility: 0.0003
Next Token : ([, Posbility: 0.0086
Next Token : y, Posbility: 0.0386
Next Token : x, Posbility: 0.1729
Next Token : (, Posbility: 0.7773
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : rest, Posbility: 0.0056
Next Token : Rest, Posbility: 0.0063
Next Token : y, Posbility: 0.0466
Next Token : List, Posbility: 0.0527
Next Token : x, Posbility: 0.8281
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  *, Posbility: 0.0021
Next Token : :, Posbility: 0.0057
Next Token : ,, Posbility: 0.0065
Next Token :  , Posbility: 0.0138
Next Token : s, Posbility: 0.9688
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0069
Next Token :  [, Posbility: 0.0078
Next Token : @, Posbility: 0.0239
Next Token :  @, Posbility: 0.1377
Next Token :  , Posbility: 0.7930
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : (, Posbility: 0.0042
Next Token : ::, Posbility: 0.0069
Next Token : @@, Posbility: 0.0114
Next Token : -, Posbility: 0.2598
Next Token : :, Posbility: 0.7070
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs :
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  skip, Posbility: 0.0058
Next Token :  drop, Posbility: 0.0157
Next Token :  rest, Posbility: 0.0179
Next Token :  filter, Posbility: 0.0625
Next Token :  , Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0012
Next Token : remainder, Posbility: 0.0020
Next Token : y, Posbility: 0.0167
Next Token : (, Posbility: 0.2617
Next Token : x, Posbility: 0.7109
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0007
Next Token :  +, Posbility: 0.0015
Next Token :  *, Posbility: 0.0095
Next Token :  , Posbility: 0.0122
Next Token : s, Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0378
Next Token :  @, Posbility: 0.1030
Next Token : ), Posbility: 0.1167
Next Token : @, Posbility: 0.1494
Next Token :  , Posbility: 0.4609
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0151
Next Token : @@, Posbility: 0.0249
Next Token : ::, Posbility: 0.0249
Next Token : :, Posbility: 0.0364
Next Token : -, Posbility: 0.8242
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0189
Next Token : @, Posbility: 0.0276
Next Token :  1), Posbility: 0.0664
Next Token :  , Posbility: 0.2969
Next Token :  [, Posbility: 0.4883
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs - [
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs - 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs - 1)
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [[, Posbility: 0.0038
Next Token :  1), Posbility: 0.0071
Next Token : >, Posbility: 0.0220
Next Token :  [, Posbility: 0.4414
Next Token :  , Posbility: 0.5000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@ 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@ [
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@>
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0020
Next Token :  ((, Posbility: 0.0048
Next Token :  [[, Posbility: 0.0061
Next Token :  , Posbility: 0.4863
Next Token :  [, Posbility: 0.4863
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@> [
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@> 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@> [[
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@> ((
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@> list
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@ 1)
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -@ [[
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0101
Next Token :  !, Posbility: 0.0101
Next Token :  [, Posbility: 0.0114
Next Token :  next, Posbility: 0.0188
Next Token :  , Posbility: 0.9062
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0049
Next Token : List, Posbility: 0.0134
Next Token : (, Posbility: 0.0679
Next Token : y, Posbility: 0.2373
Next Token : x, Posbility: 0.6445
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0053
Next Token :  +, Posbility: 0.0308
Next Token :  , Posbility: 0.1074
Next Token : ), Posbility: 0.1377
Next Token : s, Posbility: 0.6992
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  @, Posbility: 0.0175
Next Token : );, Posbility: 0.0198
Next Token :  with, Posbility: 0.0225
Next Token :  , Posbility: 0.0540
Next Token : ), Posbility: 0.8438
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
 score:False
Error type: noerr
---------------------------
Next Token :  with, Posbility: 0.0238
Next Token :  , Posbility: 0.1069
Next Token :  [, Posbility: 0.1992
Next Token :  else, Posbility: 0.2910
Next Token : 
, Posbility: 0.3301
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0007
Next Token :         , Posbility: 0.0035
Next Token :       , Posbility: 0.0052
Next Token :   , Posbility: 0.0052
Next Token :     , Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    
 score:False
Error type: noerr
---------------------------
Next Token : |, Posbility: 0.0007
Next Token : if, Posbility: 0.0010
Next Token : [, Posbility: 0.0012
Next Token : elif, Posbility: 0.0140
Next Token : else, Posbility: 0.9805
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0018
Next Token :  match, Posbility: 0.0026
Next Token :  {, Posbility: 0.0072
Next Token : 
, Posbility: 0.0413
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0046
Next Token : y, Posbility: 0.0126
Next Token : x, Posbility: 0.0342
Next Token : if, Posbility: 0.2539
Next Token : min, Posbility: 0.6875
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min
 score:False
Error type: noerr
---------------------------
Next Token : Product, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_
 score:False
Error type: noerr
---------------------------
Next Token : of, Posbility: 0.0000
Next Token : pair, Posbility: 0.0000
Next Token : products, Posbility: 0.0000
Next Token : prod, Posbility: 0.0001
Next Token : product, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : 
, Posbility: 0.0011
Next Token : (, Posbility: 0.0015
Next Token :  ((, Posbility: 0.0203
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ([, Posbility: 0.0002
Next Token : y, Posbility: 0.0009
Next Token : x, Posbility: 0.0017
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : rest, Posbility: 0.0005
Next Token : 
, Posbility: 0.0009
Next Token : y, Posbility: 0.0845
Next Token : x, Posbility: 0.9102
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : :, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : ->, Posbility: 0.0002
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs :
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  filter, Posbility: 0.0007
Next Token :  ((, Posbility: 0.0010
Next Token :  [, Posbility: 0.0010
Next Token :  rest, Posbility: 0.0010
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : (), Posbility: 0.0003
Next Token : (, Posbility: 0.0420
Next Token : x, Posbility: 0.1138
Next Token : y, Posbility: 0.8398
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0001
Next Token : ,, Posbility: 0.0002
Next Token :  *, Posbility: 0.0003
Next Token :  , Posbility: 0.1191
Next Token : s, Posbility: 0.8789
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : ), Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : →, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : ::, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0005
Next Token :  {, Posbility: 0.0006
Next Token :  ((, Posbility: 0.0006
Next Token :  [, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0004
Next Token : concat, Posbility: 0.0004
Next Token : (, Posbility: 0.0242
Next Token : y, Posbility: 0.4863
Next Token : x, Posbility: 0.4863
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0003
Next Token :  +, Posbility: 0.0012
Next Token : ), Posbility: 0.0025
Next Token :  , Posbility: 0.0046
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0017
Next Token : );, Posbility: 0.0037
Next Token :  +, Posbility: 0.0061
Next Token :  , Posbility: 0.0742
Next Token : ), Posbility: 0.9023
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0074
Next Token :  (*, Posbility: 0.0074
Next Token :  , Posbility: 0.0291
Next Token : 

, Posbility: 0.1670
Next Token : 
, Posbility: 0.7500
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0176
Next Token :       , Posbility: 0.0187
Next Token : let, Posbility: 0.0737
Next Token :     , Posbility: 0.2139
Next Token :   , Posbility: 0.5820
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0098
Next Token : (, Posbility: 0.0143
Next Token : end, Posbility: 0.0304
Next Token : ;, Posbility: 0.0344
Next Token : |, Posbility: 0.8867
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  pair, Posbility: 0.0034
Next Token :  ?, Posbility: 0.0044
Next Token :  ((, Posbility: 0.0056
Next Token :  [, Posbility: 0.0120
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0033
Next Token : y, Posbility: 0.0062
Next Token : _, Posbility: 0.0752
Next Token : x, Posbility: 0.1797
Next Token : (, Posbility: 0.7109
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : first, Posbility: 0.0025
Next Token : y, Posbility: 0.0114
Next Token : a, Posbility: 0.0212
Next Token : _, Posbility: 0.0449
Next Token : x, Posbility: 0.9023
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 0,, Posbility: 0.0050
Next Token :  *, Posbility: 0.0064
Next Token : 1,, Posbility: 0.0082
Next Token :  , Posbility: 0.0175
Next Token : ,, Posbility: 0.9531
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : _, Posbility: 0.0024
Next Token :  0), Posbility: 0.0031
Next Token : y, Posbility: 0.0051
Next Token :  None, Posbility: 0.0051
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : z, Posbility: 0.0057
Next Token : (, Posbility: 0.0094
Next Token : x, Posbility: 0.0698
Next Token : _, Posbility: 0.2432
Next Token : y, Posbility: 0.6602
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : );, Posbility: 0.0037
Next Token :  , Posbility: 0.0062
Next Token : ),, Posbility: 0.0167
Next Token : ,, Posbility: 0.0457
Next Token : ), Posbility: 0.9141
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0016
Next Token :  &&, Posbility: 0.0021
Next Token : ::, Posbility: 0.0135
Next Token :  when, Posbility: 0.0253
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0022
Next Token : x, Posbility: 0.0022
Next Token : ::, Posbility: 0.0267
Next Token : if, Posbility: 0.0820
Next Token : ->, Posbility: 0.8828
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0020
Next Token :  {, Posbility: 0.0042
Next Token :  match, Posbility: 0.0187
Next Token : 
, Posbility: 0.4805
Next Token :  , Posbility: 0.4805
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0449
Next Token : let, Posbility: 0.0449
Next Token : x, Posbility: 0.1777
Next Token : (, Posbility: 0.2012
Next Token : if, Posbility: 0.3750
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0004
Next Token :  ((, Posbility: 0.0004
Next Token :  int, Posbility: 0.0013
Next Token :  not, Posbility: 0.0015
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0001
Next Token : Int, Posbility: 0.0003
Next Token : (, Posbility: 0.0059
Next Token : y, Posbility: 0.1182
Next Token : x, Posbility: 0.8750
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0339
Next Token :  >=, Posbility: 0.0718
Next Token :  *, Posbility: 0.0718
Next Token :  =, Posbility: 0.2500
Next Token :  , Posbility: 0.5312
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0005
Next Token : ≥, Posbility: 0.0007
Next Token : ≤, Posbility: 0.0011
Next Token : >, Posbility: 0.4355
Next Token : <, Posbility: 0.5586
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  10, Posbility: 0.0001
Next Token : =>, Posbility: 0.0001
Next Token :  0, Posbility: 0.0084
Next Token : >, Posbility: 0.0178
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0004
Next Token : x, Posbility: 0.0006
Next Token : (, Posbility: 0.0006
Next Token : min, Posbility: 0.0006
Next Token : y, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0014
Next Token :  , Posbility: 0.0057
Next Token :  &&, Posbility: 0.0106
Next Token :  ||, Posbility: 0.0137
Next Token :  then, Posbility: 0.9570
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0029
Next Token :  [, Posbility: 0.0069
Next Token : 
, Posbility: 0.0352
Next Token :  Some, Posbility: 0.0352
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0147
Next Token : min, Posbility: 0.1787
Next Token : y, Posbility: 0.1787
Next Token : (, Posbility: 0.2949
Next Token : x, Posbility: 0.2949
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0096
Next Token : *, Posbility: 0.0140
Next Token :  , Posbility: 0.0262
Next Token :  else, Posbility: 0.0713
Next Token :  *, Posbility: 0.8672
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  max, Posbility: 0.0001
Next Token : =, Posbility: 0.0002
Next Token :  (*, Posbility: 0.0002
Next Token : y, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : product, Posbility: 0.0001
Next Token : x, Posbility: 0.0021
Next Token : (, Posbility: 0.0159
Next Token : min, Posbility: 0.1167
Next Token : y, Posbility: 0.8633
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0006
Next Token :  |, Posbility: 0.0020
Next Token : 
, Posbility: 0.0354
Next Token :  , Posbility: 0.0454
Next Token :  else, Posbility: 0.9141
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  max, Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0023
Next Token : min, Posbility: 0.0023
Next Token : (, Posbility: 0.0063
Next Token : x, Posbility: 0.0469
Next Token : y, Posbility: 0.9414
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y else y
 score:False
Error type: noerr
---------------------------
Next Token : *, Posbility: 0.0007
Next Token :  , Posbility: 0.0013
Next Token : 
, Posbility: 0.0052
Next Token : 

, Posbility: 0.0059
Next Token :  *, Posbility: 0.9844
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y else y *
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  max, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y else y * 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : z, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : y, Posbility: 0.0052
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y else y * x
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0085
Next Token :  in, Posbility: 0.0096
Next Token :  , Posbility: 0.0109
Next Token : 
, Posbility: 0.3613
Next Token : 

, Posbility: 0.5977
---------------------------
code:
 (* Write a function to find the minimum product from the pairs of tuples within a given list. *)
let rec min_product (xs : (int * int) list) =
  match xs with
  | [] -> raise Not_found
  | (x, y) ->
    if x < y then min_product (xs : xs -> xs)
    else min_product (xs : ys -> xs)
  | (x, y) -> if x < y then x * y else y * x


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :62.88617825508118

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>