code:
 (* Write a function to remove all elements from a given list present in another list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0130
Next Token :  list, Posbility: 0.0130
Next Token :  , Posbility: 0.1089
Next Token :  remove, Posbility: 0.2305
Next Token :  rec, Posbility: 0.5547
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0199
Next Token :  loop, Posbility: 0.0199
Next Token :  find, Posbility: 0.0226
Next Token :  , Posbility: 0.2148
Next Token :  remove, Posbility: 0.5156
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0028
Next Token : (, Posbility: 0.0075
Next Token :  =, Posbility: 0.0160
Next Token :  , Posbility: 0.0718
Next Token : _, Posbility: 0.8711
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0532
Next Token : elements, Posbility: 0.0603
Next Token : list, Posbility: 0.1279
Next Token : duplicate, Posbility: 0.1445
Next Token : all, Posbility: 0.1445
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0261
Next Token : (, Posbility: 0.0295
Next Token :  =, Posbility: 0.0488
Next Token : _, Posbility: 0.3594
Next Token :  , Posbility: 0.4629
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0264
Next Token : :, Posbility: 0.0339
Next Token : (, Posbility: 0.1338
Next Token : lst, Posbility: 0.1953
Next Token : x, Posbility: 0.3223
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0060
Next Token :  l, Posbility: 0.0144
Next Token :  =, Posbility: 0.0305
Next Token :  , Posbility: 0.2891
Next Token : s, Posbility: 0.6133
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0152
Next Token :  a, Posbility: 0.0152
Next Token :  list, Posbility: 0.0195
Next Token :  =, Posbility: 0.1855
Next Token :  , Posbility: 0.6484
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rem, Posbility: 0.0052
Next Token : lst, Posbility: 0.0067
Next Token : ls, Posbility: 0.0075
Next Token : x, Posbility: 0.0630
Next Token : y, Posbility: 0.8711
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token :  =, Posbility: 0.0140
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0033
Next Token :  ~, Posbility: 0.0038
Next Token :  acc, Posbility: 0.0132
Next Token :  , Posbility: 0.0359
Next Token :  =, Posbility: 0.9258
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0019
Next Token :  function, Posbility: 0.0041
Next Token :  , Posbility: 0.0439
Next Token :  match, Posbility: 0.0640
Next Token : 
, Posbility: 0.8789
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0051
Next Token :    , Posbility: 0.0066
Next Token : 	, Posbility: 0.0085
Next Token :     , Posbility: 0.1030
Next Token :   , Posbility: 0.8633
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Match, Posbility: 0.0033
Next Token : List, Posbility: 0.0148
Next Token : let, Posbility: 0.0854
Next Token : if, Posbility: 0.1602
Next Token : match, Posbility: 0.7148
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0015
Next Token : (, Posbility: 0.0015
Next Token :  [, Posbility: 0.0015
Next Token :  String, Posbility: 0.0040
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0026
Next Token : (, Posbility: 0.0359
Next Token : y, Posbility: 0.0977
Next Token : List, Posbility: 0.1250
Next Token : x, Posbility: 0.7188
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : ,, Posbility: 0.0007
Next Token :  with, Posbility: 0.0015
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0022
Next Token :  @, Posbility: 0.0060
Next Token :  , Posbility: 0.0164
Next Token : ,, Posbility: 0.0732
Next Token :  with, Posbility: 0.8945
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0023
Next Token :  , Posbility: 0.0043
Next Token :  [, Posbility: 0.0117
Next Token :  [], Posbility: 0.0520
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :       , Posbility: 0.0014
Next Token :    , Posbility: 0.0016
Next Token :     , Posbility: 0.0674
Next Token :   , Posbility: 0.9297
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : Nil, Posbility: 0.0002
Next Token : [, Posbility: 0.0222
Next Token : [], Posbility: 0.0322
Next Token : |, Posbility: 0.9453
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0023
Next Token :  nil, Posbility: 0.0168
Next Token :  , Posbility: 0.0277
Next Token :  [, Posbility: 0.0277
Next Token :  [], Posbility: 0.9180
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0049
Next Token :  =>, Posbility: 0.0049
Next Token :  when, Posbility: 0.0082
Next Token :  |, Posbility: 0.0135
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0006
Next Token : â†’, Posbility: 0.0006
Next Token : if, Posbility: 0.0009
Next Token : ::, Posbility: 0.0059
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0018
Next Token :  [, Posbility: 0.0029
Next Token : 
, Posbility: 0.0216
Next Token :  [], Posbility: 0.0459
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0024
Next Token : (), Posbility: 0.0024
Next Token : x, Posbility: 0.0107
Next Token : return, Posbility: 0.0107
Next Token : y, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> y
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0015
Next Token : ;, Posbility: 0.0027
Next Token :  |, Posbility: 0.0058
Next Token :  , Posbility: 0.0066
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  
 score:False
Error type: noerr
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0076
Next Token :  el, Posbility: 0.0161
Next Token :  [], Posbility: 0.0161
Next Token :  [, Posbility: 0.0439
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0275
Next Token : y, Posbility: 0.0275
Next Token : hd, Posbility: 0.0354
Next Token : _, Posbility: 0.1582
Next Token : x, Posbility: 0.7109
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0034
Next Token : :, Posbility: 0.0044
Next Token : s, Posbility: 0.0154
Next Token : ::, Posbility: 0.3086
Next Token :  , Posbility: 0.6523
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0003
Next Token : if, Posbility: 0.0007
Next Token : :, Posbility: 0.0008
Next Token : ->, Posbility: 0.0076
Next Token : ::, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0008
Next Token :  [], Posbility: 0.0018
Next Token :  new, Posbility: 0.0026
Next Token :  rest, Posbility: 0.1621
Next Token :  , Posbility: 0.8242
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0096
Next Token : t, Posbility: 0.0157
Next Token : _, Posbility: 0.0427
Next Token : y, Posbility: 0.0427
Next Token : x, Posbility: 0.8594
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0004
Next Token : x, Posbility: 0.0009
Next Token : _, Posbility: 0.0015
Next Token : ', Posbility: 0.0041
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0549
Next Token : 1, Posbility: 0.0623
Next Token : _, Posbility: 0.0903
Next Token : ', Posbility: 0.1914
Next Token :  , Posbility: 0.5195
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : -, Posbility: 0.0003
Next Token : if, Posbility: 0.0025
Next Token : ::, Posbility: 0.0032
Next Token : ->, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0032
Next Token :  match, Posbility: 0.0391
Next Token :  , Posbility: 0.1748
Next Token :  remove, Posbility: 0.2891
Next Token : 
, Posbility: 0.4746
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0096
Next Token :      , Posbility: 0.0096
Next Token :   , Posbility: 0.0109
Next Token :       , Posbility: 0.3633
Next Token :     , Posbility: 0.5977
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0270
Next Token : remove, Posbility: 0.0732
Next Token : match, Posbility: 0.1992
Next Token : if, Posbility: 0.3281
Next Token : let, Posbility: 0.3281
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0154
Next Token :  remove, Posbility: 0.0176
Next Token :  new, Posbility: 0.0420
Next Token :  rec, Posbility: 0.1660
Next Token :  , Posbility: 0.5820
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0260
Next Token : rem, Posbility: 0.0295
Next Token : z, Posbility: 0.0295
Next Token : x, Posbility: 0.2178
Next Token : y, Posbility: 0.5234
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0021
Next Token : ', Posbility: 0.0035
Next Token : _, Posbility: 0.0156
Next Token :  =, Posbility: 0.1147
Next Token : s, Posbility: 0.8477
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0186
Next Token : 2, Posbility: 0.0306
Next Token : _, Posbility: 0.0830
Next Token : ', Posbility: 0.2256
Next Token :  =, Posbility: 0.6133
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0023
Next Token :  filter, Posbility: 0.0023
Next Token : 
, Posbility: 0.0063
Next Token :  , Posbility: 0.0464
Next Token :  remove, Posbility: 0.9336
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  all, Posbility: 0.0001
Next Token :  , Posbility: 0.0097
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : from, Posbility: 0.0003
Next Token : at, Posbility: 0.0003
Next Token : first, Posbility: 0.0009
Next Token : one, Posbility: 0.0067
Next Token : all, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0003
Next Token : (, Posbility: 0.0005
Next Token :  ~, Posbility: 0.0019
Next Token : _, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0159
Next Token : y, Posbility: 0.1172
Next Token : x, Posbility: 0.8672
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :  [], Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token :  , Posbility: 0.0229
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0003
Next Token :  ~, Posbility: 0.0005
Next Token :  [, Posbility: 0.0006
Next Token :  [], Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ([], Posbility: 0.0000
Next Token : x, Posbility: 0.0025
Next Token : (, Posbility: 0.0067
Next Token : y, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  |, Posbility: 0.0015
Next Token : 
, Posbility: 0.0292
Next Token :  in, Posbility: 0.9688
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  remove, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : 

, Posbility: 0.0040
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0017
Next Token :   , Posbility: 0.0019
Next Token :    , Posbility: 0.0259
Next Token :     , Posbility: 0.9688
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : remove, Posbility: 0.0564
Next Token : x, Posbility: 0.0723
Next Token : let, Posbility: 0.0723
Next Token : match, Posbility: 0.1533
Next Token : if, Posbility: 0.5352
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0121
Next Token :  Not, Posbility: 0.0199
Next Token :  !, Posbility: 0.0330
Next Token :  not, Posbility: 0.2432
Next Token :  , Posbility: 0.6602
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Contains, Posbility: 0.0161
Next Token : (, Posbility: 0.0386
Next Token : y, Posbility: 0.1348
Next Token : x, Posbility: 0.3223
Next Token : List, Posbility: 0.4141
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Lib, Posbility: 0.0003
Next Token : Helpers, Posbility: 0.0004
Next Token : s, Posbility: 0.0004
Next Token : _, Posbility: 0.0022
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : find, Posbility: 0.0056
Next Token : exists, Posbility: 0.0194
Next Token : member, Posbility: 0.0598
Next Token : contains, Posbility: 0.0767
Next Token : mem, Posbility: 0.8242
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0006
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 0.0010
Next Token : _, Posbility: 0.0157
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : (, Posbility: 0.0059
Next Token : y, Posbility: 0.1187
Next Token : x, Posbility: 0.8750
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0001
Next Token :  !, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0002
Next Token : s, Posbility: 0.0041
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : <, Posbility: 0.0000
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 0.0179
Next Token : y, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x y
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0015
Next Token :  ==, Posbility: 0.0015
Next Token :  , Posbility: 0.0031
Next Token :  =, Posbility: 0.0085
Next Token :  then, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0011
Next Token :  Remove, Posbility: 0.0018
Next Token : 
, Posbility: 0.0967
Next Token :  remove, Posbility: 0.3379
Next Token :  , Posbility: 0.5547
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0046
Next Token : List, Posbility: 0.0125
Next Token : (, Posbility: 0.0342
Next Token : x, Posbility: 0.2520
Next Token : y, Posbility: 0.6836
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then y
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0166
Next Token :  @, Posbility: 0.0166
Next Token :  |, Posbility: 0.0273
Next Token : 
, Posbility: 0.1226
Next Token :  else, Posbility: 0.8008
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0007
Next Token : 
, Posbility: 0.0028
Next Token :  [, Posbility: 0.0060
Next Token :  remove, Posbility: 0.3730
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : add, Posbility: 0.0016
Next Token : List, Posbility: 0.0119
Next Token : (, Posbility: 0.0879
Next Token : y, Posbility: 0.2393
Next Token : x, Posbility: 0.6484
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 0.0015
Next Token : ::, Posbility: 0.0112
Next Token : s, Posbility: 0.1992
Next Token :  , Posbility: 0.7852
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : :, Posbility: 0.0004
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x ::
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Remove, Posbility: 0.0002
Next Token : ., Posbility: 0.0005
Next Token :  delete, Posbility: 0.0005
Next Token :  remove, Posbility: 0.0598
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : remove, Posbility: 0.0001
Next Token : (, Posbility: 0.0009
Next Token : x, Posbility: 0.0179
Next Token : y, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: y
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: ys
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0034
Next Token : ), Posbility: 0.0055
Next Token : 

, Posbility: 0.1836
Next Token :  in, Posbility: 0.3027
Next Token : 
, Posbility: 0.4980
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: ys

 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0183
Next Token :     , Posbility: 0.0320
Next Token : end, Posbility: 0.0564
Next Token : let, Posbility: 0.1191
Next Token :   , Posbility: 0.6445
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: ys
  
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0065
Next Token : end, Posbility: 0.0256
Next Token : in, Posbility: 0.1670
Next Token : |, Posbility: 0.3125
Next Token : ;, Posbility: 0.4551
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: ys
  ;
 score:False
Error type: noerr
---------------------------
Next Token : ;&, Posbility: 0.0004
Next Token :  , Posbility: 0.0018
Next Token : 

, Posbility: 0.0864
Next Token : 
, Posbility: 0.0864
Next Token : ;, Posbility: 0.8203
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: ys
  ;;
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token : ;, Posbility: 0.0184
Next Token : 
, Posbility: 0.2871
Next Token : 

, Posbility: 0.6914
---------------------------
code:
 (* Write a function to remove all elements from a given list present in another list. *)
let rec remove_all xs ys =
  match xs with
  | [] -> ys
  | x :: xs ->
    let ys = remove_all xs ys in
    if List.mem x ys then ys else x :: ys
  ;;


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :36.790592432022095

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>