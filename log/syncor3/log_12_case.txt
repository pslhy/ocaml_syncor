code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0134
Next Token :  string, Posbility: 0.0151
Next Token :  , Posbility: 0.1436
Next Token :  rec, Posbility: 0.3438
Next Token :  remove, Posbility: 0.3438
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0029
Next Token : Char, Posbility: 0.0102
Next Token :  =, Posbility: 0.0190
Next Token :  , Posbility: 0.0244
Next Token : _, Posbility: 0.9141
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : from, Posbility: 0.0308
Next Token : common, Posbility: 0.0396
Next Token : first, Posbility: 0.0947
Next Token : character, Posbility: 0.1377
Next Token : char, Posbility: 0.3750
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0022
Next Token :  =, Posbility: 0.0162
Next Token :  , Posbility: 0.0439
Next Token : _, Posbility: 0.0439
Next Token : s, Posbility: 0.8828
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0271
Next Token :  str, Posbility: 0.0271
Next Token :  =, Posbility: 0.2002
Next Token : _, Posbility: 0.2578
Next Token :  , Posbility: 0.3301
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0094
Next Token : c, Posbility: 0.0107
Next Token : (, Posbility: 0.0613
Next Token : x, Posbility: 0.1011
Next Token : s, Posbility: 0.7461
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0245
Next Token : s, Posbility: 0.0315
Next Token : 2, Posbility: 0.0669
Next Token :  , Posbility: 0.2988
Next Token : 1, Posbility: 0.4922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0029
Next Token :  chars, Posbility: 0.0038
Next Token : s, Posbility: 0.0217
Next Token :  =, Posbility: 0.0317
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : cs, Posbility: 0.0003
Next Token : (, Posbility: 0.0004
Next Token : c, Posbility: 0.0005
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : 1, Posbility: 0.0002
Next Token : 2,, Posbility: 0.0003
Next Token :  =, Posbility: 0.0004
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0016
Next Token :  str, Posbility: 0.0023
Next Token : 
, Posbility: 0.0044
Next Token :  , Posbility: 0.0325
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0045
Next Token :  match, Posbility: 0.0137
Next Token :  String, Posbility: 0.0137
Next Token :  , Posbility: 0.1011
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0066
Next Token : let, Posbility: 0.0074
Next Token :    , Posbility: 0.0139
Next Token :     , Posbility: 0.1025
Next Token :   , Posbility: 0.8594
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0293
Next Token : if, Posbility: 0.0293
Next Token : List, Posbility: 0.0483
Next Token : match, Posbility: 0.0620
Next Token : let, Posbility: 0.7578
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  open, Posbility: 0.0317
Next Token :  len, Posbility: 0.0408
Next Token :  chars, Posbility: 0.0674
Next Token :  rec, Posbility: 0.1826
Next Token :  , Posbility: 0.3867
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0199
Next Token : n, Posbility: 0.0199
Next Token : r, Posbility: 0.0225
Next Token : x, Posbility: 0.0255
Next Token : s, Posbility: 0.5820
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0107
Next Token : 3, Posbility: 0.0481
Next Token :  =, Posbility: 0.1157
Next Token : 2, Posbility: 0.2451
Next Token : 1, Posbility: 0.5195
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0183
Next Token : s, Posbility: 0.0208
Next Token : ', Posbility: 0.0302
Next Token :  =, Posbility: 0.4160
Next Token : _, Posbility: 0.4160
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : set, Posbility: 0.0278
Next Token : list, Posbility: 0.0359
Next Token : length, Posbility: 0.1250
Next Token : char, Posbility: 0.1416
Next Token : len, Posbility: 0.1816
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  be, Posbility: 0.0005
Next Token :   , Posbility: 0.0014
Next Token : _, Posbility: 0.0024
Next Token : ,, Posbility: 0.0292
Next Token :  =, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  S, Posbility: 0.0008
Next Token :  string, Posbility: 0.0417
Next Token :  , Posbility: 0.1138
Next Token :  String, Posbility: 0.8398
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Library, Posbility: 0.0002
Next Token : s, Posbility: 0.0004
Next Token : Length, Posbility: 0.0032
Next Token : _, Posbility: 0.0041
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0003
Next Token : len, Posbility: 0.0031
Next Token : get, Posbility: 0.0040
Next Token : Length, Posbility: 0.0085
Next Token : length, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0003
Next Token : (, Posbility: 0.0008
Next Token :  in, Posbility: 0.0012
Next Token : _, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : (, Posbility: 0.0025
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token :  in, Posbility: 0.0003
Next Token : 1., Posbility: 0.0003
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  =, Posbility: 0.0009
Next Token :  , Posbility: 0.0015
Next Token : 
, Posbility: 0.0067
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.0052
Next Token : 

, Posbility: 0.0067
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :    , Posbility: 0.0003
Next Token :     , Posbility: 0.0032
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0111
Next Token : List, Posbility: 0.0111
Next Token : match, Posbility: 0.0183
Next Token : if, Posbility: 0.0439
Next Token : let, Posbility: 0.8789
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  index, Posbility: 0.0074
Next Token :  remove, Posbility: 0.0074
Next Token :  i, Posbility: 0.0095
Next Token :  len, Posbility: 0.0201
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : diff, Posbility: 0.0034
Next Token : common, Posbility: 0.0038
Next Token : n, Posbility: 0.0043
Next Token : idx, Posbility: 0.0081
Next Token : s, Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0009
Next Token : 3, Posbility: 0.0009
Next Token : _, Posbility: 0.0023
Next Token : 1, Posbility: 0.0471
Next Token : 2, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0001
Next Token : len, Posbility: 0.0002
Next Token : a, Posbility: 0.0002
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0024
Next Token : pos, Posbility: 0.0024
Next Token : idx, Posbility: 0.0024
Next Token : char, Posbility: 0.0065
Next Token : len, Posbility: 0.9688
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : ,, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : Ext, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : Length, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : 1, Posbility: 0.0004
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token : 

, Posbility: 0.0474
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :  , Posbility: 0.0012
Next Token :     , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0130
Next Token : String, Posbility: 0.0147
Next Token : match, Posbility: 0.0513
Next Token : if, Posbility: 0.2305
Next Token : let, Posbility: 0.6250
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0344
Next Token :  pos, Posbility: 0.0344
Next Token :  rec, Posbility: 0.0569
Next Token :  len, Posbility: 0.0938
Next Token :  , Posbility: 0.4199
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0425
Next Token : common, Posbility: 0.0425
Next Token : idx, Posbility: 0.0425
Next Token : min, Posbility: 0.0544
Next Token : s, Posbility: 0.5195
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0239
Next Token : 3, Posbility: 0.0239
Next Token :  =, Posbility: 0.0308
Next Token : 2, Posbility: 0.2910
Next Token : 1, Posbility: 0.6172
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0028
Next Token : ', Posbility: 0.0028
Next Token : s, Posbility: 0.0076
Next Token :  =, Posbility: 0.0820
Next Token : _, Posbility: 0.8828
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0530
Next Token : idx, Posbility: 0.0530
Next Token : pos, Posbility: 0.0601
Next Token : len, Posbility: 0.0771
Next Token : char, Posbility: 0.1631
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0008
Next Token :  , Posbility: 0.0021
Next Token :  =, Posbility: 0.0415
Next Token : _, Posbility: 0.1128
Next Token : s, Posbility: 0.8320
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token : ,, Posbility: 0.0037
Next Token :  , Posbility: 0.0061
Next Token : _, Posbility: 0.0742
Next Token :  =, Posbility: 0.9062
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0055
Next Token :  string, Posbility: 0.0055
Next Token : 
, Posbility: 0.0405
Next Token :  , Posbility: 0.1099
Next Token :  String, Posbility: 0.8125
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0447
Next Token : split, Posbility: 0.0574
Next Token : get, Posbility: 0.0947
Next Token : to, Posbility: 0.1562
Next Token : sub, Posbility: 0.4238
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : seq, Posbility: 0.0030
Next Token :  0, Posbility: 0.0056
Next Token : s, Posbility: 0.0134
Next Token : _, Posbility: 0.0250
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [0], Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : [0, Posbility: 0.0000
Next Token : (, Posbility: 0.0019
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1., Posbility: 0.0002
Next Token :  1, Posbility: 0.0005
Next Token : 2, Posbility: 0.0015
Next Token : 1,, Posbility: 0.0015
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0022
Next Token :  ~, Posbility: 0.0060
Next Token :  , Posbility: 0.0447
Next Token :  1, Posbility: 0.0447
Next Token :  0, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0006
Next Token :  1, Posbility: 0.0007
Next Token :  [, Posbility: 0.0007
Next Token :  ~, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token : Int, Posbility: 0.0002
Next Token : min, Posbility: 0.0011
Next Token : (, Posbility: 0.2676
Next Token : s, Posbility: 0.7266
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1., Posbility: 0.0001
Next Token : 1-1, Posbility: 0.0002
Next Token : 2, Posbility: 0.0140
Next Token : 1, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  len, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : idx, Posbility: 0.0000
Next Token : pos, Posbility: 0.0001
Next Token : char, Posbility: 0.0001
Next Token : length, Posbility: 0.0002
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0033
Next Token :  |, Posbility: 0.0078
Next Token : -1, Posbility: 0.0146
Next Token :  , Posbility: 0.0579
Next Token :  in, Posbility: 0.9062
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0007
Next Token : 

, Posbility: 0.0059
Next Token :  , Posbility: 0.0059
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token :     , Posbility: 0.0013
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0081
Next Token : String, Posbility: 0.0092
Next Token : match, Posbility: 0.0104
Next Token : if, Posbility: 0.0151
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0047
Next Token :  index, Posbility: 0.0060
Next Token :  pos, Posbility: 0.0060
Next Token :  chars, Posbility: 0.0165
Next Token :  , Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0014
Next Token : n, Posbility: 0.0014
Next Token : common, Posbility: 0.0039
Next Token : idx, Posbility: 0.0065
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 0.0009
Next Token : 3, Posbility: 0.0009
Next Token : 1, Posbility: 0.0474
Next Token : 2, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : i, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : start, Posbility: 0.0024
Next Token : first, Posbility: 0.0024
Next Token : set, Posbility: 0.0024
Next Token : sub, Posbility: 0.0024
Next Token : char, Posbility: 0.9727
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0007
Next Token :  =, Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : _, Posbility: 0.0032
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.0022
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Extensions, Posbility: 0.0000
Next Token : Ext, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0001
Next Token : find, Posbility: 0.0001
Next Token : split, Posbility: 0.0002
Next Token : substring, Posbility: 0.0003
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 2,, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0025
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0007
Next Token :  , Posbility: 0.0019
Next Token :  1, Posbility: 0.0019
Next Token :  0, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  String, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : min, Posbility: 0.0002
Next Token : (, Posbility: 0.0017
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0052
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : max, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : char, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0005
Next Token :   , Posbility: 0.0007
Next Token :  , Posbility: 0.0014
Next Token : 

, Posbility: 0.0598
Next Token : 
, Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0001
Next Token :       , Posbility: 0.0004
Next Token :     , Posbility: 0.0015
Next Token :  , Posbility: 0.0025
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0199
Next Token : match, Posbility: 0.0255
Next Token : String, Posbility: 0.0289
Next Token : if, Posbility: 0.0327
Next Token : let, Posbility: 0.8438
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0237
Next Token :  remove, Posbility: 0.0237
Next Token :  pos, Posbility: 0.0237
Next Token :  chars, Posbility: 0.1060
Next Token :  , Posbility: 0.4746
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0146
Next Token : diff, Posbility: 0.0309
Next Token : idx, Posbility: 0.0309
Next Token : common, Posbility: 0.0840
Next Token : s, Posbility: 0.6211
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0216
Next Token : 3, Posbility: 0.0216
Next Token :  =, Posbility: 0.0277
Next Token : 2, Posbility: 0.2051
Next Token : 1, Posbility: 0.7148
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0013
Next Token : ', Posbility: 0.0013
Next Token : s, Posbility: 0.0034
Next Token :  =, Posbility: 0.0415
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0183
Next Token : len, Posbility: 0.0303
Next Token : idx, Posbility: 0.0303
Next Token : set, Posbility: 0.0564
Next Token : char, Posbility: 0.4180
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0008
Next Token : set, Posbility: 0.0022
Next Token :  =, Posbility: 0.0058
Next Token : _, Posbility: 0.1172
Next Token : s, Posbility: 0.8672
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0068
Next Token : ', Posbility: 0.0113
Next Token : 2, Posbility: 0.0306
Next Token :  =, Posbility: 0.1377
Next Token : _, Posbility: 0.7891
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : idx, Posbility: 0.0216
Next Token : index, Posbility: 0.0244
Next Token : not, Posbility: 0.0277
Next Token : set, Posbility: 0.1592
Next Token : len, Posbility: 0.3828
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 0.0005
Next Token : ,, Posbility: 0.0005
Next Token : _, Posbility: 0.0017
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  0, Posbility: 0.0003
Next Token : 
, Posbility: 0.0059
Next Token :  , Posbility: 0.1182
Next Token :  String, Posbility: 0.8711
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : Ext, Posbility: 0.0001
Next Token : Extensions, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0002
Next Token : get, Posbility: 0.0003
Next Token : count, Posbility: 0.0009
Next Token : index, Posbility: 0.0015
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : @@, Posbility: 0.0000
Next Token : (, Posbility: 0.0015
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2, Posbility: 0.0015
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  char, Posbility: 0.0000
Next Token :  chars, Posbility: 0.0001
Next Token :  in, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : charset, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 0.0006
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token :     , Posbility: 0.0006
Next Token :       , Posbility: 0.0007
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0059
Next Token : String, Posbility: 0.0097
Next Token : match, Posbility: 0.0160
Next Token : if, Posbility: 0.0713
Next Token : let, Posbility: 0.8711
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0061
Next Token :  index, Posbility: 0.0061
Next Token :  pos, Posbility: 0.0061
Next Token :  chars, Posbility: 0.0100
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0024
Next Token : diff, Posbility: 0.0024
Next Token : common, Posbility: 0.0039
Next Token : idx, Posbility: 0.0051
Next Token : s, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0009
Next Token :  =, Posbility: 0.0009
Next Token : 0, Posbility: 0.0009
Next Token : 1, Posbility: 0.0471
Next Token : 2, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0001
Next Token : sub, Posbility: 0.0001
Next Token : common, Posbility: 0.0001
Next Token : len, Posbility: 0.0003
Next Token : char, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0007
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0002
Next Token : index, Posbility: 0.0003
Next Token : idx, Posbility: 0.0003
Next Token : pos, Posbility: 0.0007
Next Token : len, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  String, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : strlen, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : p, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0009
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : charset, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0474
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0010
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0138
Next Token : String, Posbility: 0.0258
Next Token : match, Posbility: 0.0481
Next Token : if, Posbility: 0.1904
Next Token : let, Posbility: 0.6641
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0240
Next Token :  i, Posbility: 0.0240
Next Token :  len, Posbility: 0.0309
Next Token :  chars, Posbility: 0.0508
Next Token :  , Posbility: 0.4824
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0306
Next Token : min, Posbility: 0.0306
Next Token : diff, Posbility: 0.0347
Next Token : common, Posbility: 0.0574
Next Token : s, Posbility: 0.6172
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0140
Next Token : _, Posbility: 0.0231
Next Token :  =, Posbility: 0.0231
Next Token : 2, Posbility: 0.1699
Next Token : 1, Posbility: 0.7617
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0008
Next Token : c, Posbility: 0.0009
Next Token : s, Posbility: 0.0019
Next Token :  =, Posbility: 0.0256
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0175
Next Token : len, Posbility: 0.0254
Next Token : sub, Posbility: 0.0288
Next Token : idx, Posbility: 0.0369
Next Token : char, Posbility: 0.5117
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 0.0063
Next Token : _, Posbility: 0.0469
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0029
Next Token :  , Posbility: 0.0037
Next Token : 2, Posbility: 0.0271
Next Token :  =, Posbility: 0.0574
Next Token : _, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0464
Next Token : set, Posbility: 0.0525
Next Token : idx, Posbility: 0.0596
Next Token : pos, Posbility: 0.0674
Next Token : len, Posbility: 0.0674
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0154
Next Token :  , Posbility: 0.0325
Next Token : 2, Posbility: 0.0537
Next Token :  =, Posbility: 0.2119
Next Token : _, Posbility: 0.6523
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0312
Next Token : diff, Posbility: 0.0312
Next Token : sub, Posbility: 0.0354
Next Token : less, Posbility: 0.0967
Next Token : minus, Posbility: 0.2617
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0062
Next Token : _1_, Posbility: 0.0062
Next Token : 1, Posbility: 0.0168
Next Token :  =, Posbility: 0.0457
Next Token : _, Posbility: 0.9180
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0110
Next Token : char, Posbility: 0.0142
Next Token : 1, Posbility: 0.0182
Next Token : one, Posbility: 0.0635
Next Token : s, Posbility: 0.7734
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : 3, Posbility: 0.0004
Next Token : 1, Posbility: 0.0067
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Next Token :  in, Posbility: 0.0009
Next Token :  =, Posbility: 0.0179
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0003
Next Token : length, Posbility: 0.0003
Next Token : idx, Posbility: 0.0003
Next Token : len, Posbility: 0.0471
Next Token : char, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 0.0025
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token :  len, Posbility: 0.0033
Next Token :  , Posbility: 0.0090
Next Token :  =, Posbility: 0.4902
Next Token : _, Posbility: 0.4902
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0003
Next Token : min, Posbility: 0.0003
Next Token : length, Posbility: 0.0009
Next Token : idx, Posbility: 0.0009
Next Token : len, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0030
Next Token : _, Posbility: 0.0093
Next Token :  be, Posbility: 0.0106
Next Token :  , Posbility: 0.0175
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0009
Next Token :  Math, Posbility: 0.0011
Next Token :  String, Posbility: 0.0063
Next Token : 
, Posbility: 0.0469
Next Token :  , Posbility: 0.9414
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Int, Posbility: 0.0003
Next Token : 
, Posbility: 0.0024
Next Token : if, Posbility: 0.0024
Next Token : (, Posbility: 0.0178
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 1-1, Posbility: 0.0001
Next Token : 2, Posbility: 0.0015
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : len, Posbility: 0.0474
Next Token : char, Posbility: 0.9531
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : S, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  –, Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token : -, Posbility: 0.0066
Next Token :  +, Posbility: 0.0066
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : >, Posbility: 0.0001
Next Token : /, Posbility: 0.0001
Next Token : −, Posbility: 0.0002
Next Token : <, Posbility: 0.0003
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  String, Posbility: 0.0003
Next Token : s, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0013
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0003
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ch, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0009
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : es, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Len, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  , Posbility: 0.0019
Next Token :  =, Posbility: 0.0058
Next Token : 
, Posbility: 0.0085
Next Token :  in, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0010
Next Token :  , Posbility: 0.0015
Next Token :     , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0162
Next Token : match, Posbility: 0.0344
Next Token : String, Posbility: 0.0645
Next Token : if, Posbility: 0.1357
Next Token : let, Posbility: 0.6914
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0182
Next Token :  new, Posbility: 0.0233
Next Token :  remove, Posbility: 0.0233
Next Token :  chars, Posbility: 0.0493
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0082
Next Token : common, Posbility: 0.0082
Next Token : rem, Posbility: 0.0094
Next Token : idx, Posbility: 0.0154
Next Token : s, Posbility: 0.8438
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0125
Next Token : 3, Posbility: 0.0125
Next Token :  =, Posbility: 0.0339
Next Token : 2, Posbility: 0.2520
Next Token : 1, Posbility: 0.6836
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : c, Posbility: 0.0005
Next Token : s, Posbility: 0.0008
Next Token :  =, Posbility: 0.0291
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0118
Next Token : idx, Posbility: 0.0134
Next Token : sub, Posbility: 0.0195
Next Token : len, Posbility: 0.0283
Next Token : char, Posbility: 0.7305
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0064
Next Token : _, Posbility: 0.0471
Next Token : s, Posbility: 0.9453
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0023
Next Token : ', Posbility: 0.0030
Next Token : 2, Posbility: 0.0049
Next Token :  =, Posbility: 0.0466
Next Token : _, Posbility: 0.9375
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0277
Next Token : char, Posbility: 0.0312
Next Token : plus, Posbility: 0.0403
Next Token : len, Posbility: 0.2314
Next Token : minus, Posbility: 0.2617
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token : _1_, Posbility: 0.0003
Next Token :  , Posbility: 0.0009
Next Token :  =, Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0009
Next Token : first, Posbility: 0.0024
Next Token : last, Posbility: 0.0024
Next Token : char, Posbility: 0.0175
Next Token : s, Posbility: 0.9531
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : 3, Posbility: 0.0003
Next Token : _, Posbility: 0.0003
Next Token : 1, Posbility: 0.0140
Next Token : 2, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0004
Next Token : s, Posbility: 0.0004
Next Token :  in, Posbility: 0.0007
Next Token :  =, Posbility: 0.0293
Next Token : _, Posbility: 0.9688
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0003
Next Token : str, Posbility: 0.0003
Next Token : sub, Posbility: 0.0003
Next Token : len, Posbility: 0.0025
Next Token : char, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ses, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0005
Next Token :  =, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  in, Posbility: 0.0005
Next Token :  , Posbility: 0.0090
Next Token :  =, Posbility: 0.4922
Next Token : _, Posbility: 0.4922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0023
Next Token : minus, Posbility: 0.0062
Next Token : idx, Posbility: 0.0062
Next Token : char, Posbility: 0.0168
Next Token : len, Posbility: 0.9219
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0007
Next Token :  be, Posbility: 0.0020
Next Token :  , Posbility: 0.0186
Next Token : _, Posbility: 0.1758
Next Token :  =, Posbility: 0.7852
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token :  ", Posbility: 0.0005
Next Token : 
, Posbility: 0.2100
Next Token :  , Posbility: 0.2100
Next Token :  String, Posbility: 0.5703
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0039
Next Token : remove, Posbility: 0.0039
Next Token : substr, Posbility: 0.0039
Next Token : substring, Posbility: 0.0065
Next Token : sub, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  0, Posbility: 0.0009
Next Token : (, Posbility: 0.0025
Next Token : _, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1-1, Posbility: 0.0000
Next Token : 1., Posbility: 0.0001
Next Token : 1,, Posbility: 0.0003
Next Token : 2, Posbility: 0.0015
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0000
Next Token :  1, Posbility: 0.0003
Next Token :  , Posbility: 0.0067
Next Token :  0, Posbility: 0.0067
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : S, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token :  1, Posbility: 0.0008
Next Token : _, Posbility: 0.0417
Next Token :  , Posbility: 0.1138
Next Token :  0, Posbility: 0.8398
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  ~, Posbility: 0.0004
Next Token :  0, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 1-2, Posbility: 0.0000
Next Token : 1-1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0012
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : int, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0025
Next Token : char, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : minus, Posbility: 0.0009
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token :  , Posbility: 0.0015
Next Token :  in, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : neg, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : zero, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  in, Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  do, Posbility: 0.0006
Next Token :   , Posbility: 0.0009
Next Token :  , Posbility: 0.0019
Next Token : 
, Posbility: 0.0096
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0001
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0085
Next Token :  in, Posbility: 0.0085
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :       , Posbility: 0.0013
Next Token :  , Posbility: 0.0022
Next Token :     , Posbility: 0.0028
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0264
Next Token : if, Posbility: 0.0339
Next Token : s, Posbility: 0.0559
Next Token : String, Posbility: 0.2207
Next Token : let, Posbility: 0.6016
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0137
Next Token :  result, Posbility: 0.0176
Next Token :  new, Posbility: 0.0226
Next Token :  chars, Posbility: 0.0291
Next Token :  , Posbility: 0.7500
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0047
Next Token : remaining, Posbility: 0.0047
Next Token : idx, Posbility: 0.0053
Next Token : r, Posbility: 0.0100
Next Token : s, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0032
Next Token : _, Posbility: 0.0088
Next Token :  =, Posbility: 0.0239
Next Token : 1, Posbility: 0.4805
Next Token : 2, Posbility: 0.4805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0003
Next Token : s, Posbility: 0.0005
Next Token :  in, Posbility: 0.0009
Next Token :  =, Posbility: 0.0371
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : start, Posbility: 0.0060
Next Token : sub, Posbility: 0.0060
Next Token : index, Posbility: 0.0060
Next Token : len, Posbility: 0.0060
Next Token : char, Posbility: 0.8984
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0007
Next Token : 2, Posbility: 0.0011
Next Token :  , Posbility: 0.0014
Next Token :  =, Posbility: 0.0471
Next Token : _, Posbility: 0.9453
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0020
Next Token : sub, Posbility: 0.0053
Next Token : plus, Posbility: 0.0393
Next Token : len, Posbility: 0.1069
Next Token : minus, Posbility: 0.7891
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _0_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0000
Next Token : len, Posbility: 0.0001
Next Token : first, Posbility: 0.0001
Next Token : char, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0085
Next Token : 1, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  chars, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ch, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 0.0012
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0052
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : length, Posbility: 0.0003
Next Token : minus, Posbility: 0.0003
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 0.0010
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0177
Next Token :  , Posbility: 0.0177
Next Token :  String, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : remove, Posbility: 0.0000
Next Token : substr, Posbility: 0.0003
Next Token : substring, Posbility: 0.0004
Next Token : length, Posbility: 0.0007
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0025
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : bytes, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : S, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  1, Posbility: 0.0005
Next Token : _, Posbility: 0.0009
Next Token :  , Posbility: 0.0041
Next Token :  0, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0001
Next Token : (, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1-2, Posbility: 0.0000
Next Token : 1-1, Posbility: 0.0000
Next Token : 1, Posbility: 0.3203
Next Token : 2, Posbility: 0.6797
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ch, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0006
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : es, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : length, Posbility: 0.0002
Next Token : minus, Posbility: 0.0019
Next Token : len, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0003
Next Token :  , Posbility: 0.0024
Next Token : -, Posbility: 0.0024
Next Token :  in, Posbility: 0.0109
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : neg, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0006
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1-1, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0086
Next Token : 1, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : chr, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : charset, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  in, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : LEN, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0022
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 

, Posbility: 0.0179
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :     , Posbility: 0.0008
Next Token :  , Posbility: 0.0046
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0284
Next Token : (, Posbility: 0.0322
Next Token : s, Posbility: 0.0415
Next Token : String, Posbility: 0.1855
Next Token : let, Posbility: 0.6484
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0170
Next Token :  remove, Posbility: 0.0170
Next Token :  new, Posbility: 0.0281
Next Token :  chars, Posbility: 0.0361
Next Token :  , Posbility: 0.7227
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rem, Posbility: 0.0053
Next Token : diff, Posbility: 0.0060
Next Token : r, Posbility: 0.0077
Next Token : common, Posbility: 0.0099
Next Token : s, Posbility: 0.8906
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0056
Next Token : _, Posbility: 0.0151
Next Token :  =, Posbility: 0.0410
Next Token : 2, Posbility: 0.1113
Next Token : 1, Posbility: 0.8242
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0010
Next Token :  in, Posbility: 0.0017
Next Token : s, Posbility: 0.0022
Next Token :  =, Posbility: 0.1177
Next Token : _, Posbility: 0.8672
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : new, Posbility: 0.0123
Next Token : sub, Posbility: 0.0157
Next Token : len, Posbility: 0.0427
Next Token : minus, Posbility: 0.0549
Next Token : char, Posbility: 0.6680
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0024
Next Token : _, Posbility: 0.0179
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0008
Next Token : 2, Posbility: 0.0029
Next Token :  , Posbility: 0.0038
Next Token :  =, Posbility: 0.0593
Next Token : _, Posbility: 0.9258
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0093
Next Token : char, Posbility: 0.0120
Next Token : plus, Posbility: 0.0535
Next Token : len, Posbility: 0.0688
Next Token : minus, Posbility: 0.6523
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0002
Next Token : all, Posbility: 0.0003
Next Token : first, Posbility: 0.0004
Next Token : char, Posbility: 0.0022
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 3, Posbility: 0.0003
Next Token : 1, Posbility: 0.0110
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0002
Next Token : plus, Posbility: 0.0002
Next Token : minus, Posbility: 0.0007
Next Token : len, Posbility: 0.0012
Next Token : char, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0007
Next Token :  in, Posbility: 0.0018
Next Token :  , Posbility: 0.0131
Next Token :  =, Posbility: 0.2637
Next Token : _, Posbility: 0.7148
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0030
Next Token : plus, Posbility: 0.0038
Next Token : char, Posbility: 0.0049
Next Token : minus, Posbility: 0.0172
Next Token : len, Posbility: 0.9414
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0037
Next Token : 2, Posbility: 0.0047
Next Token :  , Posbility: 0.0396
Next Token :  =, Posbility: 0.2930
Next Token : _, Posbility: 0.6211
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0361
Next Token : char, Posbility: 0.0596
Next Token : plus, Posbility: 0.1113
Next Token : minus, Posbility: 0.1260
Next Token : len, Posbility: 0.2080
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 0.0109
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0017
Next Token :  1, Posbility: 0.0017
Next Token : 
, Posbility: 0.0347
Next Token :  , Posbility: 0.2559
Next Token :  String, Posbility: 0.6953
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Extensions, Posbility: 0.0000
Next Token : Ext, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : byte, Posbility: 0.0000
Next Token : sub, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token : _, Posbility: 0.0006
Next Token : (, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token : (, Posbility: 0.0085
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 2, Posbility: 0.0015
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  chars, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : len, Posbility: 0.0003
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : charset, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0003
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 0.0059
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0008
Next Token :  , Posbility: 0.0010
Next Token :     , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0120
Next Token : (, Posbility: 0.0135
Next Token : if, Posbility: 0.0325
Next Token : String, Posbility: 0.0608
Next Token : let, Posbility: 0.8398
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0091
Next Token :  new, Posbility: 0.0150
Next Token :  result, Posbility: 0.0150
Next Token :  chars, Posbility: 0.0193
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0021
Next Token : n, Posbility: 0.0023
Next Token : idx, Posbility: 0.0023
Next Token : r, Posbility: 0.0034
Next Token : s, Posbility: 0.9492
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0012
Next Token : _, Posbility: 0.0090
Next Token :  =, Posbility: 0.0090
Next Token : 1, Posbility: 0.4883
Next Token : 2, Posbility: 0.4883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  chars, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : index, Posbility: 0.0002
Next Token : sub, Posbility: 0.0003
Next Token : minus, Posbility: 0.0009
Next Token : len, Posbility: 0.0025
Next Token : char, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0003
Next Token : char, Posbility: 0.0003
Next Token : plus, Posbility: 0.0024
Next Token : len, Posbility: 0.0178
Next Token : minus, Posbility: 0.9766
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 2, Posbility: 0.0003
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  char, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0002
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : es, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0076
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0002
Next Token : plus, Posbility: 0.0002
Next Token : char, Posbility: 0.0003
Next Token : minus, Posbility: 0.0007
Next Token : len, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.0015
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : strlen, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0015
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : minus, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : CHAR, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : charset, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : sz, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : leg, Posbility: 0.0000
Next Token : LEN, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0125
Next Token : 
, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :  , Posbility: 0.0015
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0179
Next Token : (, Posbility: 0.0231
Next Token : if, Posbility: 0.0430
Next Token : String, Posbility: 0.0913
Next Token : let, Posbility: 0.7617
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  result, Posbility: 0.0165
Next Token :  remove, Posbility: 0.0211
Next Token :  new, Posbility: 0.0271
Next Token :  chars, Posbility: 0.0349
Next Token :  , Posbility: 0.6992
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0052
Next Token : diff, Posbility: 0.0067
Next Token : r, Posbility: 0.0076
Next Token : common, Posbility: 0.0097
Next Token : s, Posbility: 0.8750
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0036
Next Token : _, Posbility: 0.0160
Next Token :  =, Posbility: 0.0265
Next Token : 2, Posbility: 0.0718
Next Token : 1, Posbility: 0.8750
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0007
Next Token :  , Posbility: 0.0009
Next Token : s, Posbility: 0.0018
Next Token :  =, Posbility: 0.0752
Next Token : _, Posbility: 0.9141
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0081
Next Token : sub, Posbility: 0.0134
Next Token : minus, Posbility: 0.0366
Next Token : len, Posbility: 0.0469
Next Token : char, Posbility: 0.7344
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _0_, Posbility: 0.0005
Next Token : 2, Posbility: 0.0013
Next Token :  , Posbility: 0.0016
Next Token :  =, Posbility: 0.0291
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0088
Next Token : sub, Posbility: 0.0088
Next Token : plus, Posbility: 0.0239
Next Token : len, Posbility: 0.0649
Next Token : minus, Posbility: 0.7930
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0002
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0001
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 0.0001
Next Token : char, Posbility: 0.0006
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 1, Posbility: 0.0032
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  chars, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : and, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : minus, Posbility: 0.0002
Next Token : len, Posbility: 0.0009
Next Token : char, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0124
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0003
Next Token : plus, Posbility: 0.0004
Next Token : less, Posbility: 0.0012
Next Token : minus, Posbility: 0.0025
Next Token : len, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0019
Next Token :  +, Posbility: 0.0019
Next Token :  , Posbility: 0.0156
Next Token :  =, Posbility: 0.1147
Next Token : _, Posbility: 0.8477
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : plus, Posbility: 0.0469
Next Token : sub, Posbility: 0.0601
Next Token : char, Posbility: 0.0991
Next Token : minus, Posbility: 0.2100
Next Token : len, Posbility: 0.2383
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0048
Next Token : 2, Posbility: 0.0062
Next Token :  , Posbility: 0.0457
Next Token :  =, Posbility: 0.2051
Next Token : _, Posbility: 0.7148
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : less, Posbility: 0.0295
Next Token : times, Posbility: 0.0378
Next Token : len, Posbility: 0.0625
Next Token : plus, Posbility: 0.1699
Next Token : minus, Posbility: 0.3594
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0007
Next Token : _2_, Posbility: 0.0012
Next Token :  =, Posbility: 0.0025
Next Token : _1_, Posbility: 0.0067
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0009
Next Token : len, Posbility: 0.0019
Next Token : 1, Posbility: 0.0083
Next Token : one, Posbility: 0.0176
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0009
Next Token :  =, Posbility: 0.0012
Next Token : 3, Posbility: 0.0012
Next Token : 2, Posbility: 0.3750
Next Token : 1, Posbility: 0.6211
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0001
Next Token : length, Posbility: 0.0005
Next Token : minus, Posbility: 0.0005
Next Token : len, Posbility: 0.0179
Next Token : char, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _0_, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  in, Posbility: 0.0009
Next Token :  =, Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0009
Next Token : plus, Posbility: 0.0009
Next Token : char, Posbility: 0.0023
Next Token : minus, Posbility: 0.0471
Next Token : len, Posbility: 0.9453
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0018
Next Token : 
, Posbility: 0.0049
Next Token :  , Posbility: 0.0049
Next Token : _, Posbility: 0.2637
Next Token :  =, Posbility: 0.7188
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0013
Next Token :  0, Posbility: 0.0027
Next Token :  String, Posbility: 0.0322
Next Token : 
, Posbility: 0.3066
Next Token :  , Posbility: 0.6484
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0005
Next Token : \, Posbility: 0.0061
Next Token : (, Posbility: 0.0101
Next Token : 
, Posbility: 0.0742
Next Token : s, Posbility: 0.9062
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 1-1, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2, Posbility: 0.0041
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0019
Next Token : char, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0007
Next Token : plus, Posbility: 0.0007
Next Token : char, Posbility: 0.0018
Next Token : len, Posbility: 0.2676
Next Token : minus, Posbility: 0.7266
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Char, Posbility: 0.0000
Next Token : charge, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : с, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : LEN, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  +, Posbility: 0.0019
Next Token :  , Posbility: 0.0179
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0007
Next Token : 
, Posbility: 0.0051
Next Token :  +, Posbility: 0.0051
Next Token : _, Posbility: 0.0178
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : −, Posbility: 0.0001
Next Token : /, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : \, Posbility: 0.0006
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0004
Next Token : s, Posbility: 0.0005
Next Token :  1, Posbility: 0.0007
Next Token : 
, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : \, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token : (, Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 2, Posbility: 0.0006
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ch, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0009
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : S, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : length, Posbility: 0.0003
Next Token : minus, Posbility: 0.0179
Next Token : len, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0018
Next Token :  , Posbility: 0.0018
Next Token :  +, Posbility: 0.0018
Next Token : _, Posbility: 0.2676
Next Token :  in, Posbility: 0.7266
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0007
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0007
Next Token :  , Posbility: 0.0009
Next Token :     , Posbility: 0.0017
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0126
Next Token : s, Posbility: 0.0126
Next Token : if, Posbility: 0.0162
Next Token : String, Posbility: 0.0442
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0038
Next Token :  new, Posbility: 0.0049
Next Token :  chars, Posbility: 0.0049
Next Token :  result, Posbility: 0.0081
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0007
Next Token : n, Posbility: 0.0007
Next Token : remaining, Posbility: 0.0009
Next Token : r, Posbility: 0.0011
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0018
Next Token : _, Posbility: 0.0049
Next Token :  =, Posbility: 0.0049
Next Token : 1, Posbility: 0.2656
Next Token : 2, Posbility: 0.7227
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : a, Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0000
Next Token : sub, Posbility: 0.0001
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 0.0002
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0001
Next Token : less, Posbility: 0.0001
Next Token : plus, Posbility: 0.0003
Next Token : len, Posbility: 0.0019
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : first, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 2, Posbility: 0.0004
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : es, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token : plus, Posbility: 0.0003
Next Token : less, Posbility: 0.0004
Next Token : minus, Posbility: 0.0140
Next Token : len, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0001
Next Token : min, Posbility: 0.0001
Next Token : less, Posbility: 0.0006
Next Token : plus, Posbility: 0.0009
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.4375
Next Token : 2, Posbility: 0.5625
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  String, Posbility: 0.0006
Next Token : 
, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : \, Posbility: 0.0002
Next Token : 
, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0041
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ch, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token :  char, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : len, Posbility: 0.0032
Next Token : minus, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1-1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : charge, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : charset, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : с, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : leg, Posbility: 0.0000
Next Token : LEN, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0000
Next Token : −, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : -, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len -
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0041
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : len, Posbility: 0.0001
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_char
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token : _, Posbility: 0.0013
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0203
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0003
Next Token :       , Posbility: 0.0004
Next Token :     , Posbility: 0.0015
Next Token :  , Posbility: 0.0022
Next Token :   , Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0265
Next Token : (, Posbility: 0.0300
Next Token : if, Posbility: 0.0300
Next Token : String, Posbility: 0.0815
Next Token : let, Posbility: 0.7773
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  result, Posbility: 0.0117
Next Token :  remove, Posbility: 0.0150
Next Token :  new, Posbility: 0.0150
Next Token :  chars, Posbility: 0.0150
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0029
Next Token : rem, Posbility: 0.0033
Next Token : r, Posbility: 0.0043
Next Token : common, Posbility: 0.0043
Next Token : s, Posbility: 0.9219
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0036
Next Token : _, Posbility: 0.0098
Next Token :  =, Posbility: 0.0266
Next Token : 2, Posbility: 0.0723
Next Token : 1, Posbility: 0.8828
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0008
Next Token :  in, Posbility: 0.0008
Next Token : s, Posbility: 0.0016
Next Token :  =, Posbility: 0.0752
Next Token : _, Posbility: 0.9141
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_
 score:False
Error type: noerr
---------------------------
Next Token : new, Posbility: 0.0058
Next Token : str, Posbility: 0.0058
Next Token : len, Posbility: 0.0157
Next Token : minus, Posbility: 0.0157
Next Token : char, Posbility: 0.8633
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_char
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token : 2, Posbility: 0.0009
Next Token :  , Posbility: 0.0010
Next Token :  =, Posbility: 0.0140
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_
 score:False
Error type: noerr
---------------------------
Next Token : char, Posbility: 0.0060
Next Token : sub, Posbility: 0.0060
Next Token : plus, Posbility: 0.0162
Next Token : len, Posbility: 0.0439
Next Token : minus, Posbility: 0.8828
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : len, Posbility: 0.0001
Next Token : char, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 1, Posbility: 0.0067
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0008
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_
 score:False
Error type: noerr
---------------------------
Next Token : ch, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 0.0005
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_char
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars
 score:False
Error type: noerr
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0001
Next Token : length, Posbility: 0.0001
Next Token : less, Posbility: 0.0002
Next Token : minus, Posbility: 0.0008
Next Token : len, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0005
Next Token :  in, Posbility: 0.0009
Next Token :  , Posbility: 0.0024
Next Token :  =, Posbility: 0.0291
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_
 score:False
Error type: noerr
---------------------------
Next Token : char, Posbility: 0.0072
Next Token : less, Posbility: 0.0072
Next Token : plus, Posbility: 0.0072
Next Token : minus, Posbility: 0.1133
Next Token : len, Posbility: 0.8359
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0008
Next Token :  in, Posbility: 0.0009
Next Token :  , Posbility: 0.0056
Next Token :  =, Posbility: 0.0527
Next Token : _, Posbility: 0.9336
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0024
Next Token : char, Posbility: 0.0024
Next Token : len, Posbility: 0.0065
Next Token : plus, Posbility: 0.0065
Next Token : minus, Posbility: 0.9609
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token : _1_, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token : len, Posbility: 0.0001
Next Token : char, Posbility: 0.0001
Next Token : one, Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 3, Posbility: 0.0002
Next Token : 2, Posbility: 0.1191
Next Token : 1, Posbility: 0.8789
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : len, Posbility: 0.0001
Next Token : and, Posbility: 0.0002
Next Token : minus, Posbility: 0.0002
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_char
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : less, Posbility: 0.0001
Next Token : minus, Posbility: 0.0001
Next Token : char, Posbility: 0.0008
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0015
Next Token :  in, Posbility: 0.0020
Next Token :  , Posbility: 0.0145
Next Token :  =, Posbility: 0.1768
Next Token : _, Posbility: 0.7930
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0146
Next Token : plus, Posbility: 0.0242
Next Token : char, Posbility: 0.0513
Next Token : minus, Posbility: 0.1084
Next Token : len, Posbility: 0.6250
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0005
Next Token :  , Posbility: 0.0019
Next Token : 
, Posbility: 0.0045
Next Token : _, Posbility: 0.0066
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len =
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :   , Posbility: 0.0007
Next Token : 
, Posbility: 0.1060
Next Token :  , Posbility: 0.1060
Next Token :  String, Posbility: 0.7852
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.
 score:False
Error type: noerr
---------------------------
Next Token : substring, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : (, Posbility: 0.0006
Next Token :  String, Posbility: 0.0007
Next Token : 
, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length 
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : \, Posbility: 0.0009
Next Token : 
, Posbility: 0.0024
Next Token : (, Posbility: 0.0179
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 2, Posbility: 0.0003
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_
 score:False
Error type: noerr
---------------------------
Next Token : Char, Posbility: 0.0000
Next Token :  char, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_char
 score:False
Error type: noerr
---------------------------
Next Token : S, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_
 score:False
Error type: noerr
---------------------------
Next Token : less, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s
 score:False
Error type: noerr
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_
 score:False
Error type: noerr
---------------------------
Next Token : chr, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_char
 score:False
Error type: noerr
---------------------------
Next Token : с, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars
 score:False
Error type: noerr
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_
 score:False
Error type: noerr
---------------------------
Next Token : LEN, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  in, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_
 score:False
Error type: noerr
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : neg, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 0.0017
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.0035
Next Token :  in, Posbility: 0.0140
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_
 score:False
Error type: noerr
---------------------------
Next Token : plus, Posbility: 0.0000
Next Token : neg, Posbility: 0.0000
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token :  char, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_char
 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars
 score:False
Error type: noerr
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_
 score:False
Error type: noerr
---------------------------
Next Token : den, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0004
Next Token :   , Posbility: 0.0006
Next Token : _, Posbility: 0.0010
Next Token : 
, Posbility: 0.0028
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :     , Posbility: 0.0008
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0080
Next Token : s, Posbility: 0.0091
Next Token : if, Posbility: 0.0103
Next Token : String, Posbility: 0.0280
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let
 score:False
Error type: noerr
---------------------------
Next Token :  new, Posbility: 0.0024
Next Token :  remove, Posbility: 0.0034
Next Token :  chars, Posbility: 0.0039
Next Token :  result, Posbility: 0.0050
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0005
Next Token : idx, Posbility: 0.0005
Next Token : n, Posbility: 0.0007
Next Token : r, Posbility: 0.0012
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0008
Next Token :  =, Posbility: 0.0008
Next Token : 0, Posbility: 0.0008
Next Token : 1, Posbility: 0.1187
Next Token : 2, Posbility: 0.8789
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 0.0001
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_char
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_
 score:False
Error type: noerr
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : plus, Posbility: 0.0002
Next Token : len, Posbility: 0.0007
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_
 score:False
Error type: noerr
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 2, Posbility: 0.0003
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_
 score:False
Error type: noerr
---------------------------
Next Token : Char, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_char
 score:False
Error type: noerr
---------------------------
Next Token : es, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : minus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_
 score:False
Error type: noerr
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0001
Next Token : minus, Posbility: 0.0004
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_
 score:False
Error type: noerr
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : len, Posbility: 0.0001
Next Token : less, Posbility: 0.0002
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 1, Posbility: 0.0179
Next Token : 2, Posbility: 0.9805
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_
 score:False
Error type: noerr
---------------------------
Next Token : character, Posbility: 0.0000
Next Token : chr, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_char
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_
 score:False
Error type: noerr
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : minus, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : String, Posbility: 0.0002
Next Token : 
, Posbility: 0.0012
Next Token :  , Posbility: 0.0012
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : strlen, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 1, Posbility: 0.0015
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_
 score:False
Error type: noerr
---------------------------
Next Token : charset, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token :  char, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_char
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_
 score:False
Error type: noerr
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : minus, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus_
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus_s
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus_s1
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus_s1_
 score:False
Error type: noerr
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : ch, Posbility: 0.0000
Next Token : Char, Posbility: 0.0000
Next Token : character, Posbility: 0.0000
Next Token : char, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus_s1_char
 score:False
Error type: noerr
---------------------------
Next Token : es, Posbility: 0.0000
Next Token : с, Posbility: 0.0000
Next Token : S, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus_s1_chars
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to remove characters from the first string which are present in the second string. *)
let remove_chars s1 s2 =
  let s1_len = String.length s1 in
  let s2_len = String.length s2 in
  let s1_chars = String.sub s1 0 s1_len in
  let s2_chars = String.sub s2 0 s2_len in
  let s1_chars_len = String.length s1_chars in
  let s2_chars_len = String.length s2_chars in
  let s1_chars_len_minus_s2_chars_len = s1_chars_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len = String.sub s1_chars 0 s1_chars_len_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len = String.sub s2_chars 0 s2_chars_len_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len = String.length s1_chars_minus_s2_chars_len in
  let s2_chars_minus_s1_chars_len_len = String.length s2_chars_minus_s1_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len = s1_chars_minus_s2_chars_len_len - s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len = s2_chars_minus_s1_chars_len_len - s2_chars_len in
  let s1_chars_minus_s2_chars_len_len_minus_s1_chars_len_len = String.length s1_chars_minus_s2_chars_len_len_minus_s1_chars_len in
  let s2_chars_minus_s1_chars_len_len_minus_s2_chars_len_len = String.length s2_chars_minus_s1_chars_
 score:False
Error type: noerr
---------------------------


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>