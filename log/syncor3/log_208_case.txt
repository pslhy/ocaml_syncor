code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0294
Next Token :  sum, Posbility: 0.0294
Next Token :  round, Posbility: 0.1914
Next Token :  , Posbility: 0.2461
Next Token :  rec, Posbility: 0.3574
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0123
Next Token :  loop, Posbility: 0.0430
Next Token :  sum, Posbility: 0.0801
Next Token :  , Posbility: 0.3164
Next Token :  round, Posbility: 0.3594
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0260
Next Token : -, Posbility: 0.0378
Next Token :  =, Posbility: 0.0708
Next Token :  , Posbility: 0.1689
Next Token : _, Posbility: 0.5195
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0608
Next Token : numbers, Posbility: 0.1133
Next Token : sum, Posbility: 0.1133
Next Token : and, Posbility: 0.1289
Next Token : list, Posbility: 0.1875
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  num, Posbility: 0.0420
Next Token :  l, Posbility: 0.0693
Next Token : _, Posbility: 0.0889
Next Token :  =, Posbility: 0.1465
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : nums, Posbility: 0.0703
Next Token : lst, Posbility: 0.1021
Next Token : n, Posbility: 0.1309
Next Token : (, Posbility: 0.1689
Next Token : x, Posbility: 0.2451
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0178
Next Token :  i, Posbility: 0.0228
Next Token :  , Posbility: 0.1484
Next Token :  =, Posbility: 0.3574
Next Token : s, Posbility: 0.3574
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0157
Next Token :  sum, Posbility: 0.0203
Next Token :  acc, Posbility: 0.0430
Next Token :  , Posbility: 0.1494
Next Token :  =, Posbility: 0.6719
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0031
Next Token :  function, Posbility: 0.0066
Next Token :  match, Posbility: 0.0427
Next Token :  , Posbility: 0.0796
Next Token : 
, Posbility: 0.8594
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0056
Next Token :    , Posbility: 0.0072
Next Token : 	, Posbility: 0.0093
Next Token :     , Posbility: 0.1279
Next Token :   , Posbility: 0.8359
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0069
Next Token : List, Posbility: 0.0449
Next Token : if, Posbility: 0.1079
Next Token : let, Posbility: 0.2598
Next Token : match, Posbility: 0.5469
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0007
Next Token :  !, Posbility: 0.0008
Next Token : 
, Posbility: 0.0010
Next Token :  String, Posbility: 0.0139
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0027
Next Token : Seq, Posbility: 0.0031
Next Token : (, Posbility: 0.0095
Next Token : List, Posbility: 0.1157
Next Token : x, Posbility: 0.8555
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ::, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  with, Posbility: 0.0015
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token :  @, Posbility: 0.0009
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0018
Next Token :  , Posbility: 0.0034
Next Token :  [, Posbility: 0.0063
Next Token :  [], Posbility: 0.0415
Next Token : 
, Posbility: 0.9414
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0005
Next Token :       , Posbility: 0.0012
Next Token :    , Posbility: 0.0020
Next Token :     , Posbility: 0.0598
Next Token :   , Posbility: 0.9336
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : [, Posbility: 0.0197
Next Token : [], Posbility: 0.0325
Next Token : |, Posbility: 0.9453
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0007
Next Token :  nil, Posbility: 0.0039
Next Token :  , Posbility: 0.0137
Next Token :  [, Posbility: 0.0225
Next Token :  [], Posbility: 0.9570
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0024
Next Token :    , Posbility: 0.0039
Next Token :  |, Posbility: 0.0065
Next Token :  =>, Posbility: 0.0107
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : -, Posbility: 0.0003
Next Token : â†’, Posbility: 0.0003
Next Token : ::, Posbility: 0.0013
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0332
Next Token :  0.0, Posbility: 0.0703
Next Token :  [], Posbility: 0.1162
Next Token :  , Posbility: 0.3164
Next Token :  0, Posbility: 0.4062
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token : d, Posbility: 0.0068
Next Token :  , Posbility: 0.0210
Next Token : ., Posbility: 0.0210
Next Token :  |, Posbility: 0.0347
Next Token : 
, Posbility: 0.8906
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token : |, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : |[, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0056
Next Token :  a, Posbility: 0.0071
Next Token :  [], Posbility: 0.0118
Next Token :  [, Posbility: 0.2090
Next Token :  , Posbility: 0.7266
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0278
Next Token : h, Posbility: 0.0356
Next Token : hd, Posbility: 0.0520
Next Token : _, Posbility: 0.0972
Next Token : x, Posbility: 0.7148
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0014
Next Token : :, Posbility: 0.0171
Next Token : s, Posbility: 0.0598
Next Token : ::, Posbility: 0.3438
Next Token :  , Posbility: 0.5664
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0002
Next Token : ^, Posbility: 0.0002
Next Token : :, Posbility: 0.0032
Next Token : ->, Posbility: 0.0032
Next Token : ::, Posbility: 0.9922
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0022
Next Token :  l, Posbility: 0.0028
Next Token :  [], Posbility: 0.0060
Next Token :  rest, Posbility: 0.0933
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : xl, Posbility: 0.0047
Next Token : tail, Posbility: 0.0099
Next Token : y, Posbility: 0.0237
Next Token : _, Posbility: 0.0503
Next Token : x, Posbility: 0.8906
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0003
Next Token : _, Posbility: 0.0004
Next Token : x, Posbility: 0.0004
Next Token : ', Posbility: 0.0041
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0197
Next Token : _, Posbility: 0.0251
Next Token :  when, Posbility: 0.0322
Next Token : ', Posbility: 0.0532
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : -, Posbility: 0.0002
Next Token : if, Posbility: 0.0008
Next Token : ::, Posbility: 0.0032
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  (1, Posbility: 0.0172
Next Token :  1, Posbility: 0.0364
Next Token :  round, Posbility: 0.1270
Next Token : 
, Posbility: 0.2100
Next Token :  , Posbility: 0.5703
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Round, Posbility: 0.0123
Next Token : 
, Posbility: 0.0139
Next Token : let, Posbility: 0.0703
Next Token : (, Posbility: 0.1914
Next Token : x, Posbility: 0.6680
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : ::, Posbility: 0.0145
Next Token :  , Posbility: 0.0239
Next Token : s, Posbility: 0.0239
Next Token :  *, Posbility: 0.1216
Next Token :  +, Posbility: 0.7930
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0027
Next Token :  ((, Posbility: 0.0027
Next Token :  (1, Posbility: 0.0027
Next Token :  , Posbility: 0.1162
Next Token :  round, Posbility: 0.8594
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  ((, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_
 score:False
Error type: noerr
---------------------------
Next Token : tail, Posbility: 0.0000
Next Token : one, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0003
Next Token : _, Posbility: 0.0007
Next Token : (, Posbility: 0.0229
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : (, Posbility: 0.0229
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0088
Next Token : ), Posbility: 0.0088
Next Token :  *, Posbility: 0.0088
Next Token : 

, Posbility: 0.4805
Next Token : 
, Posbility: 0.4805
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs

 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0106
Next Token : 

, Posbility: 0.0113
Next Token : (, Posbility: 0.0239
Next Token :   , Posbility: 0.0508
Next Token : let, Posbility: 0.7461
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  main, Posbility: 0.0923
Next Token :  total, Posbility: 0.0923
Next Token :  round, Posbility: 0.1187
Next Token :  , Posbility: 0.1953
Next Token :  rec, Posbility: 0.3223
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0219
Next Token :  total, Posbility: 0.0361
Next Token :  sum, Posbility: 0.1260
Next Token :  , Posbility: 0.2676
Next Token :  round, Posbility: 0.3418
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0020
Next Token : 2, Posbility: 0.0037
Next Token :  =, Posbility: 0.0054
Next Token :  , Posbility: 0.0515
Next Token : _, Posbility: 0.9141
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : numbers, Posbility: 0.0210
Next Token : and, Posbility: 0.0270
Next Token : all, Posbility: 0.0347
Next Token : sum, Posbility: 0.1206
Next Token : list, Posbility: 0.4766
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0073
Next Token :  , Posbility: 0.0327
Next Token : 2, Posbility: 0.0786
Next Token : ', Posbility: 0.1006
Next Token : _, Posbility: 0.7461
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0249
Next Token : of, Posbility: 0.0282
Next Token : helper, Posbility: 0.0282
Next Token : length, Posbility: 0.0596
Next Token : sum, Posbility: 0.2676
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : m, Posbility: 0.0071
Next Token : s, Posbility: 0.0283
Next Token :  =, Posbility: 0.0767
Next Token : _, Posbility: 0.0986
Next Token :  , Posbility: 0.7305
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0024
Next Token : lst, Posbility: 0.0024
Next Token : n, Posbility: 0.0057
Next Token : (, Posbility: 0.0083
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0001
Next Token : sl, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 0.0046
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0038
Next Token :  acc, Posbility: 0.0038
Next Token :  sum, Posbility: 0.0104
Next Token :  , Posbility: 0.0283
Next Token :  =, Posbility: 0.9375
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0017
Next Token :  match, Posbility: 0.0022
Next Token :  , Posbility: 0.0435
Next Token :  round, Posbility: 0.0718
Next Token : 
, Posbility: 0.8750
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0004
Next Token : let, Posbility: 0.0008
Next Token :    , Posbility: 0.0010
Next Token :     , Posbility: 0.0067
Next Token :   , Posbility: 0.9883
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0051
Next Token : if, Posbility: 0.0121
Next Token : round, Posbility: 0.0156
Next Token : let, Posbility: 0.1016
Next Token : match, Posbility: 0.8516
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  round, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : List, Posbility: 0.0006
Next Token : (, Posbility: 0.0006
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  with, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  avec, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  with, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  [], Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : {, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : case, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  0, Posbility: 0.0009
Next Token :  [, Posbility: 0.0009
Next Token :  , Posbility: 0.0041
Next Token :  [], Posbility: 0.9922
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  as, Posbility: 0.0005
Next Token :  =>, Posbility: 0.0006
Next Token :  |, Posbility: 0.0006
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0024
Next Token :  [], Posbility: 0.0024
Next Token :  , Posbility: 0.0065
Next Token :  0.0, Posbility: 0.0177
Next Token :  0, Posbility: 0.9648
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
 score:False
Error type: noerr
---------------------------
Next Token :  as, Posbility: 0.0004
Next Token :  |, Posbility: 0.0007
Next Token :  *, Posbility: 0.0007
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :    , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  
 score:False
Error type: noerr
---------------------------
Next Token : //, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0012
Next Token :  [], Posbility: 0.0031
Next Token :  0, Posbility: 0.0040
Next Token :  [, Posbility: 0.0040
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0015
Next Token : (, Posbility: 0.0027
Next Token : head, Posbility: 0.0027
Next Token : _, Posbility: 0.0139
Next Token : x, Posbility: 0.9766
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : 0, Posbility: 0.0002
Next Token : s, Posbility: 0.0019
Next Token : ::, Posbility: 0.0067
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ->, Posbility: 0.0005
Next Token : :, Posbility: 0.0006
Next Token : ::, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  acc, Posbility: 0.0001
Next Token :  [], Posbility: 0.0002
Next Token :  0, Posbility: 0.0002
Next Token :  rest, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : tail, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : y, Posbility: 0.0005
Next Token : _, Posbility: 0.0028
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ', Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  =>, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  when, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : â†’, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : if, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0018
Next Token :  1, Posbility: 0.0048
Next Token : 
, Posbility: 0.0130
Next Token :  round, Posbility: 0.2617
Next Token :  , Posbility: 0.7070
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0008
Next Token : let, Posbility: 0.0009
Next Token : f, Posbility: 0.0009
Next Token : (, Posbility: 0.0330
Next Token : x, Posbility: 0.9609
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x
 score:False
Error type: noerr
---------------------------
Next Token : *, Posbility: 0.0015
Next Token :  , Posbility: 0.0098
Next Token : s, Posbility: 0.0161
Next Token :  *, Posbility: 0.1953
Next Token :  +, Posbility: 0.7734
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x +
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  sum, Posbility: 0.0003
Next Token :  , Posbility: 0.0179
Next Token :  round, Posbility: 0.9805
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round
 score:False
Error type: noerr
---------------------------
Next Token : ing, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : helper, Posbility: 0.0000
Next Token : lists, Posbility: 0.0000
Next Token : sum, Posbility: 0.0000
Next Token : list, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :  sum, Posbility: 0.0005
Next Token : (, Posbility: 0.0012
Next Token :  , Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list_
 score:False
Error type: noerr
---------------------------
Next Token : mean, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : total, Posbility: 0.0000
Next Token : summary, Posbility: 0.0000
Next Token : sum, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list_sum
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :  round, Posbility: 0.0002
Next Token : _, Posbility: 0.0008
Next Token : (, Posbility: 0.0010
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list_sum 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0000
Next Token : tail, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0059
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list_sum x
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list_sum xs
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0135
Next Token :  +, Posbility: 0.0325
Next Token :  *, Posbility: 0.0537
Next Token : 
, Posbility: 0.3086
Next Token : 

, Posbility: 0.5781
---------------------------
code:
 (* Write a function to round every number of a given list of numbers and print the total sum multiplied by the length of the list. *)
let rec round_list xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list xs
let rec round_list_sum xs =
  match xs with
  | [] -> 0
  | x :: xs -> x + round_list_sum xs


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :40.939610958099365

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>