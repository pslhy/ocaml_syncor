code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  contains, Posbility: 0.0850
Next Token :  check, Posbility: 0.0967
Next Token :  , Posbility: 0.1406
Next Token :  is, Posbility: 0.2041
Next Token :  rec, Posbility: 0.2617
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  find, Posbility: 0.0491
Next Token :  contains, Posbility: 0.0491
Next Token :  check, Posbility: 0.1709
Next Token :  , Posbility: 0.1943
Next Token :  is, Posbility: 0.2832
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0014
Next Token : String, Posbility: 0.0063
Next Token : In, Posbility: 0.0104
Next Token : Sub, Posbility: 0.0283
Next Token : _, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : string, Posbility: 0.0354
Next Token : sub, Posbility: 0.0581
Next Token : in, Posbility: 0.1582
Next Token : present, Posbility: 0.1582
Next Token : substring, Posbility: 0.4297
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0184
Next Token : s, Posbility: 0.0184
Next Token :  =, Posbility: 0.1064
Next Token :  , Posbility: 0.3711
Next Token : _, Posbility: 0.3711
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rec, Posbility: 0.0266
Next Token : helper, Posbility: 0.1055
Next Token : list, Posbility: 0.1196
Next Token : in, Posbility: 0.2236
Next Token : of, Posbility: 0.3672
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0209
Next Token :  a, Posbility: 0.0344
Next Token :  , Posbility: 0.0933
Next Token :  =, Posbility: 0.0933
Next Token : _, Posbility: 0.6914
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : any, Posbility: 0.0154
Next Token : all, Posbility: 0.0175
Next Token : string, Posbility: 0.0325
Next Token : strings, Posbility: 0.0474
Next Token : list, Posbility: 0.7383
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0315
Next Token : (, Posbility: 0.0403
Next Token : _, Posbility: 0.1099
Next Token :  =, Posbility: 0.1807
Next Token :  , Posbility: 0.4922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0221
Next Token : lst, Posbility: 0.0601
Next Token : x, Posbility: 0.0679
Next Token : (, Posbility: 0.1846
Next Token : s, Posbility: 0.5039
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0605
Next Token :  =, Posbility: 0.0879
Next Token :  list, Posbility: 0.1279
Next Token :  l, Posbility: 0.2715
Next Token :  , Posbility: 0.2715
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0601
Next Token : s, Posbility: 0.1123
Next Token : x, Posbility: 0.1123
Next Token : ls, Posbility: 0.1270
Next Token : lst, Posbility: 0.1855
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0039
Next Token :  acc, Posbility: 0.0039
Next Token :  ~, Posbility: 0.0050
Next Token :  , Posbility: 0.0094
Next Token :  =, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0039
Next Token :  function, Posbility: 0.0155
Next Token :  match, Posbility: 0.0542
Next Token :  , Posbility: 0.0693
Next Token : 
, Posbility: 0.8477
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0044
Next Token : 	, Posbility: 0.0082
Next Token :    , Posbility: 0.0093
Next Token :     , Posbility: 0.1289
Next Token :   , Posbility: 0.8398
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0091
Next Token : List, Posbility: 0.0762
Next Token : let, Posbility: 0.2070
Next Token : if, Posbility: 0.2656
Next Token : match, Posbility: 0.3867
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token :  [, Posbility: 0.0010
Next Token :  !, Posbility: 0.0058
Next Token :  String, Posbility: 0.1172
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0052
Next Token : (, Posbility: 0.0067
Next Token : s, Posbility: 0.0635
Next Token : List, Posbility: 0.1338
Next Token : lst, Posbility: 0.7695
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0009
Next Token :  [, Posbility: 0.0009
Next Token :  |, Posbility: 0.0009
Next Token : ., Posbility: 0.0025
Next Token :  with, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0021
Next Token :  , Posbility: 0.0031
Next Token :  [, Posbility: 0.0066
Next Token :  [], Posbility: 0.0108
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 	, Posbility: 0.0003
Next Token :       , Posbility: 0.0010
Next Token :    , Posbility: 0.0011
Next Token :     , Posbility: 0.0532
Next Token :   , Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : |[, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : [, Posbility: 0.0156
Next Token : [], Posbility: 0.0177
Next Token : |, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  None, Posbility: 0.0014
Next Token :  nil, Posbility: 0.0129
Next Token :  , Posbility: 0.0275
Next Token :  [, Posbility: 0.0452
Next Token :  [], Posbility: 0.9102
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0039
Next Token :    , Posbility: 0.0064
Next Token :  =>, Posbility: 0.0106
Next Token :  |, Posbility: 0.0106
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : if, Posbility: 0.0002
Next Token : →, Posbility: 0.0005
Next Token : ::, Posbility: 0.0006
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0153
Next Token :  true, Posbility: 0.0417
Next Token :  , Posbility: 0.0417
Next Token :  False, Posbility: 0.0417
Next Token :  false, Posbility: 0.8359
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0010
Next Token :   , Posbility: 0.0019
Next Token :  , Posbility: 0.0065
Next Token :  |, Posbility: 0.0177
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0040
Next Token :  acc, Posbility: 0.0052
Next Token :  [], Posbility: 0.0140
Next Token :  [, Posbility: 0.1709
Next Token :  , Posbility: 0.7656
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : h, Posbility: 0.0513
Next Token : s, Posbility: 0.0581
Next Token : hd, Posbility: 0.1230
Next Token : x, Posbility: 0.2617
Next Token : _, Posbility: 0.3340
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0056
Next Token :   , Posbility: 0.0082
Next Token :  when, Posbility: 0.0417
Next Token : ::, Posbility: 0.0884
Next Token :  , Posbility: 0.8398
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0004
Next Token : →, Posbility: 0.0004
Next Token : if, Posbility: 0.0306
Next Token : ->, Posbility: 0.4238
Next Token : ::, Posbility: 0.5430
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ ::
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0140
Next Token :  [], Posbility: 0.0140
Next Token :  l, Posbility: 0.0231
Next Token :  rest, Posbility: 0.1328
Next Token :  , Posbility: 0.7656
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0747
Next Token : x, Posbility: 0.1396
Next Token : tail, Posbility: 0.1396
Next Token : _, Posbility: 0.2031
Next Token : lst, Posbility: 0.2305
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0889
Next Token : _, Posbility: 0.1143
Next Token : 2, Posbility: 0.1465
Next Token : ', Posbility: 0.2129
Next Token :  , Posbility: 0.2734
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0002
Next Token : -, Posbility: 0.0002
Next Token : if, Posbility: 0.0283
Next Token : ::, Posbility: 0.0320
Next Token : ->, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  string, Posbility: 0.0258
Next Token :  String, Posbility: 0.0258
Next Token :  is, Posbility: 0.0425
Next Token :  , Posbility: 0.3145
Next Token : 
, Posbility: 0.5156
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0047
Next Token :    , Posbility: 0.0098
Next Token :      , Posbility: 0.0344
Next Token :     , Posbility: 0.2539
Next Token :       , Posbility: 0.6914
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0337
Next Token : s, Posbility: 0.0381
Next Token : match, Posbility: 0.0806
Next Token : if, Posbility: 0.3184
Next Token : let, Posbility: 0.4102
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0298
Next Token :  first, Posbility: 0.0298
Next Token :  len, Posbility: 0.0491
Next Token :  rec, Posbility: 0.1709
Next Token :  , Posbility: 0.4648
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0291
Next Token : n, Posbility: 0.0330
Next Token : x, Posbility: 0.0615
Next Token : lst, Posbility: 0.0894
Next Token : s, Posbility: 0.3535
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0894
Next Token : 1, Posbility: 0.1147
Next Token : s, Posbility: 0.1299
Next Token :  =, Posbility: 0.2139
Next Token : _, Posbility: 0.2422
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0376
Next Token :  =, Posbility: 0.0483
Next Token : first, Posbility: 0.0623
Next Token : length, Posbility: 0.0796
Next Token : len, Posbility: 0.1914
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  :=, Posbility: 0.0004
Next Token :   , Posbility: 0.0005
Next Token : _, Posbility: 0.0051
Next Token : ,, Posbility: 0.0140
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0003
Next Token :  S, Posbility: 0.0021
Next Token :  string, Posbility: 0.0417
Next Token :  , Posbility: 0.1138
Next Token :  String, Posbility: 0.8398
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Library, Posbility: 0.0004
Next Token : (, Posbility: 0.0004
Next Token : _, Posbility: 0.0019
Next Token : Length, Posbility: 0.0025
Next Token : ., Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : strlen, Posbility: 0.0003
Next Token : len, Posbility: 0.0051
Next Token : get, Posbility: 0.0065
Next Token : Length, Posbility: 0.0227
Next Token : length, Posbility: 0.9648
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  str, Posbility: 0.0002
Next Token :  in, Posbility: 0.0005
Next Token : (, Posbility: 0.0017
Next Token : _, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : @@, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : lst, Posbility: 0.0006
Next Token : (, Posbility: 0.0019
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0007
Next Token : ;, Posbility: 0.0007
Next Token : 
, Posbility: 0.0097
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 

, Posbility: 0.0013
Next Token :  , Posbility: 0.0025
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0005
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0019
Next Token :      , Posbility: 0.0259
Next Token :       , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0349
Next Token : List, Posbility: 0.0508
Next Token : match, Posbility: 0.0649
Next Token : if, Posbility: 0.1768
Next Token : let, Posbility: 0.6172
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0292
Next Token :  l, Posbility: 0.0481
Next Token :  rec, Posbility: 0.0618
Next Token :  len, Posbility: 0.0796
Next Token :  , Posbility: 0.5859
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : longest, Posbility: 0.0121
Next Token : t, Posbility: 0.0137
Next Token : n, Posbility: 0.0137
Next Token : s, Posbility: 0.0791
Next Token : lst, Posbility: 0.7500
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0007
Next Token : 1, Posbility: 0.0012
Next Token : 0, Posbility: 0.0028
Next Token :  =, Posbility: 0.0052
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : last, Posbility: 0.0024
Next Token : head, Posbility: 0.0024
Next Token : length, Posbility: 0.0024
Next Token : first, Posbility: 0.0024
Next Token : len, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token : s, Posbility: 0.0017
Next Token : _, Posbility: 0.0019
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0008
Next Token :  list, Posbility: 0.0022
Next Token : 
, Posbility: 0.0058
Next Token :  String, Posbility: 0.1172
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0060
Next Token : Seq, Posbility: 0.0060
Next Token : length, Posbility: 0.0099
Next Token : Array, Posbility: 0.0728
Next Token : List, Posbility: 0.8867
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Length, Posbility: 0.0000
Next Token : _1., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0004
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0005
Next Token : size, Posbility: 0.0005
Next Token : fold, Posbility: 0.0010
Next Token : count, Posbility: 0.0013
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ln, Posbility: 0.0000
Next Token : ls, Posbility: 0.0000
Next Token : (, Posbility: 0.0009
Next Token : s, Posbility: 0.0012
Next Token : lst, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0002
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 0.0004
Next Token : 
, Posbility: 0.0009
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0076
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0005
Next Token :           , Posbility: 0.0008
Next Token :         , Posbility: 0.0044
Next Token :      , Posbility: 0.0371
Next Token :       , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0317
Next Token : match, Posbility: 0.0317
Next Token : String, Posbility: 0.0359
Next Token : let, Posbility: 0.3867
Next Token : if, Posbility: 0.4375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0023
Next Token :  string, Posbility: 0.0026
Next Token : 
, Posbility: 0.0030
Next Token :  String, Posbility: 0.0525
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0003
Next Token : List, Posbility: 0.0021
Next Token : (, Posbility: 0.0417
Next Token : lst, Posbility: 0.1133
Next Token : s, Posbility: 0.8359
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0006
Next Token :  <=, Posbility: 0.0017
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : eq, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0114
Next Token :  >=, Posbility: 0.0835
Next Token :  =, Posbility: 0.1377
Next Token :  <=, Posbility: 0.1377
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : /, Posbility: 0.0008
Next Token : ≤, Posbility: 0.0017
Next Token : -, Posbility: 0.0045
Next Token : >, Posbility: 0.3184
Next Token : <, Posbility: 0.6719
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0003
Next Token :  0, Posbility: 0.0013
Next Token :  1, Posbility: 0.0159
Next Token : >, Posbility: 0.2188
Next Token :  , Posbility: 0.7617
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0005
Next Token : List, Posbility: 0.0010
Next Token : (, Posbility: 0.0015
Next Token : 2, Posbility: 0.0041
Next Token : lst, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : [, Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token : [0], Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0081
Next Token :  &&, Posbility: 0.0104
Next Token :  , Posbility: 0.0134
Next Token : 
, Posbility: 0.0221
Next Token :  then, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0405
Next Token :  , Posbility: 0.0669
Next Token :  is, Posbility: 0.1104
Next Token :  false, Posbility: 0.3848
Next Token : 
, Posbility: 0.3848
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0029
Next Token :           , Posbility: 0.0591
Next Token :          , Posbility: 0.0591
Next Token :        , Posbility: 0.4375
Next Token :         , Posbility: 0.4375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0903
Next Token : lst, Posbility: 0.0903
Next Token : return, Posbility: 0.1025
Next Token : s, Posbility: 0.1157
Next Token : let, Posbility: 0.3145
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0260
Next Token :  i, Posbility: 0.0334
Next Token :  len, Posbility: 0.0486
Next Token :  rec, Posbility: 0.0908
Next Token :  , Posbility: 0.5234
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0276
Next Token : n, Posbility: 0.0312
Next Token : (, Posbility: 0.0752
Next Token : lst, Posbility: 0.0850
Next Token : s, Posbility: 0.3359
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0198
Next Token : 0, Posbility: 0.0371
Next Token : 1, Posbility: 0.0610
Next Token :  =, Posbility: 0.0786
Next Token : _, Posbility: 0.7422
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tail, Posbility: 0.0491
Next Token : start, Posbility: 0.0557
Next Token : len, Posbility: 0.0557
Next Token : first, Posbility: 0.0718
Next Token : sub, Posbility: 0.0718
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : seq, Posbility: 0.0270
Next Token : s, Posbility: 0.0732
Next Token : list, Posbility: 0.0732
Next Token : _, Posbility: 0.1992
Next Token :  =, Posbility: 0.5430
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0020
Next Token :  0, Posbility: 0.0056
Next Token : 
, Posbility: 0.0410
Next Token :  , Posbility: 0.1118
Next Token :  String, Posbility: 0.8242
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : s, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0014
Next Token : slice, Posbility: 0.0019
Next Token : substr, Posbility: 0.0083
Next Token : substring, Posbility: 0.0137
Next Token : sub, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0018
Next Token : s, Posbility: 0.0050
Next Token :  0, Posbility: 0.0064
Next Token : _, Posbility: 0.0287
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : (0,, Posbility: 0.0000
Next Token : (, Posbility: 0.0025
Next Token : lst, Posbility: 0.0041
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0021
Next Token :  ~, Posbility: 0.0058
Next Token :  1, Posbility: 0.0058
Next Token :  , Posbility: 0.1167
Next Token :  0, Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0004
Next Token :  [, Posbility: 0.0007
Next Token :  ~, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0004
Next Token : min, Posbility: 0.0010
Next Token : lst, Posbility: 0.1543
Next Token : (, Posbility: 0.4199
Next Token : s, Posbility: 0.4199
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  +, Posbility: 0.0002
Next Token :  in, Posbility: 0.0002
Next Token : ., Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : idx, Posbility: 0.0000
Next Token : pos, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0021
Next Token : -1, Posbility: 0.0074
Next Token :  of, Posbility: 0.0095
Next Token :  , Posbility: 0.1157
Next Token :  in, Posbility: 0.8555
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0002
Next Token : 

, Posbility: 0.0004
Next Token :   , Posbility: 0.0005
Next Token :  , Posbility: 0.0032
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0008
Next Token :           , Posbility: 0.0012
Next Token :          , Posbility: 0.0012
Next Token :        , Posbility: 0.1816
Next Token :         , Posbility: 0.8125
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0369
Next Token : s, Posbility: 0.0471
Next Token : if, Posbility: 0.0776
Next Token : List, Posbility: 0.2715
Next Token : let, Posbility: 0.4473
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0074
Next Token :  i, Posbility: 0.0096
Next Token :  sub, Posbility: 0.0096
Next Token :  rec, Posbility: 0.0260
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0034
Next Token : t, Posbility: 0.0034
Next Token : x, Posbility: 0.0057
Next Token : s, Posbility: 0.0693
Next Token : lst, Posbility: 0.8438
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0006
Next Token : 1, Posbility: 0.0007
Next Token : 0, Posbility: 0.0024
Next Token :  =, Posbility: 0.0096
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : prefix, Posbility: 0.0058
Next Token : start, Posbility: 0.0096
Next Token : first, Posbility: 0.0159
Next Token : head, Posbility: 0.0261
Next Token : sub, Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0014
Next Token :  , Posbility: 0.0038
Next Token : _, Posbility: 0.0282
Next Token : s, Posbility: 0.0282
Next Token :  =, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  is, Posbility: 0.0018
Next Token : 
, Posbility: 0.0131
Next Token :  , Posbility: 0.2637
Next Token :  String, Posbility: 0.7148
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : get, Posbility: 0.0002
Next Token : map, Posbility: 0.0003
Next Token : substring, Posbility: 0.0009
Next Token : take, Posbility: 0.0012
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0010
Next Token :  ~, Posbility: 0.0013
Next Token : _, Posbility: 0.0040
Next Token :  0, Posbility: 0.0085
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : List, Posbility: 0.0061
Next Token : (, Posbility: 0.0449
Next Token : s, Posbility: 0.0449
Next Token : lst, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0004
Next Token : s, Posbility: 0.0006
Next Token :  , Posbility: 0.0031
Next Token : _, Posbility: 0.0371
Next Token :  0, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token :  String, Posbility: 0.0005
Next Token :  0, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0012
Next Token : List, Posbility: 0.0033
Next Token : (, Posbility: 0.0090
Next Token : lst, Posbility: 0.4922
Next Token : s, Posbility: 0.4922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : pos, Posbility: 0.0000
Next Token : length, Posbility: 0.0003
Next Token : sub, Posbility: 0.0025
Next Token : len, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 0.0025
Next Token :  =, Posbility: 0.0052
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :  is, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :             , Posbility: 0.0009
Next Token :           , Posbility: 0.0018
Next Token :          , Posbility: 0.0023
Next Token :        , Posbility: 0.4336
Next Token :         , Posbility: 0.5586
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0605
Next Token : lst, Posbility: 0.0605
Next Token : if, Posbility: 0.1455
Next Token : List, Posbility: 0.1650
Next Token : let, Posbility: 0.3477
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0192
Next Token :  res, Posbility: 0.0217
Next Token :  sub, Posbility: 0.0405
Next Token :  rec, Posbility: 0.2061
Next Token :  , Posbility: 0.5586
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : common, Posbility: 0.0125
Next Token : x, Posbility: 0.0160
Next Token : r, Posbility: 0.0264
Next Token : lst, Posbility: 0.2832
Next Token : s, Posbility: 0.3633
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0089
Next Token : 1, Posbility: 0.0100
Next Token : s, Posbility: 0.0165
Next Token :  =, Posbility: 0.0449
Next Token : _, Posbility: 0.8984
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0272
Next Token : lst, Posbility: 0.0309
Next Token : tail, Posbility: 0.0654
Next Token : rest, Posbility: 0.2275
Next Token : sub, Posbility: 0.2930
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0134
Next Token : s, Posbility: 0.0134
Next Token : 2, Posbility: 0.0364
Next Token :  =, Posbility: 0.1631
Next Token : _, Posbility: 0.7344
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0305
Next Token : list, Posbility: 0.0391
Next Token : sub, Posbility: 0.0391
Next Token : lst, Posbility: 0.2891
Next Token : len, Posbility: 0.2891
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token : ,, Posbility: 0.0008
Next Token : _, Posbility: 0.0036
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :  is, Posbility: 0.0008
Next Token : 
, Posbility: 0.0059
Next Token :  , Posbility: 0.1177
Next Token :  String, Posbility: 0.8711
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Length, Posbility: 0.0000
Next Token : Ext, Posbility: 0.0000
Next Token : Extensions, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : index, Posbility: 0.0001
Next Token : compare, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ~, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : lst, Posbility: 0.0025
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0010
Next Token :  in, Posbility: 0.0012
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  do, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0003
Next Token :       , Posbility: 0.0003
Next Token :           , Posbility: 0.0009
Next Token :        , Posbility: 0.0474
Next Token :         , Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0266
Next Token : List, Posbility: 0.0266
Next Token : s, Posbility: 0.0439
Next Token : if, Posbility: 0.3242
Next Token : let, Posbility: 0.5352
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0048
Next Token :  i, Posbility: 0.0062
Next Token :  sub, Posbility: 0.0079
Next Token :  rec, Posbility: 0.0079
Next Token :  , Posbility: 0.9219
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.0022
Next Token : m, Posbility: 0.0022
Next Token : s, Posbility: 0.0449
Next Token : lst, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0003
Next Token : idx, Posbility: 0.0009
Next Token : start, Posbility: 0.0024
Next Token : len, Posbility: 0.0066
Next Token : sub, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0003
Next Token : idx, Posbility: 0.0005
Next Token : start, Posbility: 0.0009
Next Token : pos, Posbility: 0.0009
Next Token : len, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : _, Posbility: 0.0004
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 0.1475
Next Token :  String, Posbility: 0.8516
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : strlen, Posbility: 0.0000
Next Token : Length, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : ls, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0012
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  do, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0046
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :             , Posbility: 0.0008
Next Token :          , Posbility: 0.0008
Next Token :           , Posbility: 0.0022
Next Token :        , Posbility: 0.1187
Next Token :         , Posbility: 0.8750
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0204
Next Token : (, Posbility: 0.0337
Next Token : s, Posbility: 0.0713
Next Token : let, Posbility: 0.1504
Next Token : if, Posbility: 0.6758
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0006
Next Token : 
, Posbility: 0.0019
Next Token :  not, Posbility: 0.0024
Next Token :  String, Posbility: 0.0036
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0003
Next Token : List, Posbility: 0.0008
Next Token : (, Posbility: 0.0157
Next Token : lst, Posbility: 0.1167
Next Token : s, Posbility: 0.8633
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  sub, Posbility: 0.0002
Next Token :  =, Posbility: 0.0004
Next Token :  ==, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0179
Next Token : sub, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ===, Posbility: 0.0005
Next Token :  , Posbility: 0.0031
Next Token :  ==, Posbility: 0.0040
Next Token :  =, Posbility: 0.0109
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0000
Next Token : eq, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0347
Next Token :  <=, Posbility: 0.0347
Next Token :  >=, Posbility: 0.0571
Next Token :  =, Posbility: 0.1553
Next Token :  , Posbility: 0.6953
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ≥, Posbility: 0.0002
Next Token : -, Posbility: 0.0005
Next Token : ≤, Posbility: 0.0005
Next Token : >, Posbility: 0.4375
Next Token : <, Posbility: 0.5625
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  1, Posbility: 0.0016
Next Token : >, Posbility: 0.0293
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0032
Next Token : lst, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0067
Next Token : sub, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  else, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  ||, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Len, Posbility: 0.0000
Next Token : then, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ||, Posbility: 0.0019
Next Token : 
, Posbility: 0.0031
Next Token :  , Posbility: 0.0051
Next Token :  &&, Posbility: 0.0108
Next Token :  then, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  true, Posbility: 0.0146
Next Token :  , Posbility: 0.0309
Next Token :  false, Posbility: 0.0654
Next Token :  is, Posbility: 0.0840
Next Token : 
, Posbility: 0.7969
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :              , Posbility: 0.0011
Next Token :             , Posbility: 0.0114
Next Token :            , Posbility: 0.0146
Next Token :          , Posbility: 0.4844
Next Token :           , Posbility: 0.4844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0693
Next Token : s, Posbility: 0.0693
Next Token : if, Posbility: 0.0786
Next Token : List, Posbility: 0.0786
Next Token : let, Posbility: 0.5117
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0157
Next Token :  new, Posbility: 0.0203
Next Token :  sub, Posbility: 0.0549
Next Token :  rec, Posbility: 0.0908
Next Token :  , Posbility: 0.6719
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0089
Next Token : r, Posbility: 0.0101
Next Token : (, Posbility: 0.0130
Next Token : lst, Posbility: 0.0747
Next Token : s, Posbility: 0.7070
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0050
Next Token : 2, Posbility: 0.0050
Next Token : 1, Posbility: 0.0064
Next Token :  =, Posbility: 0.0199
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : left, Posbility: 0.0110
Next Token : start, Posbility: 0.0125
Next Token : tail, Posbility: 0.0339
Next Token : rest, Posbility: 0.1187
Next Token : sub, Posbility: 0.6016
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0033
Next Token : 1, Posbility: 0.0055
Next Token : 2, Posbility: 0.0408
Next Token :  =, Posbility: 0.1108
Next Token : _, Posbility: 0.8203
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : lst, Posbility: 0.0294
Next Token : len, Posbility: 0.0378
Next Token : tail, Posbility: 0.0486
Next Token : rest, Posbility: 0.0623
Next Token : sub, Posbility: 0.5898
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sub, Posbility: 0.0008
Next Token : sub, Posbility: 0.0010
Next Token :  , Posbility: 0.0019
Next Token : _, Posbility: 0.0123
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : String, Posbility: 0.0002
Next Token :  , Posbility: 0.0040
Next Token : 
, Posbility: 0.0179
Next Token :  String, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : slice, Posbility: 0.0001
Next Token : take, Posbility: 0.0001
Next Token : substring, Posbility: 0.0009
Next Token : substr, Posbility: 0.0009
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token : 
, Posbility: 0.0012
Next Token : _, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : lst, Posbility: 0.0009
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  sub, Posbility: 0.0064
Next Token :  , Posbility: 0.0176
Next Token :  0, Posbility: 0.0176
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0007
Next Token : _, Posbility: 0.0048
Next Token :  1, Posbility: 0.0131
Next Token :  , Posbility: 0.2637
Next Token :  0, Posbility: 0.7148
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  0, Posbility: 0.0002
Next Token :  ~, Posbility: 0.0002
Next Token :  1, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0001
Next Token : min, Posbility: 0.0003
Next Token : (, Posbility: 0.0059
Next Token : lst, Posbility: 0.1182
Next Token : s, Posbility: 0.8750
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  sub, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : part, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : len, Posbility: 0.0041
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : ., Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : pos, Posbility: 0.0000
Next Token : ln, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token : -1, Posbility: 0.0005
Next Token :  , Posbility: 0.0015
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0007
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :              , Posbility: 0.0003
Next Token :               , Posbility: 0.0004
Next Token :             , Posbility: 0.0022
Next Token :          , Posbility: 0.0159
Next Token :           , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0139
Next Token : String, Posbility: 0.0293
Next Token : List, Posbility: 0.0620
Next Token : if, Posbility: 0.1021
Next Token : let, Posbility: 0.7539
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  res, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0019
Next Token :  is, Posbility: 0.0021
Next Token :  sub, Posbility: 0.0031
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0003
Next Token : _, Posbility: 0.0008
Next Token : (, Posbility: 0.0008
Next Token : s, Posbility: 0.1177
Next Token : lst, Posbility: 0.8711
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : 0, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rest, Posbility: 0.0001
Next Token : start, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : len, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  sub, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0001
Next Token : start, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : len, Posbility: 0.0003
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  len, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : _, Posbility: 0.0140
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.0025
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : slice, Posbility: 0.0000
Next Token : take, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0041
Next Token : lst, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : _0_, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  0, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : subset, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 0.0007
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : lst, Posbility: 0.1191
Next Token : s, Posbility: 0.8789
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sup, Posbility: 0.0000
Next Token : len, Posbility: 0.0004
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : loc, Posbility: 0.0000
Next Token : ln, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0004
Next Token :            , Posbility: 0.0007
Next Token :             , Posbility: 0.0010
Next Token :          , Posbility: 0.2676
Next Token :           , Posbility: 0.7305
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0608
Next Token : List, Posbility: 0.0688
Next Token : s, Posbility: 0.0884
Next Token : let, Posbility: 0.2412
Next Token : if, Posbility: 0.3965
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !, Posbility: 0.0054
Next Token :  not, Posbility: 0.0188
Next Token :  is, Posbility: 0.0242
Next Token :  String, Posbility: 0.1387
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Str, Posbility: 0.0056
Next Token : List, Posbility: 0.0417
Next Token : (, Posbility: 0.0417
Next Token : lst, Posbility: 0.0417
Next Token : s, Posbility: 0.8398
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  !=, Posbility: 0.0002
Next Token :  sub, Posbility: 0.0003
Next Token :  ==, Posbility: 0.0012
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : eq, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : len, Posbility: 0.0015
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0019
Next Token :  ===, Posbility: 0.0031
Next Token :  ==, Posbility: 0.0137
Next Token :  =, Posbility: 0.0176
Next Token : _, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0001
Next Token : length, Posbility: 0.0001
Next Token : len, Posbility: 0.0474
Next Token : sub, Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ~, Posbility: 0.0058
Next Token :  ===, Posbility: 0.0066
Next Token :  ==, Posbility: 0.1025
Next Token :  , Posbility: 0.2793
Next Token :  =, Posbility: 0.5898
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0005
Next Token : ~, Posbility: 0.0006
Next Token :  "", Posbility: 0.0010
Next Token : <, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : st, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 0.0002
Next Token : s, Posbility: 0.0110
Next Token : lst, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0001
Next Token :  then, Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0014
Next Token : 
, Posbility: 0.0031
Next Token :  and, Posbility: 0.0031
Next Token :  &&, Posbility: 0.0289
Next Token :  then, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0031
Next Token :  , Posbility: 0.0293
Next Token :  is, Posbility: 0.1021
Next Token :  true, Posbility: 0.1021
Next Token : 
, Posbility: 0.7539
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :               , Posbility: 0.0012
Next Token :           , Posbility: 0.0012
Next Token :              , Posbility: 0.0033
Next Token :            , Posbility: 0.4961
Next Token :             , Posbility: 0.4961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0605
Next Token : s, Posbility: 0.0776
Next Token : if, Posbility: 0.1455
Next Token : return, Posbility: 0.1455
Next Token : let, Posbility: 0.3945
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rest, Posbility: 0.0143
Next Token :  sub, Posbility: 0.0237
Next Token :  len, Posbility: 0.0304
Next Token :  rec, Posbility: 0.1060
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0095
Next Token : tail, Posbility: 0.0138
Next Token : _, Posbility: 0.0156
Next Token : lst, Posbility: 0.1021
Next Token : s, Posbility: 0.7539
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0021
Next Token : 2, Posbility: 0.0024
Next Token : 1, Posbility: 0.0030
Next Token :  =, Posbility: 0.0327
Next Token : _, Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0123
Next Token : len, Posbility: 0.0260
Next Token : tail, Posbility: 0.0260
Next Token : rest, Posbility: 0.1494
Next Token : sub, Posbility: 0.6719
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0014
Next Token : sub, Posbility: 0.0014
Next Token : 2, Posbility: 0.0104
Next Token :  =, Posbility: 0.0466
Next Token : _, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : next, Posbility: 0.0056
Next Token : end, Posbility: 0.0153
Next Token : len, Posbility: 0.0415
Next Token : rest, Posbility: 0.0415
Next Token : sub, Posbility: 0.8320
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0014
Next Token : 1, Posbility: 0.0022
Next Token : 2, Posbility: 0.0165
Next Token :  =, Posbility: 0.0742
Next Token : _, Posbility: 0.9023
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : next, Posbility: 0.0023
Next Token : end, Posbility: 0.0064
Next Token : rest, Posbility: 0.0064
Next Token : sub, Posbility: 0.0173
Next Token : len, Posbility: 0.9492
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0012
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.0067
Next Token :  String, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : Ext, Posbility: 0.0000
Next Token : Length, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Length, Posbility: 0.0000
Next Token : strlen, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Str, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0004
Next Token : lst, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0001
Next Token :  in, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : su, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  in, Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : ;, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :                 , Posbility: 0.0001
Next Token :               , Posbility: 0.0003
Next Token :              , Posbility: 0.0003
Next Token :            , Posbility: 0.0179
Next Token :             , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0088
Next Token : return, Posbility: 0.0088
Next Token : String, Posbility: 0.0088
Next Token : if, Posbility: 0.4805
Next Token : let, Posbility: 0.4805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0031
Next Token :  sub, Posbility: 0.0039
Next Token :  len, Posbility: 0.0039
Next Token :  i, Posbility: 0.0050
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0021
Next Token : n, Posbility: 0.0021
Next Token : end, Posbility: 0.0021
Next Token : s, Posbility: 0.1157
Next Token : lst, Posbility: 0.8555
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : start, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : len, Posbility: 0.0067
Next Token : sub, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sub, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : i, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : len, Posbility: 0.0179
Next Token : sub, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : pos, Posbility: 0.0001
Next Token : length, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : sub, Posbility: 0.0003
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : String, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0007
Next Token :  , Posbility: 0.0229
Next Token :  String, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0000
Next Token : Length, Posbility: 0.0000
Next Token : strlen, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  list, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ls, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0009
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :             , Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 

, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :                 , Posbility: 0.0001
Next Token :               , Posbility: 0.0003
Next Token :              , Posbility: 0.0003
Next Token :            , Posbility: 0.0474
Next Token :             , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0152
Next Token : return, Posbility: 0.0152
Next Token : s, Posbility: 0.0413
Next Token : let, Posbility: 0.0684
Next Token : if, Posbility: 0.8320
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0003
Next Token :  String, Posbility: 0.0007
Next Token :  0, Posbility: 0.0007
Next Token : 
, Posbility: 0.0032
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : st, Posbility: 0.0001
Next Token : (, Posbility: 0.0176
Next Token : lst, Posbility: 0.0176
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  <=, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0041
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0179
Next Token : sub, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 0.0007
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : le, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0305
Next Token :  <=, Posbility: 0.0305
Next Token :  >=, Posbility: 0.0830
Next Token :  =, Posbility: 0.2256
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : /, Posbility: 0.0002
Next Token : -, Posbility: 0.0013
Next Token : >, Posbility: 0.1191
Next Token : <, Posbility: 0.8789
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len <
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  1, Posbility: 0.0002
Next Token : >, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0005
Next Token : s, Posbility: 0.0041
Next Token : lst, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ?, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : sum, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0086
Next Token : sub, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : LEN, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0005
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 0.0019
Next Token :  &&, Posbility: 0.0019
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  false, Posbility: 0.0104
Next Token :  , Posbility: 0.0151
Next Token :  is, Posbility: 0.0171
Next Token :  true, Posbility: 0.0171
Next Token : 
, Posbility: 0.9336
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :             , Posbility: 0.0006
Next Token :                 , Posbility: 0.0019
Next Token :                , Posbility: 0.0024
Next Token :              , Posbility: 0.4668
Next Token :               , Posbility: 0.5273
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0413
Next Token : List, Posbility: 0.0413
Next Token : if, Posbility: 0.0684
Next Token : return, Posbility: 0.0771
Next Token : let, Posbility: 0.6484
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  new, Posbility: 0.0075
Next Token :  res, Posbility: 0.0075
Next Token :  sub, Posbility: 0.0124
Next Token :  rec, Posbility: 0.0432
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0037
Next Token : n, Posbility: 0.0037
Next Token : _, Posbility: 0.0061
Next Token : lst, Posbility: 0.0215
Next Token : s, Posbility: 0.9102
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0012
Next Token : 1, Posbility: 0.0015
Next Token : s, Posbility: 0.0017
Next Token :  =, Posbility: 0.0123
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0023
Next Token : start, Posbility: 0.0023
Next Token : len, Posbility: 0.0064
Next Token : rest, Posbility: 0.0173
Next Token : sub, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0004
Next Token : 1, Posbility: 0.0004
Next Token : 2, Posbility: 0.0024
Next Token :  =, Posbility: 0.0109
Next Token : _, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0009
Next Token : last, Posbility: 0.0009
Next Token : len, Posbility: 0.0024
Next Token : rest, Posbility: 0.0066
Next Token : sub, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0007
Next Token : 1, Posbility: 0.0010
Next Token : 2, Posbility: 0.0051
Next Token :  =, Posbility: 0.0178
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0009
Next Token : end, Posbility: 0.0009
Next Token : len, Posbility: 0.0009
Next Token : rest, Posbility: 0.0024
Next Token : sub, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sub, Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 0.0046
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : String, Posbility: 0.0002
Next Token :  , Posbility: 0.0019
Next Token : 
, Posbility: 0.0371
Next Token :  String, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : slice, Posbility: 0.0000
Next Token : substring, Posbility: 0.0003
Next Token : substr, Posbility: 0.0004
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0008
Next Token : 
, Posbility: 0.0059
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : lst, Posbility: 0.0003
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  sub, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  0, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : substr, Posbility: 0.0000
Next Token : subset, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0012
Next Token : _, Posbility: 0.0019
Next Token : 
, Posbility: 0.0040
Next Token :  , Posbility: 0.0040
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  ~, Posbility: 0.0001
Next Token : 
, Posbility: 0.0028
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0003
Next Token : (, Posbility: 0.0015
Next Token : lst, Posbility: 0.0229
Next Token : s, Posbility: 0.9766
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sup, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0006
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ln, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 0.0041
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :                   , Posbility: 0.0001
Next Token :                , Posbility: 0.0002
Next Token :                 , Posbility: 0.0025
Next Token :              , Posbility: 0.0036
Next Token :               , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : return, Posbility: 0.0009
Next Token : String, Posbility: 0.0024
Next Token : List, Posbility: 0.0024
Next Token : if, Posbility: 0.0178
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : end, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : s, Posbility: 0.0085
Next Token : lst, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : len, Posbility: 0.0007
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0028
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : String, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 0.0041
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : slice, Posbility: 0.0000
Next Token : substr, Posbility: 0.0001
Next Token : substring, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0010
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  0, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : subset, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0005
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : lst, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : su, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sup, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : sup, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ln, Posbility: 0.0000
Next Token : Len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0010
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :               , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in

 score:False
Error type: noerr
---------------------------
Next Token :                   , Posbility: 0.0000
Next Token :                , Posbility: 0.0001
Next Token :                 , Posbility: 0.0009
Next Token :              , Posbility: 0.0474
Next Token :               , Posbility: 0.9531
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              
 score:False
Error type: noerr
---------------------------
Next Token : return, Posbility: 0.0121
Next Token : (, Posbility: 0.0155
Next Token : let, Posbility: 0.0327
Next Token : s, Posbility: 0.0693
Next Token : if, Posbility: 0.8438
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0013
Next Token :  not, Posbility: 0.0015
Next Token : 
, Posbility: 0.0017
Next Token :  String, Posbility: 0.0046
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if 
 score:False
Error type: noerr
---------------------------
Next Token : Str, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : lst, Posbility: 0.0025
Next Token : (, Posbility: 0.0041
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  !=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  !=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0001
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0002
Next Token :  !=, Posbility: 0.0002
Next Token :  ==, Posbility: 0.0009
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : substr, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : len, Posbility: 0.0004
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0016
Next Token :  !=, Posbility: 0.0023
Next Token :  , Posbility: 0.0105
Next Token :  ==, Posbility: 0.0366
Next Token :  =, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = 
 score:False
Error type: noerr
---------------------------
Next Token : ls, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : s, Posbility: 0.0005
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub
 score:False
Error type: noerr
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  then, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_
 score:False
Error type: noerr
---------------------------
Next Token : substring, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0003
Next Token :  and, Posbility: 0.0004
Next Token : 
, Posbility: 0.0025
Next Token :  &&, Posbility: 0.0025
Next Token :  then, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
 score:False
Error type: noerr
---------------------------
Next Token :  false, Posbility: 0.0037
Next Token :  , Posbility: 0.0444
Next Token :  is, Posbility: 0.0444
Next Token :  true, Posbility: 0.1069
Next Token : 
, Posbility: 0.7891
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then

 score:False
Error type: noerr
---------------------------
Next Token :               , Posbility: 0.0002
Next Token :                   , Posbility: 0.0005
Next Token :                  , Posbility: 0.0034
Next Token :                , Posbility: 0.4980
Next Token :                 , Posbility: 0.4980
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0603
Next Token : if, Posbility: 0.0874
Next Token : s, Posbility: 0.1279
Next Token : return, Posbility: 0.1279
Next Token : let, Posbility: 0.4453
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0046
Next Token :  res, Posbility: 0.0060
Next Token :  len, Posbility: 0.0077
Next Token :  rec, Posbility: 0.0439
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0018
Next Token : n, Posbility: 0.0038
Next Token : _, Posbility: 0.0104
Next Token : lst, Posbility: 0.0171
Next Token : s, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0004
Next Token : 1, Posbility: 0.0005
Next Token : s, Posbility: 0.0008
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_
 score:False
Error type: noerr
---------------------------
Next Token : start, Posbility: 0.0023
Next Token : end, Posbility: 0.0038
Next Token : rest, Posbility: 0.0170
Next Token : len, Posbility: 0.0280
Next Token : sub, Posbility: 0.9258
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub
 score:False
Error type: noerr
---------------------------
Next Token : sub, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token :  =, Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0003
Next Token : rest, Posbility: 0.0003
Next Token : end, Posbility: 0.0004
Next Token : len, Posbility: 0.0067
Next Token : sub, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : rest, Posbility: 0.0001
Next Token : len, Posbility: 0.0052
Next Token : sub, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0003
Next Token : 1, Posbility: 0.0003
Next Token : 2, Posbility: 0.0013
Next Token :  =, Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : rest, Posbility: 0.0002
Next Token : end, Posbility: 0.0002
Next Token : last, Posbility: 0.0002
Next Token : sub, Posbility: 0.0067
Next Token : len, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : String, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0015
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : Length, Posbility: 0.0000
Next Token : strlen, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : lst, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_
 score:False
Error type: noerr
---------------------------
Next Token : super, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  in, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : substr, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  ..., Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in

 score:False
Error type: noerr
---------------------------
Next Token :                  , Posbility: 0.0001
Next Token :               , Posbility: 0.0002
Next Token :                   , Posbility: 0.0003
Next Token :                , Posbility: 0.0041
Next Token :                 , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0023
Next Token : return, Posbility: 0.0037
Next Token : String, Posbility: 0.0061
Next Token : if, Posbility: 0.0747
Next Token : let, Posbility: 0.9102
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token :  sub, Posbility: 0.0001
Next Token :  len, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let 
 score:False
Error type: noerr
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : n, Posbility: 0.0003
Next Token : _, Posbility: 0.0012
Next Token : s, Posbility: 0.0067
Next Token : lst, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_
 score:False
Error type: noerr
---------------------------
Next Token : substr, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : len, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : sum, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : len, Posbility: 0.0008
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : max, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : String, Posbility: 0.0001
Next Token : 
, Posbility: 0.0025
Next Token :  , Posbility: 0.0025
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.
 score:False
Error type: noerr
---------------------------
Next Token : 长度, Posbility: 0.0000
Next Token : Length, Posbility: 0.0000
Next Token : strlen, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length 
 score:False
Error type: noerr
---------------------------
Next Token : rst, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_
 score:False
Error type: noerr
---------------------------
Next Token : Sub, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_
 score:False
Error type: noerr
---------------------------
Next Token : sum, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :                 , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0010
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in

 score:False
Error type: noerr
---------------------------
Next Token :                  , Posbility: 0.0001
Next Token :               , Posbility: 0.0001
Next Token :                   , Posbility: 0.0003
Next Token :                , Posbility: 0.0179
Next Token :                 , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                
 score:False
Error type: noerr
---------------------------
Next Token : return, Posbility: 0.0075
Next Token : let, Posbility: 0.0159
Next Token : (, Posbility: 0.0204
Next Token : s, Posbility: 0.0713
Next Token : if, Posbility: 0.8672
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if
 score:False
Error type: noerr
---------------------------
Next Token :  !, Posbility: 0.0003
Next Token :  String, Posbility: 0.0005
Next Token :  not, Posbility: 0.0005
Next Token : 
, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : lst, Posbility: 0.0025
Next Token : (, Posbility: 0.0067
Next Token : s, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s
 score:False
Error type: noerr
---------------------------
Next Token :  ==, Posbility: 0.0000
Next Token :  <=, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_
 score:False
Error type: noerr
---------------------------
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0006
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0019
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0001
Next Token :  ==, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token :  len, Posbility: 0.0000
Next Token : less, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0001
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len
 score:False
Error type: noerr
---------------------------
Next Token :  ==, Posbility: 0.0153
Next Token :  >=, Posbility: 0.0153
Next Token :  <=, Posbility: 0.0153
Next Token :  =, Posbility: 0.1128
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len 
 score:False
Error type: noerr
---------------------------
Next Token : ≤, Posbility: 0.0000
Next Token : /, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Next Token : >, Posbility: 0.0140
Next Token : <, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len <
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : >, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0012
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_
 score:False
Error type: noerr
---------------------------
Next Token : sup, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sum, Posbility: 0.0000
Next Token : len, Posbility: 0.0003
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  &&, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : LEN, Posbility: 0.0000
Next Token : leg, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0003
Next Token :  &&, Posbility: 0.0009
Next Token : 
, Posbility: 0.0028
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0024
Next Token :  false, Posbility: 0.0232
Next Token :  , Posbility: 0.0298
Next Token :  true, Posbility: 0.0630
Next Token : 
, Posbility: 0.8711
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then

 score:False
Error type: noerr
---------------------------
Next Token :                      , Posbility: 0.0008
Next Token :                    , Posbility: 0.0035
Next Token :                     , Posbility: 0.0040
Next Token :                  , Posbility: 0.3184
Next Token :                   , Posbility: 0.6719
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0574
Next Token : if, Posbility: 0.0574
Next Token : List, Posbility: 0.0574
Next Token : return, Posbility: 0.0947
Next Token : let, Posbility: 0.6172
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let
 score:False
Error type: noerr
---------------------------
Next Token :  new, Posbility: 0.0042
Next Token :  sub, Posbility: 0.0061
Next Token :  res, Posbility: 0.0089
Next Token :  rec, Posbility: 0.0308
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let 
 score:False
Error type: noerr
---------------------------
Next Token : r, Posbility: 0.0038
Next Token : lst, Posbility: 0.0056
Next Token : _, Posbility: 0.0063
Next Token : x, Posbility: 0.0063
Next Token : s, Posbility: 0.9375
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0008
Next Token : 1, Posbility: 0.0011
Next Token : s, Posbility: 0.0021
Next Token :  =, Posbility: 0.0201
Next Token : _, Posbility: 0.9727
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0018
Next Token : str, Posbility: 0.0018
Next Token : len, Posbility: 0.0039
Next Token : rest, Posbility: 0.0135
Next Token : sub, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  =, Posbility: 0.0003
Next Token : len, Posbility: 0.0005
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : rest, Posbility: 0.0002
Next Token : len, Posbility: 0.0006
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 2, Posbility: 0.0009
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0002
Next Token : len, Posbility: 0.0002
Next Token : s, Posbility: 0.0004
Next Token : rest, Posbility: 0.0007
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 0.0005
Next Token : _, Posbility: 0.0052
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : String, Posbility: 0.0002
Next Token :  , Posbility: 0.0023
Next Token : 
, Posbility: 0.0757
Next Token :  String, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.
 score:False
Error type: noerr
---------------------------
Next Token : slice, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : substring, Posbility: 0.0003
Next Token : substr, Posbility: 0.0004
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 
, Posbility: 0.0125
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : lst, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token : \, Posbility: 0.0006
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  sub, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : SUB, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  0, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : Sub, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token : 
, Posbility: 0.0040
Next Token : _, Posbility: 0.0052
Next Token :  0, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : 
, Posbility: 0.0203
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : 
, Posbility: 0.0012
Next Token : \, Posbility: 0.0015
Next Token : lst, Posbility: 0.0109
Next Token : s, Posbility: 0.9844
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : sum, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0009
Next Token : 
, Posbility: 0.0110
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in

 score:False
Error type: noerr
---------------------------
Next Token :                    , Posbility: 0.0001
Next Token :                 , Posbility: 0.0002
Next Token :                     , Posbility: 0.0004
Next Token :                  , Posbility: 0.0010
Next Token :                   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0005
Next Token : return, Posbility: 0.0006
Next Token : String, Posbility: 0.0010
Next Token : if, Posbility: 0.0075
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let 
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : s, Posbility: 0.0032
Next Token : lst, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : end, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : len, Posbility: 0.0002
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : _, Posbility: 0.0009
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : String, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 0.0110
Next Token :  String, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : slice, Posbility: 0.0000
Next Token : substring, Posbility: 0.0001
Next Token : substr, Posbility: 0.0001
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 
, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0001
Next Token : s, Posbility: 0.0004
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : Sub, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_
 score:False
Error type: noerr
---------------------------
Next Token : sum, Posbility: 0.0000
Next Token : SUB, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : su, Posbility: 0.0000
Next Token : subset, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token :  0, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : \, Posbility: 0.0003
Next Token : lst, Posbility: 0.0085
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : sup, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : su, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : sum, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : LEN, Posbility: 0.0000
Next Token :  len, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : len, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0008
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
 score:False
Error type: noerr
---------------------------
Next Token :                   , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0005
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in

 score:False
Error type: noerr
---------------------------
Next Token :                    , Posbility: 0.0002
Next Token :                 , Posbility: 0.0003
Next Token :                     , Posbility: 0.0004
Next Token :                  , Posbility: 0.0420
Next Token :                   , Posbility: 0.9570
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  
 score:False
Error type: noerr
---------------------------
Next Token : return, Posbility: 0.0080
Next Token : (, Posbility: 0.0103
Next Token : s, Posbility: 0.0217
Next Token : let, Posbility: 0.0217
Next Token : if, Posbility: 0.9219
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0008
Next Token :  not, Posbility: 0.0009
Next Token : 
, Posbility: 0.0015
Next Token :  String, Posbility: 0.0022
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if 
 score:False
Error type: noerr
---------------------------
Next Token : Str, Posbility: 0.0001
Next Token : List, Posbility: 0.0002
Next Token : lst, Posbility: 0.0009
Next Token : (, Posbility: 0.0028
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  !=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_
 score:False
Error type: noerr
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub
 score:False
Error type: noerr
---------------------------
Next Token :  !=, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : sup, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  !=, Posbility: 0.0000
Next Token :  ==, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  !=, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  ==, Posbility: 0.0009
Next Token :  =, Posbility: 0.0022
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : su, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0003
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  !=, Posbility: 0.0011
Next Token :  , Posbility: 0.0018
Next Token : _, Posbility: 0.0135
Next Token :  ==, Posbility: 0.0366
Next Token :  =, Posbility: 0.9453
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub =
 score:False
Error type: noerr
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :  String, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = 
 score:False
Error type: noerr
---------------------------
Next Token : ls, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : s, Posbility: 0.0002
Next Token : lst, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_
 score:False
Error type: noerr
---------------------------
Next Token : Sub, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_
 score:False
Error type: noerr
---------------------------
Next Token : Sub, Posbility: 0.0000
Next Token : sup, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  {, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : sup, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0000
Next Token :  &&, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  then, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : sup, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : su, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0002
Next Token :  ?, Posbility: 0.0002
Next Token :  &&, Posbility: 0.0004
Next Token : 
, Posbility: 0.0010
Next Token :  then, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0023
Next Token :  false, Posbility: 0.0038
Next Token :  , Posbility: 0.0408
Next Token :  true, Posbility: 0.1250
Next Token : 
, Posbility: 0.8164
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then

 score:False
Error type: noerr
---------------------------
Next Token :                   , Posbility: 0.0016
Next Token :                       , Posbility: 0.0019
Next Token :                      , Posbility: 0.0040
Next Token :                    , Posbility: 0.4043
Next Token :                     , Posbility: 0.5859
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0515
Next Token : if, Posbility: 0.0583
Next Token : s, Posbility: 0.0659
Next Token : return, Posbility: 0.1396
Next Token : let, Posbility: 0.5547
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let
 score:False
Error type: noerr
---------------------------
Next Token :  sub, Posbility: 0.0037
Next Token :  res, Posbility: 0.0054
Next Token :  len, Posbility: 0.0079
Next Token :  rec, Posbility: 0.0215
Next Token :  , Posbility: 0.9141
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0019
Next Token : n, Posbility: 0.0031
Next Token : _, Posbility: 0.0050
Next Token : lst, Posbility: 0.0083
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0003
Next Token : 1, Posbility: 0.0004
Next Token : s, Posbility: 0.0009
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_
 score:False
Error type: noerr
---------------------------
Next Token : start, Posbility: 0.0011
Next Token : end, Posbility: 0.0019
Next Token : rest, Posbility: 0.0065
Next Token : len, Posbility: 0.0176
Next Token : sub, Posbility: 0.9609
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : end, Posbility: 0.0002
Next Token : len, Posbility: 0.0028
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : len, Posbility: 0.0006
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  =, Posbility: 0.0013
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : str, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : len, Posbility: 0.0025
Next Token : sub, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : last, Posbility: 0.0001
Next Token : end, Posbility: 0.0001
Next Token : length, Posbility: 0.0001
Next Token : sub, Posbility: 0.0110
Next Token : len, Posbility: 0.9883
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : String, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0041
Next Token :  String, Posbility: 0.9961
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : Length, Posbility: 0.0000
Next Token : strlen, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length 
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : lst, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s_
 score:False
Error type: noerr
---------------------------
Next Token : super, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substring, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s_sub
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s_sub_
 score:False
Error type: noerr
---------------------------
Next Token : Sub, Posbility: 0.0000
Next Token :  sub, Posbility: 0.0000
Next Token : SUB, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s_sub_sub_
 score:False
Error type: noerr
---------------------------
Next Token : Sub, Posbility: 0.0000
Next Token : SUB, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : substr, Posbility: 0.0000
Next Token : sub, Posbility: 1.0000
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s_sub_sub_sub
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 0.0086
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to check if a string is present as a substring in a given list of string values. *)
let rec is_substring_of_list s lst =
  match lst with
  | [] -> false
  | _ :: lst ->
      let s_len = String.length s in
      let lst_len = List.length lst in
      if s_len < lst_len then
        let s_sub = String.sub s 0 s_len in
        let lst_sub = String.sub lst 0 s_len in
        let s_sub_len = String.length s_sub in
        let lst_sub_len = String.length lst_sub in
        if s_sub_len < lst_sub_len then
          let s_sub_sub = String.sub s_sub 0 s_sub_len in
          let lst_sub_sub = String.sub lst_sub 0 s_sub_len in
          if s_sub_sub = lst_sub_sub then
            let s_sub_sub_len = String.length s_sub_sub in
            let lst_sub_sub_len = String.length lst_sub_sub in
            if s_sub_sub_len < lst_sub_sub_len then
              let s_sub_sub_sub = String.sub s_sub_sub 0 s_sub_sub_len in
              let lst_sub_sub_sub = String.sub lst_sub_sub 0 s_sub_sub_len in
              if s_sub_sub_sub = lst_sub_sub_sub then
                let s_sub_sub_sub_len = String.length s_sub_sub_sub in
                let lst_sub_sub_sub_len = String.length lst_sub_sub_sub in
                if s_sub_sub_sub_len < lst_sub_sub_sub_len then
                  let s_sub_sub_sub_sub = String.sub s_sub_sub_sub 0 s_sub_sub_sub_len in
                  let lst_sub_sub_sub_sub = String.sub lst_sub_sub_sub 0 s_sub_sub_sub_len in
                  if s_sub_sub_sub_sub = lst_sub_sub_sub_sub then
                    let s_sub_sub_sub_sub_len = String.length s_sub_sub_sub_
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>