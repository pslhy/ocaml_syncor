code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0203
Next Token :  tuple, Posbility: 0.0427
Next Token :  , Posbility: 0.2178
Next Token :  rec, Posbility: 0.2461
Next Token :  average, Posbility: 0.3574
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0128
Next Token : s, Posbility: 0.0576
Next Token :  =, Posbility: 0.1768
Next Token :  , Posbility: 0.2012
Next Token : _, Posbility: 0.4805
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : values, Posbility: 0.0728
Next Token : value, Posbility: 0.1060
Next Token : tuple, Posbility: 0.1196
Next Token : list, Posbility: 0.1357
Next Token : of, Posbility: 0.1543
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _3_, Posbility: 0.0019
Next Token :  tuple, Posbility: 0.0031
Next Token :  =, Posbility: 0.0084
Next Token :  , Posbility: 0.0138
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0142
Next Token : nested, Posbility: 0.0234
Next Token : list, Posbility: 0.0640
Next Token : lists, Posbility: 0.0820
Next Token : tuple, Posbility: 0.6055
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuple
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0008
Next Token :  , Posbility: 0.0151
Next Token :  =, Posbility: 0.0410
Next Token : _, Posbility: 0.1113
Next Token : s, Posbility: 0.8242
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  tuple, Posbility: 0.0269
Next Token :  a, Posbility: 0.0442
Next Token : _, Posbility: 0.0728
Next Token :  =, Posbility: 0.1982
Next Token :  , Posbility: 0.5391
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ts, Posbility: 0.0486
Next Token : tup, Posbility: 0.0552
Next Token : (, Posbility: 0.1924
Next Token : x, Posbility: 0.1924
Next Token : t, Posbility: 0.3164
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0038
Next Token : _, Posbility: 0.0063
Next Token :  , Posbility: 0.0092
Next Token : 1, Posbility: 0.0195
Next Token :  =, Posbility: 0.9414
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0038
Next Token :  fun, Posbility: 0.0038
Next Token :  match, Posbility: 0.0082
Next Token :  , Posbility: 0.1279
Next Token : 
, Posbility: 0.8320
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0078
Next Token : 	, Posbility: 0.0100
Next Token :    , Posbility: 0.0146
Next Token :     , Posbility: 0.1562
Next Token :   , Posbility: 0.7969
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Array, Posbility: 0.0121
Next Token : (, Posbility: 0.0200
Next Token : match, Posbility: 0.0898
Next Token : List, Posbility: 0.1475
Next Token : let, Posbility: 0.6641
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  tuple, Posbility: 0.0238
Next Token :  average, Posbility: 0.0503
Next Token :  open, Posbility: 0.0571
Next Token :  , Posbility: 0.2891
Next Token :  rec, Posbility: 0.3730
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  sum, Posbility: 0.0339
Next Token :  rec, Posbility: 0.0559
Next Token :  loop, Posbility: 0.0923
Next Token :  , Posbility: 0.2832
Next Token :  average, Posbility: 0.3223
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0152
Next Token :  a, Posbility: 0.0221
Next Token :  =, Posbility: 0.0413
Next Token :  , Posbility: 0.1855
Next Token : _, Posbility: 0.6484
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0201
Next Token : rec, Posbility: 0.0201
Next Token : tuple, Posbility: 0.0620
Next Token : helper, Posbility: 0.0903
Next Token : of, Posbility: 0.6680
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0003
Next Token :  a, Posbility: 0.0005
Next Token :  tuple, Posbility: 0.0015
Next Token :  , Posbility: 0.0041
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : inner, Posbility: 0.0136
Next Token : lists, Posbility: 0.0136
Next Token : sub, Posbility: 0.0225
Next Token : list, Posbility: 0.0610
Next Token : tuple, Posbility: 0.7461
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0203
Next Token :  =, Posbility: 0.0334
Next Token : _, Posbility: 0.0552
Next Token : s, Posbility: 0.4062
Next Token :  , Posbility: 0.4062
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0281
Next Token : (), Posbility: 0.0410
Next Token : tup, Posbility: 0.0525
Next Token : (, Posbility: 0.1113
Next Token : t, Posbility: 0.5664
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0295
Next Token :  i, Posbility: 0.0430
Next Token :  acc, Posbility: 0.0913
Next Token :  , Posbility: 0.1035
Next Token :  =, Posbility: 0.5938
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  fun, Posbility: 0.0012
Next Token :  match, Posbility: 0.0055
Next Token :  function, Posbility: 0.0170
Next Token :  , Posbility: 0.0408
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0031
Next Token :    , Posbility: 0.0050
Next Token :   , Posbility: 0.0137
Next Token :       , Posbility: 0.0199
Next Token :     , Posbility: 0.9570
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : case, Posbility: 0.0082
Next Token : List, Posbility: 0.0366
Next Token : if, Posbility: 0.1128
Next Token : let, Posbility: 0.2393
Next Token : match, Posbility: 0.5742
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token :  tuple, Posbility: 0.0006
Next Token :  !, Posbility: 0.0012
Next Token :  String, Posbility: 0.0031
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Seq, Posbility: 0.0033
Next Token : (, Posbility: 0.0102
Next Token : Tuple, Posbility: 0.0116
Next Token : List, Posbility: 0.0356
Next Token : t, Posbility: 0.9219
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  @, Posbility: 0.0007
Next Token : 
, Posbility: 0.0012
Next Token :  with, Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0015
Next Token :  [, Posbility: 0.0040
Next Token :  , Posbility: 0.0066
Next Token :  [], Posbility: 0.0066
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0008
Next Token :    , Posbility: 0.0011
Next Token :   , Posbility: 0.0014
Next Token :       , Posbility: 0.0674
Next Token :     , Posbility: 0.9297
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ([], Posbility: 0.0016
Next Token : (, Posbility: 0.0031
Next Token : [, Posbility: 0.0122
Next Token : [], Posbility: 0.0122
Next Token : |, Posbility: 0.9688
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0069
Next Token :  [],, Posbility: 0.0129
Next Token :  [, Posbility: 0.0845
Next Token :  [], Posbility: 0.3770
Next Token :  , Posbility: 0.4844
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0156
Next Token : ([, Posbility: 0.0259
Next Token : (), Posbility: 0.0483
Next Token : (, Posbility: 0.2451
Next Token : ([], Posbility: 0.5859
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([]
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ::, Posbility: 0.0008
Next Token :  |, Posbility: 0.0033
Next Token :  as, Posbility: 0.0070
Next Token :  , Posbility: 0.0591
Next Token : ,, Posbility: 0.9219
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([],
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  [], Posbility: 0.0108
Next Token : []), Posbility: 0.0178
Next Token : _, Posbility: 0.0229
Next Token :  [],, Posbility: 0.0427
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : t, Posbility: 0.0092
Next Token : x, Posbility: 0.0104
Next Token : ()), Posbility: 0.0152
Next Token : _, Posbility: 0.2695
Next Token : []), Posbility: 0.6445
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], [])
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =>, Posbility: 0.0063
Next Token :  |, Posbility: 0.0063
Next Token :  as, Posbility: 0.0104
Next Token : ,, Posbility: 0.0283
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0002
Next Token : →, Posbility: 0.0004
Next Token : -, Posbility: 0.0009
Next Token : ::, Posbility: 0.0124
Next Token : ->, Posbility: 0.9844
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0227
Next Token : 
, Posbility: 0.0618
Next Token :  0.0, Posbility: 0.0618
Next Token :  , Posbility: 0.2148
Next Token :  [], Posbility: 0.5859
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0016
Next Token :   , Posbility: 0.0043
Next Token :  , Posbility: 0.0192
Next Token :  |, Posbility: 0.0405
Next Token : 
, Posbility: 0.9219
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :       , Posbility: 0.0004
Next Token :    , Posbility: 0.0006
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : let, Posbility: 0.0000
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0049
Next Token :  ((, Posbility: 0.0080
Next Token :  tuple, Posbility: 0.0091
Next Token :  [, Posbility: 0.0408
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0217
Next Token : _, Posbility: 0.0359
Next Token : ([], Posbility: 0.2061
Next Token : ([, Posbility: 0.2656
Next Token : (, Posbility: 0.4375
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : h, Posbility: 0.0457
Next Token : a, Posbility: 0.0752
Next Token : x, Posbility: 0.1240
Next Token : t, Posbility: 0.1406
Next Token : _, Posbility: 0.2637
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : t, Posbility: 0.0039
Next Token : :, Posbility: 0.0094
Next Token : ::, Posbility: 0.0226
Next Token :  , Posbility: 0.0894
Next Token : ,, Posbility: 0.8477
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  tuple, Posbility: 0.0065
Next Token :  [], Posbility: 0.0074
Next Token :  rest, Posbility: 0.0121
Next Token :  [, Posbility: 0.0698
Next Token :  , Posbility: 0.8516
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : x, Posbility: 0.0226
Next Token : ()), Posbility: 0.0226
Next Token : t, Posbility: 0.0613
Next Token : _, Posbility: 0.2754
Next Token : []), Posbility: 0.5156
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, [])
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0038
Next Token : 
, Posbility: 0.0049
Next Token : ,, Posbility: 0.0063
Next Token :  |, Posbility: 0.0283
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : →, Posbility: 0.0001
Next Token : ::, Posbility: 0.0009
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  average, Posbility: 0.0125
Next Token : 
, Posbility: 0.1182
Next Token :  [, Posbility: 0.1953
Next Token :  [], Posbility: 0.1953
Next Token :  , Posbility: 0.4121
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0242
Next Token : [0], Posbility: 0.0273
Next Token : (, Posbility: 0.0957
Next Token : raise, Posbility: 0.1572
Next Token : t, Posbility: 0.4277
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0049
Next Token : ., Posbility: 0.0322
Next Token : [0], Posbility: 0.0466
Next Token :  , Posbility: 0.0530
Next Token : 
, Posbility: 0.8281
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :   , Posbility: 0.0025
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  tuple, Posbility: 0.0030
Next Token :  ((, Posbility: 0.0064
Next Token :  [], Posbility: 0.0135
Next Token :  [, Posbility: 0.0253
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0104
Next Token : _, Posbility: 0.0151
Next Token : ([, Posbility: 0.1270
Next Token : (, Posbility: 0.2695
Next Token : ([], Posbility: 0.5703
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([]
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : ),, Posbility: 0.0001
Next Token : ), Posbility: 0.0010
Next Token :  , Posbility: 0.0017
Next Token : ,, Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([],
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  tuple, Posbility: 0.0081
Next Token :  a, Posbility: 0.0103
Next Token :  v, Posbility: 0.0117
Next Token :  [, Posbility: 0.3027
Next Token :  , Posbility: 0.6406
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : x, Posbility: 0.0806
Next Token : (, Posbility: 0.1035
Next Token : []), Posbility: 0.1035
Next Token : t, Posbility: 0.1328
Next Token : _, Posbility: 0.4082
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : []), Posbility: 0.0044
Next Token : t, Posbility: 0.0049
Next Token :  , Posbility: 0.0119
Next Token : ,, Posbility: 0.0119
Next Token : ), Posbility: 0.9453
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0015
Next Token :  with, Posbility: 0.0031
Next Token : 
, Posbility: 0.0040
Next Token :  |, Posbility: 0.0085
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : if, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  average, Posbility: 0.0159
Next Token : 
, Posbility: 0.0554
Next Token :  [, Posbility: 0.0708
Next Token :  [], Posbility: 0.1504
Next Token :  , Posbility: 0.6719
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0112
Next Token : ([], Posbility: 0.0112
Next Token : raise, Posbility: 0.0127
Next Token : (, Posbility: 0.0305
Next Token : t, Posbility: 0.8906
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0013
Next Token : 

, Posbility: 0.0051
Next Token :  , Posbility: 0.0058
Next Token : [0], Posbility: 0.0058
Next Token : 
, Posbility: 0.9766
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0002
Next Token :   , Posbility: 0.0028
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : //, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : else, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [], Posbility: 0.0016
Next Token :  tuple, Posbility: 0.0034
Next Token :  ((, Posbility: 0.0136
Next Token :  [, Posbility: 0.0223
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0150
Next Token : _, Posbility: 0.0405
Next Token : ([], Posbility: 0.0522
Next Token : ([, Posbility: 0.2334
Next Token : (, Posbility: 0.6367
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : h, Posbility: 0.0310
Next Token : a, Posbility: 0.0581
Next Token : x, Posbility: 0.0845
Next Token : t, Posbility: 0.1230
Next Token : _, Posbility: 0.4863
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : :, Posbility: 0.0011
Next Token : 1,, Posbility: 0.0019
Next Token : ::, Posbility: 0.0024
Next Token :  , Posbility: 0.0058
Next Token : ,, Posbility: 0.9766
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_,
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : _, Posbility: 0.0029
Next Token :  v, Posbility: 0.0029
Next Token :  [], Posbility: 0.0029
Next Token :  [, Posbility: 0.0586
Next Token :  , Posbility: 0.9180
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : x, Posbility: 0.0089
Next Token : (, Posbility: 0.0311
Next Token : t, Posbility: 0.0400
Next Token : []), Posbility: 0.1582
Next Token : _, Posbility: 0.7070
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : t, Posbility: 0.0021
Next Token : ),, Posbility: 0.0021
Next Token :  , Posbility: 0.0024
Next Token : ,, Posbility: 0.0226
Next Token : ), Posbility: 0.9609
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0015
Next Token : 
, Posbility: 0.0040
Next Token :  =>, Posbility: 0.0051
Next Token :  when, Posbility: 0.0074
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : <, Posbility: 0.0003
Next Token : >, Posbility: 0.0009
Next Token : →, Posbility: 0.0009
Next Token :  =>, Posbility: 0.0067
Next Token : ->, Posbility: 0.9883
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0150
Next Token :  [], Posbility: 0.0248
Next Token :  [, Posbility: 0.0317
Next Token :  , Posbility: 0.2354
Next Token : 
, Posbility: 0.6406
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0048
Next Token :        , Posbility: 0.0101
Next Token :     , Posbility: 0.0581
Next Token :         , Posbility: 0.2949
Next Token :       , Posbility: 0.6250
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0240
Next Token : [, Posbility: 0.0398
Next Token : (, Posbility: 0.0449
Next Token : match, Posbility: 0.1079
Next Token : let, Posbility: 0.7031
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0337
Next Token :  tuple, Posbility: 0.0337
Next Token :  average, Posbility: 0.0557
Next Token :  rec, Posbility: 0.2500
Next Token :  , Posbility: 0.4121
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0513
Next Token : x, Posbility: 0.0581
Next Token : (, Posbility: 0.1230
Next Token : avg, Posbility: 0.1396
Next Token : t, Posbility: 0.2031
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0820
Next Token : _, Posbility: 0.1050
Next Token :  =, Posbility: 0.1738
Next Token : ', Posbility: 0.2227
Next Token : 1, Posbility: 0.2852
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0019
Next Token :  , Posbility: 0.0024
Next Token : s, Posbility: 0.0040
Next Token : _, Posbility: 0.0139
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  first, Posbility: 0.0021
Next Token : 
, Posbility: 0.0058
Next Token :  [, Posbility: 0.0058
Next Token :  , Posbility: 0.1162
Next Token :  average, Posbility: 0.8555
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : list, Posbility: 0.0001
Next Token : one, Posbility: 0.0001
Next Token : tuple, Posbility: 0.0003
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  tuple, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0000
Next Token : value, Posbility: 0.0001
Next Token : pair, Posbility: 0.0001
Next Token : list, Posbility: 0.0004
Next Token : tuple, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0039
Next Token :  [], Posbility: 0.0050
Next Token :  [, Posbility: 0.0050
Next Token : s, Posbility: 0.0225
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0008
Next Token : ([], Posbility: 0.0008
Next Token : _, Posbility: 0.0061
Next Token : (, Posbility: 0.0747
Next Token : t, Posbility: 0.9102
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0110
Next Token : [0], Posbility: 0.0160
Next Token : 1, Posbility: 0.1719
Next Token :  in, Posbility: 0.1719
Next Token : ., Posbility: 0.6016
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0444
Next Token : 0, Posbility: 0.0732
Next Token : (0), Posbility: 0.1206
Next Token : [0], Posbility: 0.1758
Next Token : 1, Posbility: 0.4785
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0009
Next Token :  with, Posbility: 0.0013
Next Token : ;, Posbility: 0.0016
Next Token : 
, Posbility: 0.0258
Next Token :  in, Posbility: 0.9688
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.1 in
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.1

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.1;
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.1 with
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.1 |
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0005
Next Token :  |, Posbility: 0.0005
Next Token :  , Posbility: 0.0005
Next Token : 
, Posbility: 0.0292
Next Token :  in, Posbility: 0.9688
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token : 

, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0005
Next Token :      , Posbility: 0.0046
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0024
Next Token : [, Posbility: 0.0045
Next Token : match, Posbility: 0.0066
Next Token : (, Posbility: 0.0084
Next Token : let, Posbility: 0.9727
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0005
Next Token :  l, Posbility: 0.0006
Next Token :  v, Posbility: 0.0013
Next Token :  rec, Posbility: 0.0015
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0003
Next Token : r, Posbility: 0.0003
Next Token : _, Posbility: 0.0007
Next Token : s, Posbility: 0.0007
Next Token : t, Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0003
Next Token : 0, Posbility: 0.0004
Next Token : 1, Posbility: 0.0006
Next Token : 3, Posbility: 0.0006
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  Average, Posbility: 0.0000
Next Token :  [, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  average, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  of, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : tuple, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  tuple, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  tuple, Posbility: 0.0000
Next Token : tensor, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : tup, Posbility: 0.0000
Next Token : tuple, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 0.0002
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tup, Posbility: 0.0000
Next Token : ([, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0009
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [1]., Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : [1], Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : [, Posbility: 0.0001
Next Token : [1]., Posbility: 0.0001
Next Token : [1];, Posbility: 0.0002
Next Token : [2], Posbility: 0.0004
Next Token : [1], Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  with, Posbility: 0.0006
Next Token : 
, Posbility: 0.0025
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  [, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :     , Posbility: 0.0003
Next Token :         , Posbility: 0.0007
Next Token :      , Posbility: 0.0601
Next Token :       , Posbility: 0.9375
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0192
Next Token : (, Posbility: 0.0669
Next Token : List, Posbility: 0.0757
Next Token : let, Posbility: 0.3008
Next Token : [, Posbility: 0.4941
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0108
Next Token :  [, Posbility: 0.0201
Next Token : (, Posbility: 0.0378
Next Token : t, Posbility: 0.3164
Next Token :  , Posbility: 0.5898
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : tup, Posbility: 0.0005
Next Token : ([, Posbility: 0.0007
Next Token : Tuple, Posbility: 0.0008
Next Token : (, Posbility: 0.1318
Next Token : t, Posbility: 0.8594
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1.1, Posbility: 0.0023
Next Token : 2, Posbility: 0.0029
Next Token : 1,, Posbility: 0.0247
Next Token : 1., Posbility: 0.0359
Next Token : 1, Posbility: 0.9258
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0024
Next Token :  [, Posbility: 0.0045
Next Token :  |, Posbility: 0.0625
Next Token :  , Posbility: 0.2471
Next Token : ;, Posbility: 0.6719
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1;
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token : ;, Posbility: 0.0012
Next Token : t, Posbility: 0.0013
Next Token :  [, Posbility: 0.0028
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0010
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2],, Posbility: 0.0003
Next Token : 1, Posbility: 0.0006
Next Token : 2., Posbility: 0.0011
Next Token : 2], Posbility: 0.0474
Next Token : 2, Posbility: 0.9492
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : ];, Posbility: 0.0017
Next Token : ;, Posbility: 0.0041
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ][, Posbility: 0.0001
Next Token : ],, Posbility: 0.0002
Next Token : ]., Posbility: 0.0007
Next Token : ];, Posbility: 0.0041
Next Token : ], Posbility: 0.9961
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0014
Next Token :  , Posbility: 0.0018
Next Token : 

, Posbility: 0.0276
Next Token :  in, Posbility: 0.0515
Next Token : 
, Posbility: 0.9141
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :       , Posbility: 0.0018
Next Token :    , Posbility: 0.0134
Next Token :     , Posbility: 0.0466
Next Token :   , Posbility: 0.9375
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : let, Posbility: 0.0004
Next Token : end, Posbility: 0.0017
Next Token :  in, Posbility: 0.0025
Next Token : in, Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token : 

, Posbility: 0.0066
Next Token :  average, Posbility: 0.0075
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0004
Next Token :  , Posbility: 0.0008
Next Token :     , Posbility: 0.0013
Next Token :    , Posbility: 0.0036
Next Token :   , Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : t, Posbility: 0.0098
Next Token : match, Posbility: 0.0162
Next Token : List, Posbility: 0.0209
Next Token : let, Posbility: 0.1357
Next Token : average, Posbility: 0.7812
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : tuple, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  tuple, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_
 score:False
Error type: noerr
---------------------------
Next Token : pair, Posbility: 0.0000
Next Token : tup, Posbility: 0.0000
Next Token : tree, Posbility: 0.0000
Next Token : list, Posbility: 0.0000
Next Token : tuple, Posbility: 1.0000
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_tuple
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0017
Next Token :  [, Posbility: 0.0031
Next Token : 
, Posbility: 0.0036
Next Token :  [], Posbility: 0.0036
Next Token :  , Posbility: 0.9844
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_tuple 
 score:False
Error type: noerr
---------------------------
Next Token : ([], Posbility: 0.0000
Next Token : ([, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : (, Posbility: 0.0067
Next Token : t, Posbility: 0.9922
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_tuple t
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0025
Next Token :  |, Posbility: 0.0032
Next Token : ;, Posbility: 0.0110
Next Token : 

, Posbility: 0.3672
Next Token : 
, Posbility: 0.6055
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_tuple t

 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0280
Next Token : ```, Posbility: 0.0359
Next Token :   , Posbility: 0.0491
Next Token : 

, Posbility: 0.1338
Next Token : ;, Posbility: 0.1719
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_tuple t
;
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0002
Next Token : ;&, Posbility: 0.0006
Next Token : 

, Posbility: 0.0036
Next Token : 
, Posbility: 0.0071
Next Token : ;, Posbility: 0.9883
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_tuple t
;;
 score:False
Error type: noerr
---------------------------
Next Token : <, Posbility: 0.0089
Next Token :  , Posbility: 0.0101
Next Token : ;, Posbility: 0.0107
Next Token : 
, Posbility: 0.2598
Next Token : 

, Posbility: 0.6641
---------------------------
code:
 (* Write a function which takes a tuple of tuples and returns the average value for each tuple as a list. *)
let average_of_tuples t =
  let rec average_of_tuple t =
    match t with
    | ([], []) -> []
    | (_, []) -> t
    | ([], _) -> t
    | (_, _) ->
      let t1 = average_of_tuple t.[0] in
      let t2 = average_of_tuple t.[1] in
      [ t1; t2 ]
  in
  average_of_tuple t
;;


 score:True
Error type: noerr
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



----------END and No Syntax Error--------

processing time : :61.13881158828735

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>