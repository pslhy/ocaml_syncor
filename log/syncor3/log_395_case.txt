code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0217
Next Token :  get, Posbility: 0.0217
Next Token :  rec, Posbility: 0.1816
Next Token :  count, Posbility: 0.2334
Next Token :  , Posbility: 0.3848
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : vo, Posbility: 0.0161
Next Token : print, Posbility: 0.0233
Next Token : neighbor, Posbility: 0.0815
Next Token : neighbors, Posbility: 0.1729
Next Token : vowel, Posbility: 0.2852
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Neighbor, Posbility: 0.0051
Next Token : Count, Posbility: 0.0065
Next Token :  =, Posbility: 0.0425
Next Token : _, Posbility: 0.3145
Next Token : s, Posbility: 0.5859
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0039
Next Token : (, Posbility: 0.0082
Next Token :  , Posbility: 0.1865
Next Token : _, Posbility: 0.3066
Next Token :  =, Posbility: 0.4473
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0479
Next Token :  [, Posbility: 0.0479
Next Token :  ', Posbility: 0.1299
Next Token :  , Posbility: 0.3535
Next Token :  ", Posbility: 0.3535
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : [, Posbility: 0.0114
Next Token : A, Posbility: 0.0579
Next Token : AE, Posbility: 0.0654
Next Token : a, Posbility: 0.0952
Next Token : ae, Posbility: 0.7031
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "ae
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : IO, Posbility: 0.0010
Next Token : ou, Posbility: 0.0013
Next Token : oi, Posbility: 0.0015
Next Token : i, Posbility: 0.0025
Next Token : io, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeio
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : uh, Posbility: 0.0057
Next Token : y, Posbility: 0.0064
Next Token : ul, Posbility: 0.0094
Next Token : u, Posbility: 0.4512
Next Token : uy, Posbility: 0.5117
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ae, Posbility: 0.0053
Next Token : A, Posbility: 0.0099
Next Token : ";, Posbility: 0.0099
Next Token : AE, Posbility: 0.2256
Next Token : ", Posbility: 0.6953
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0193
Next Token :  |, Posbility: 0.0248
Next Token :  , Posbility: 0.0410
Next Token : 

, Posbility: 0.4395
Next Token : 
, Posbility: 0.4395
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"

 score:False
Error type: noerr
---------------------------
Next Token : open, Posbility: 0.0085
Next Token :   , Posbility: 0.0123
Next Token : module, Posbility: 0.0157
Next Token : (, Posbility: 0.0244
Next Token : let, Posbility: 0.8633
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0231
Next Token :  is, Posbility: 0.0488
Next Token :  rec, Posbility: 0.0806
Next Token :  count, Posbility: 0.2188
Next Token :  , Posbility: 0.3613
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0261
Next Token : counts, Posbility: 0.0261
Next Token : vowel, Posbility: 0.0708
Next Token : neighbor, Posbility: 0.0913
Next Token : neighbors, Posbility: 0.2812
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0083
Next Token : (, Posbility: 0.0199
Next Token : _, Posbility: 0.0540
Next Token :  , Posbility: 0.1465
Next Token :  =, Posbility: 0.7461
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0625
Next Token : 
, Posbility: 0.1030
Next Token :  function, Posbility: 0.1030
Next Token :  ", Posbility: 0.2793
Next Token :  , Posbility: 0.2793
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0422
Next Token : List, Posbility: 0.0791
Next Token : (, Posbility: 0.0894
Next Token : [", Posbility: 0.1670
Next Token : [', Posbility: 0.1670
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ['
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0254
Next Token : h, Posbility: 0.0287
Next Token : e, Posbility: 0.0369
Next Token :  , Posbility: 0.0417
Next Token : a, Posbility: 0.5078
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ['a
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = [' 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ['e
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ['h
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ['c
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : i, Posbility: 0.0114
Next Token : e, Posbility: 0.0146
Next Token : ae, Posbility: 0.0188
Next Token : b, Posbility: 0.0510
Next Token : a, Posbility: 0.7031
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : "], Posbility: 0.0014
Next Token : "|", Posbility: 0.0016
Next Token : ", Posbility: 0.0284
Next Token : ",", Posbility: 0.1270
Next Token : ",, Posbility: 0.8281
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a",
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 0.0009
Next Token :  ", Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : c, Posbility: 0.0066
Next Token : b, Posbility: 0.0157
Next Token : i, Posbility: 0.0378
Next Token : o, Posbility: 0.1494
Next Token : e, Posbility: 0.7617
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : i, Posbility: 0.0003
Next Token : "], Posbility: 0.0003
Next Token : ", Posbility: 0.0005
Next Token : ",", Posbility: 0.0008
Next Token : ",, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e",
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  ..., Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  ", Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : h, Posbility: 0.0010
Next Token : y, Posbility: 0.0027
Next Token : u, Posbility: 0.0039
Next Token : o, Posbility: 0.0417
Next Token : i, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ";, Posbility: 0.0001
Next Token : ",", Posbility: 0.0002
Next Token : "], Posbility: 0.0004
Next Token : ", Posbility: 0.0008
Next Token : ",, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i",
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ", Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  ", Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : ou, Posbility: 0.0001
Next Token : y, Posbility: 0.0009
Next Token : u, Posbility: 0.0059
Next Token : o, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",", Posbility: 0.0009
Next Token : "];, Posbility: 0.0009
Next Token : ", Posbility: 0.0025
Next Token : "], Posbility: 0.0067
Next Token : ",, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o",
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  ', Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :   , Posbility: 0.0002
Next Token :  ", Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ue, Posbility: 0.0000
Next Token : uu, Posbility: 0.0000
Next Token : uy, Posbility: 0.0001
Next Token : y, Posbility: 0.0110
Next Token : u, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u
 score:False
Error type: Lexer.Errorr
---------------------------
Next Token : ",", Posbility: 0.0018
Next Token : ", Posbility: 0.0048
Next Token : "];, Posbility: 0.0131
Next Token : ",, Posbility: 0.2617
Next Token : "], Posbility: 0.7148
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0015
Next Token :  in, Posbility: 0.0037
Next Token :  , Posbility: 0.0166
Next Token : 

, Posbility: 0.4844
Next Token : 
, Posbility: 0.4844
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]

 score:False
Error type: noerr
---------------------------
Next Token : val, Posbility: 0.0060
Next Token : in, Posbility: 0.0068
Next Token : module, Posbility: 0.0072
Next Token : (, Posbility: 0.0304
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  get, Posbility: 0.0214
Next Token :  is, Posbility: 0.0398
Next Token :  rec, Posbility: 0.0579
Next Token :  count, Posbility: 0.2598
Next Token :  , Posbility: 0.3340
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : print, Posbility: 0.0334
Next Token : counts, Posbility: 0.0625
Next Token : neighbor, Posbility: 0.0708
Next Token : vowel, Posbility: 0.1172
Next Token : neighbors, Posbility: 0.1172
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Of, Posbility: 0.0087
Next Token :  , Posbility: 0.0143
Next Token :  =, Posbility: 0.0442
Next Token : 2, Posbility: 0.0645
Next Token : _, Posbility: 0.7852
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0303
Next Token : str, Posbility: 0.0388
Next Token : set, Posbility: 0.0566
Next Token : count, Posbility: 0.1543
Next Token : of, Posbility: 0.1973
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0010
Next Token :  a, Posbility: 0.0010
Next Token :  , Posbility: 0.0562
Next Token :  =, Posbility: 0.2520
Next Token : _, Posbility: 0.6836
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0186
Next Token : neighbor, Posbility: 0.0239
Next Token : char, Posbility: 0.0393
Next Token : neighbors, Posbility: 0.0737
Next Token : vowel, Posbility: 0.6992
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0046
Next Token : _, Posbility: 0.0126
Next Token :  , Posbility: 0.0342
Next Token :  =, Posbility: 0.2539
Next Token : s, Posbility: 0.6875
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0046
Next Token : (, Posbility: 0.0125
Next Token : _, Posbility: 0.0205
Next Token :  , Posbility: 0.2500
Next Token :  =, Posbility: 0.6797
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0583
Next Token :  fun, Posbility: 0.0659
Next Token :  function, Posbility: 0.0850
Next Token : 
, Posbility: 0.1089
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Map, Posbility: 0.0459
Next Token : (, Posbility: 0.0669
Next Token : [", Posbility: 0.0859
Next Token : neighbors, Posbility: 0.2061
Next Token : List, Posbility: 0.3398
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : (, Posbility: 0.0009
Next Token : ., Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : rev, Posbility: 0.0090
Next Token : of, Posbility: 0.0190
Next Token : fold, Posbility: 0.0276
Next Token : filter, Posbility: 0.3359
Next Token : map, Posbility: 0.5547
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map
 score:False
Error type: noerr
---------------------------
Next Token :  string, Posbility: 0.0042
Next Token : (, Posbility: 0.0089
Next Token : 2, Posbility: 0.0187
Next Token : _, Posbility: 0.0309
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0011
Next Token : neighbor, Posbility: 0.0044
Next Token : vowel, Posbility: 0.0063
Next Token : (, Posbility: 0.2383
Next Token : neighbors, Posbility: 0.7344
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0082
Next Token :  filter, Posbility: 0.0105
Next Token :  ((, Posbility: 0.0135
Next Token :  ~, Posbility: 0.0879
Next Token :  , Posbility: 0.8359
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors 
 score:False
Error type: noerr
---------------------------
Next Token : Char, Posbility: 0.0033
Next Token : neighbor, Posbility: 0.0033
Next Token : List, Posbility: 0.0103
Next Token : neighbors, Posbility: 0.0193
Next Token : (, Posbility: 0.9258
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0190
Next Token : List, Posbility: 0.0457
Next Token : String, Posbility: 0.0967
Next Token : function, Posbility: 0.1592
Next Token : fun, Posbility: 0.5547
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0056
Next Token :  i, Posbility: 0.0093
Next Token :  char, Posbility: 0.0135
Next Token :  v, Posbility: 0.1128
Next Token :  , Posbility: 0.8320
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ch, Posbility: 0.0396
Next Token : s, Posbility: 0.0508
Next Token : n, Posbility: 0.0840
Next Token : c, Posbility: 0.3750
Next Token : x, Posbility: 0.3750
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0003
Next Token : ->, Posbility: 0.0006
Next Token : s, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : -, Posbility: 0.0003
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0233
Next Token :  ", Posbility: 0.0233
Next Token :  [, Posbility: 0.0383
Next Token :  String, Posbility: 0.0635
Next Token :  , Posbility: 0.7695
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0425
Next Token : Char, Posbility: 0.0618
Next Token : if, Posbility: 0.0791
Next Token : List, Posbility: 0.2158
Next Token : x, Posbility: 0.4551
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0581
Next Token :  *, Posbility: 0.0581
Next Token :  in, Posbility: 0.0581
Next Token :  |, Posbility: 0.0742
Next Token :  , Posbility: 0.5508
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0053
Next Token : if, Posbility: 0.0145
Next Token : ::, Posbility: 0.0649
Next Token : :, Posbility: 0.0947
Next Token : ^, Posbility: 0.7930
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0371
Next Token : >, Posbility: 0.0420
Next Token : ^, Posbility: 0.1289
Next Token :  ", Posbility: 0.1885
Next Token :  , Posbility: 0.3105
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : neighbors, Posbility: 0.0330
Next Token : '^, Posbility: 0.0479
Next Token : (, Posbility: 0.1475
Next Token : vowel, Posbility: 0.1670
Next Token : x, Posbility: 0.3125
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : '), Posbility: 0.0146
Next Token : ', Posbility: 0.0240
Next Token :  |, Posbility: 0.0309
Next Token :  , Posbility: 0.0449
Next Token : ), Posbility: 0.7969
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0067
Next Token :  , Posbility: 0.0559
Next Token :  in, Posbility: 0.0811
Next Token : 

, Posbility: 0.4121
Next Token : 
, Posbility: 0.4121
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)

 score:False
Error type: noerr
---------------------------
Next Token : val, Posbility: 0.0114
Next Token : module, Posbility: 0.0145
Next Token : in, Posbility: 0.0165
Next Token : (, Posbility: 0.0187
Next Token : let, Posbility: 0.7930
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  char, Posbility: 0.0170
Next Token :  get, Posbility: 0.0217
Next Token :  is, Posbility: 0.0461
Next Token :  count, Posbility: 0.1611
Next Token :  , Posbility: 0.4375
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : map, Posbility: 0.0215
Next Token : counts, Posbility: 0.0400
Next Token : neighbor, Posbility: 0.0850
Next Token : vowel, Posbility: 0.1089
Next Token : neighbors, Posbility: 0.2617
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0005
Next Token :  , Posbility: 0.0045
Next Token : 2, Posbility: 0.0051
Next Token :  =, Posbility: 0.0084
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0145
Next Token : set, Posbility: 0.0164
Next Token : to, Posbility: 0.0186
Next Token : count, Posbility: 0.0210
Next Token : of, Posbility: 0.6953
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0190
Next Token : char, Posbility: 0.0216
Next Token : non, Posbility: 0.0356
Next Token : neighbors, Posbility: 0.1099
Next Token : vowel, Posbility: 0.6328
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0065
Next Token : _, Posbility: 0.0291
Next Token : s, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0099
Next Token : 2, Posbility: 0.0270
Next Token :  , Posbility: 0.0645
Next Token :  =, Posbility: 0.0830
Next Token : _, Posbility: 0.7891
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : str, Posbility: 0.0364
Next Token : count, Posbility: 0.0598
Next Token : set, Posbility: 0.0679
Next Token : of, Posbility: 0.0869
Next Token : and, Posbility: 0.0869
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : s, Posbility: 0.0008
Next Token :  , Posbility: 0.0024
Next Token :  =, Posbility: 0.0292
Next Token : _, Posbility: 0.9648
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : space, Posbility: 0.0352
Next Token : other, Posbility: 0.0352
Next Token : neighbors, Posbility: 0.0579
Next Token : vowel, Posbility: 0.1572
Next Token : self, Posbility: 0.2021
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0009
Next Token : :, Posbility: 0.0014
Next Token : _, Posbility: 0.0081
Next Token :  , Posbility: 0.0466
Next Token :  =, Posbility: 0.9375
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0029
Next Token :  fun, Posbility: 0.0037
Next Token :  [, Posbility: 0.0271
Next Token : 
, Posbility: 0.0574
Next Token :  , Posbility: 0.8945
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0046
Next Token : [", Posbility: 0.0087
Next Token : (, Posbility: 0.0209
Next Token : neighbors, Posbility: 0.1533
Next Token : List, Posbility: 0.7812
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : flat, Posbility: 0.0115
Next Token : filter, Posbility: 0.0583
Next Token : append, Posbility: 0.0962
Next Token : concat, Posbility: 0.2041
Next Token : map, Posbility: 0.5547
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0046
Next Token : 
, Posbility: 0.0111
Next Token : _, Posbility: 0.0303
Next Token : 2, Posbility: 0.0640
Next Token :  , Posbility: 0.8828
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0008
Next Token : neighbor, Posbility: 0.0008
Next Token : vowel, Posbility: 0.0061
Next Token : (, Posbility: 0.0747
Next Token : neighbors, Posbility: 0.9102
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0017
Next Token :  ~, Posbility: 0.0017
Next Token :  ((, Posbility: 0.0028
Next Token :  , Posbility: 0.3730
Next Token : _, Posbility: 0.6133
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : char, Posbility: 0.0000
Next Token : vocab, Posbility: 0.0000
Next Token : vo, Posbility: 0.0000
Next Token : self, Posbility: 0.0000
Next Token : vowel, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0054
Next Token :  ~, Posbility: 0.0100
Next Token :  [], Posbility: 0.0212
Next Token :  [, Posbility: 0.0349
Next Token :  , Posbility: 0.9023
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels 
 score:False
Error type: noerr
---------------------------
Next Token : id, Posbility: 0.0018
Next Token : List, Posbility: 0.0042
Next Token : ^, Posbility: 0.0042
Next Token : neighbors, Posbility: 0.0659
Next Token : (, Posbility: 0.9102
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0005
Next Token : Fun, Posbility: 0.0007
Next Token : List, Posbility: 0.0019
Next Token : function, Posbility: 0.0040
Next Token : fun, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0004
Next Token :  a, Posbility: 0.0010
Next Token :  i, Posbility: 0.0017
Next Token :  v, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0019
Next Token : c, Posbility: 0.0019
Next Token : y, Posbility: 0.0019
Next Token : n, Posbility: 0.0024
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : ->, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  "", Posbility: 0.0024
Next Token :  Some, Posbility: 0.0024
Next Token :  ", Posbility: 0.0065
Next Token :  [, Posbility: 0.0176
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (", Posbility: 0.0014
Next Token : neighbors, Posbility: 0.0081
Next Token : List, Posbility: 0.0081
Next Token : (, Posbility: 0.0361
Next Token : x, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0063
Next Token :  |, Posbility: 0.0103
Next Token :  *, Posbility: 0.0171
Next Token :  +, Posbility: 0.0171
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : /, Posbility: 0.0003
Next Token : x, Posbility: 0.0003
Next Token : ., Posbility: 0.0004
Next Token : ::, Posbility: 0.0006
Next Token : ^, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  self, Posbility: 0.0051
Next Token :  "#, Posbility: 0.0084
Next Token :  ""), Posbility: 0.0157
Next Token :  ", Posbility: 0.0703
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0012
Next Token : (, Posbility: 0.0148
Next Token : vowel, Posbility: 0.0167
Next Token : neighbors, Posbility: 0.0400
Next Token : x, Posbility: 0.9141
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0076
Next Token : ^, Posbility: 0.0087
Next Token :  |, Posbility: 0.0143
Next Token : ), Posbility: 0.4160
Next Token :  , Posbility: 0.5352
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0001
Next Token : :, Posbility: 0.0001
Next Token : x, Posbility: 0.0004
Next Token : ::, Posbility: 0.0005
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ', Posbility: 0.0142
Next Token :  ""), Posbility: 0.0142
Next Token :  "#, Posbility: 0.0234
Next Token :  ", Posbility: 0.1055
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : []), Posbility: 0.0014
Next Token : vowel, Posbility: 0.0071
Next Token : (, Posbility: 0.0103
Next Token : neighbors, Posbility: 0.0281
Next Token : x, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ', Posbility: 0.0006
Next Token :  +, Posbility: 0.0006
Next Token : ^, Posbility: 0.0021
Next Token :  , Posbility: 0.0201
Next Token : ), Posbility: 0.9727
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0024
Next Token :  in, Posbility: 0.0050
Next Token :  , Posbility: 0.0176
Next Token : 

, Posbility: 0.4531
Next Token : 
, Posbility: 0.5156
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)

 score:False
Error type: noerr
---------------------------
Next Token : val, Posbility: 0.0039
Next Token : module, Posbility: 0.0078
Next Token : 

, Posbility: 0.0089
Next Token : (, Posbility: 0.0121
Next Token : let, Posbility: 0.9023
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  all, Posbility: 0.0226
Next Token :  char, Posbility: 0.0226
Next Token :  is, Posbility: 0.0479
Next Token :  count, Posbility: 0.1299
Next Token :  , Posbility: 0.4531
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0167
Next Token : counts, Posbility: 0.0243
Next Token : neighbor, Posbility: 0.0583
Next Token : vowel, Posbility: 0.0659
Next Token : neighbors, Posbility: 0.4316
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0002
Next Token :  , Posbility: 0.0012
Next Token : 2, Posbility: 0.0025
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0074
Next Token : with, Posbility: 0.0074
Next Token : plus, Posbility: 0.0074
Next Token : and, Posbility: 0.0256
Next Token : of, Posbility: 0.8477
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _4_, Posbility: 0.0001
Next Token : _3_, Posbility: 0.0002
Next Token :  =, Posbility: 0.0006
Next Token : _2_, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : cons, Posbility: 0.0094
Next Token : non, Posbility: 0.0120
Next Token : self, Posbility: 0.0176
Next Token : all, Posbility: 0.0225
Next Token : vowel, Posbility: 0.8438
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.0179
Next Token : s, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0008
Next Token : 2, Posbility: 0.0027
Next Token :  , Posbility: 0.0058
Next Token :  =, Posbility: 0.0075
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0121
Next Token : with, Posbility: 0.0121
Next Token : or, Posbility: 0.0176
Next Token : plus, Posbility: 0.0420
Next Token : and, Posbility: 0.7461
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0007
Next Token : _1_, Posbility: 0.0007
Next Token : _3_, Posbility: 0.0008
Next Token : _2_, Posbility: 0.0046
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0104
Next Token : vowel, Posbility: 0.0250
Next Token : other, Posbility: 0.0283
Next Token : neighbors, Posbility: 0.0466
Next Token : self, Posbility: 0.7305
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0066
Next Token :  , Posbility: 0.0297
Next Token : 2, Posbility: 0.0381
Next Token :  =, Posbility: 0.0432
Next Token : _, Posbility: 0.8672
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0248
Next Token : sorted, Posbility: 0.0317
Next Token : plus, Posbility: 0.0361
Next Token : of, Posbility: 0.0464
Next Token : and, Posbility: 0.3867
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0002
Next Token : _0_, Posbility: 0.0003
Next Token : _2_, Posbility: 0.0007
Next Token :  =, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : empty, Posbility: 0.0067
Next Token : neighbors, Posbility: 0.0125
Next Token : vowel, Posbility: 0.0205
Next Token : other, Posbility: 0.0262
Next Token : self, Posbility: 0.7695
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0010
Next Token : 
, Posbility: 0.0021
Next Token :  , Posbility: 0.0057
Next Token : _, Posbility: 0.0256
Next Token :  =, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0011
Next Token :  function, Posbility: 0.0013
Next Token :  [, Posbility: 0.0030
Next Token : 
, Posbility: 0.1465
Next Token :  , Posbility: 0.8438
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0010
Next Token : (, Posbility: 0.0049
Next Token : 
, Posbility: 0.0117
Next Token : neighbors, Posbility: 0.0464
Next Token : List, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : flat, Posbility: 0.0013
Next Token : filter, Posbility: 0.0017
Next Token : append, Posbility: 0.0028
Next Token : concat, Posbility: 0.0052
Next Token : map, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map
 score:False
Error type: noerr
---------------------------
Next Token : i, Posbility: 0.0007
Next Token : _, Posbility: 0.0050
Next Token : 2, Posbility: 0.0120
Next Token : 
, Posbility: 0.0287
Next Token :  , Posbility: 0.9531
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0002
Next Token : List, Posbility: 0.0003
Next Token : 
, Posbility: 0.0009
Next Token : (, Posbility: 0.0109
Next Token : neighbors, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0046
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_
 score:False
Error type: noerr
---------------------------
Next Token :  of, Posbility: 0.0000
Next Token : to, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : vocab, Posbility: 0.0000
Next Token : vo, Posbility: 0.0000
Next Token : self, Posbility: 0.0000
Next Token : vowel, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 0.0229
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_
 score:False
Error type: noerr
---------------------------
Next Token : or, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : of, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  ~, Posbility: 0.0008
Next Token :  ((, Posbility: 0.0011
Next Token : _, Posbility: 0.0015
Next Token : 
, Posbility: 0.0201
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self 
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0003
Next Token : List, Posbility: 0.0004
Next Token : 
, Posbility: 0.0027
Next Token : neighbors, Posbility: 0.0179
Next Token : (, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : fn, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token : function, Posbility: 0.0006
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0003
Next Token :  i, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  v, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Next Token : y, Posbility: 0.0006
Next Token : _, Posbility: 0.0007
Next Token : x, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : ->, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : y, Posbility: 0.0001
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0004
Next Token :  [, Posbility: 0.0007
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : neighbors, Posbility: 0.0004
Next Token : 2, Posbility: 0.0009
Next Token : List, Posbility: 0.0009
Next Token : (, Posbility: 0.0085
Next Token : x, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0006
Next Token : ), Posbility: 0.0007
Next Token : ^, Posbility: 0.0010
Next Token :  *, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ->, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  2*, Posbility: 0.0001
Next Token :  2), Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0001
Next Token : 3, Posbility: 0.0003
Next Token : 2, Posbility: 0.0025
Next Token : (, Posbility: 0.0041
Next Token : x, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : ^2, Posbility: 0.0003
Next Token : ^, Posbility: 0.0010
Next Token : ), Posbility: 0.0110
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : ^, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token : (, Posbility: 0.0013
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0004
Next Token : ^2, Posbility: 0.0004
Next Token : ^, Posbility: 0.0014
Next Token : ), Posbility: 0.0598
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  1), Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : x, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : neighbors, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : );, Posbility: 0.0004
Next Token : ^, Posbility: 0.0007
Next Token :  , Posbility: 0.0293
Next Token : ), Posbility: 0.9688
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0009
Next Token :  in, Posbility: 0.0021
Next Token :  , Posbility: 0.0075
Next Token : 

, Posbility: 0.4629
Next Token : 
, Posbility: 0.5234
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)

 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0049
Next Token : module, Posbility: 0.0067
Next Token : (, Posbility: 0.0075
Next Token : 

, Posbility: 0.0080
Next Token : let, Posbility: 0.9258
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  all, Posbility: 0.0161
Next Token :  rec, Posbility: 0.0206
Next Token :  is, Posbility: 0.0342
Next Token :  count, Posbility: 0.1191
Next Token :  , Posbility: 0.5312
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : counts, Posbility: 0.0123
Next Token : s, Posbility: 0.0157
Next Token : neighbor, Posbility: 0.0228
Next Token : vowel, Posbility: 0.0294
Next Token : neighbors, Posbility: 0.6680
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0002
Next Token :  , Posbility: 0.0008
Next Token : 2, Posbility: 0.0013
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : in, Posbility: 0.0029
Next Token : count, Posbility: 0.0038
Next Token : with, Posbility: 0.0048
Next Token : and, Posbility: 0.0168
Next Token : of, Posbility: 0.9180
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _4_, Posbility: 0.0002
Next Token : _3_, Posbility: 0.0002
Next Token : _2_, Posbility: 0.0004
Next Token :  =, Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : char, Posbility: 0.0048
Next Token : self, Posbility: 0.0054
Next Token : non, Posbility: 0.0070
Next Token : all, Posbility: 0.0189
Next Token : vowel, Posbility: 0.9102
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 0.0067
Next Token : s, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0003
Next Token : 2, Posbility: 0.0009
Next Token :  , Posbility: 0.0022
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0042
Next Token : with, Posbility: 0.0054
Next Token : or, Posbility: 0.0061
Next Token : plus, Posbility: 0.0146
Next Token : and, Posbility: 0.9062
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0003
Next Token : _3_, Posbility: 0.0004
Next Token :  =, Posbility: 0.0005
Next Token : _2_, Posbility: 0.0017
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0052
Next Token : other, Posbility: 0.0086
Next Token : neighbors, Posbility: 0.0110
Next Token : vowel, Posbility: 0.0266
Next Token : self, Posbility: 0.8789
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0024
Next Token :  , Posbility: 0.0035
Next Token : s, Posbility: 0.0074
Next Token :  =, Posbility: 0.0074
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0021
Next Token : with, Posbility: 0.0023
Next Token : or, Posbility: 0.0034
Next Token : plus, Posbility: 0.0092
Next Token : and, Posbility: 0.9414
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0004
Next Token : _0_, Posbility: 0.0004
Next Token : _3_, Posbility: 0.0007
Next Token : _2_, Posbility: 0.0028
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0046
Next Token : other, Posbility: 0.0143
Next Token : neighbors, Posbility: 0.0143
Next Token : vowel, Posbility: 0.0208
Next Token : self, Posbility: 0.8828
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0060
Next Token : 2, Posbility: 0.0239
Next Token :  , Posbility: 0.0271
Next Token :  =, Posbility: 0.0308
Next Token : _, Posbility: 0.8984
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0030
Next Token : 2, Posbility: 0.0034
Next Token : of, Posbility: 0.0034
Next Token : plus, Posbility: 0.0055
Next Token : and, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _0_, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0002
Next Token :  =, Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : same, Posbility: 0.0011
Next Token : neighbors, Posbility: 0.0030
Next Token : other, Posbility: 0.0082
Next Token : vowel, Posbility: 0.0082
Next Token : self, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0005
Next Token : 
, Posbility: 0.0035
Next Token :  , Posbility: 0.0074
Next Token : _, Posbility: 0.0123
Next Token :  =, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0011
Next Token :  function, Posbility: 0.0017
Next Token :  ..., Posbility: 0.0021
Next Token : 
, Posbility: 0.1318
Next Token :  , Posbility: 0.8594
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0015
Next Token : \, Posbility: 0.0015
Next Token : 
, Posbility: 0.0084
Next Token : neighbors, Posbility: 0.0177
Next Token : List, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : concat, Posbility: 0.0002
Next Token : filter, Posbility: 0.0002
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 2, Posbility: 0.0005
Next Token : _, Posbility: 0.0009
Next Token : 
, Posbility: 0.0292
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : neighbour, Posbility: 0.0001
Next Token : \, Posbility: 0.0004
Next Token : 
, Posbility: 0.0008
Next Token : (, Posbility: 0.0032
Next Token : neighbors, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : vocab, Posbility: 0.0000
Next Token : self, Posbility: 0.0000
Next Token : vo, Posbility: 0.0000
Next Token : vowel, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0041
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_
 score:False
Error type: noerr
---------------------------
Next Token :  self, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  [], Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0097
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : as, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token :  self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  ((, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : 
, Posbility: 0.0128
Next Token : _, Posbility: 0.3730
Next Token :  , Posbility: 0.6133
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self 
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0001
Next Token : \, Posbility: 0.0008
Next Token : 
, Posbility: 0.0025
Next Token : neighbors, Posbility: 0.0059
Next Token : (, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  fun, Posbility: 0.0000
Next Token : fn, Posbility: 0.0002
Next Token : function, Posbility: 0.0005
Next Token : 
, Posbility: 0.0008
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  v, Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : y, Posbility: 0.0002
Next Token : _, Posbility: 0.0005
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ->, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : (, Posbility: 0.0012
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0001
Next Token : ), Posbility: 0.0002
Next Token : ^, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : '^, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ), Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token : x, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ^, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : ^, Posbility: 0.0002
Next Token : ), Posbility: 0.0010
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : x, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : ^, Posbility: 0.0005
Next Token : ), Posbility: 0.0036
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1), Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token : x, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : ^, Posbility: 0.0003
Next Token : );, Posbility: 0.0014
Next Token :  , Posbility: 0.0757
Next Token : ), Posbility: 0.9219
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0007
Next Token :  in, Posbility: 0.0024
Next Token :  , Posbility: 0.0051
Next Token : 

, Posbility: 0.4023
Next Token : 
, Posbility: 0.5859
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)

 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0052
Next Token : 

, Posbility: 0.0059
Next Token : module, Posbility: 0.0063
Next Token : (, Posbility: 0.0071
Next Token : let, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  all, Posbility: 0.0150
Next Token :  test, Posbility: 0.0150
Next Token :  is, Posbility: 0.0192
Next Token :  count, Posbility: 0.0859
Next Token :  , Posbility: 0.6367
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0070
Next Token : s, Posbility: 0.0090
Next Token : neighbor, Posbility: 0.0115
Next Token : vowel, Posbility: 0.0167
Next Token : neighbors, Posbility: 0.8086
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token : 2, Posbility: 0.0008
Next Token :  =, Posbility: 0.0052
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0018
Next Token : count, Posbility: 0.0024
Next Token : with, Posbility: 0.0030
Next Token : and, Posbility: 0.0083
Next Token : of, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _4_, Posbility: 0.0001
Next Token : _3_, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0002
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : self, Posbility: 0.0018
Next Token : char, Posbility: 0.0027
Next Token : non, Posbility: 0.0034
Next Token : all, Posbility: 0.0135
Next Token : vowel, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0005
Next Token : _, Posbility: 0.0041
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _2_, Posbility: 0.0001
Next Token : 2, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0016
Next Token : of, Posbility: 0.0019
Next Token : with, Posbility: 0.0021
Next Token : plus, Posbility: 0.0045
Next Token : and, Posbility: 0.9648
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0001
Next Token : _3_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0004
Next Token : _2_, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0019
Next Token : other, Posbility: 0.0019
Next Token : neighbors, Posbility: 0.0024
Next Token : vowel, Posbility: 0.0065
Next Token : self, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  =, Posbility: 0.0019
Next Token : s, Posbility: 0.0025
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0002
Next Token : with, Posbility: 0.0002
Next Token : all, Posbility: 0.0003
Next Token : plus, Posbility: 0.0009
Next Token : and, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _3_, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : two, Posbility: 0.0002
Next Token : all, Posbility: 0.0004
Next Token : other, Posbility: 0.0005
Next Token : vowel, Posbility: 0.0007
Next Token : self, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : s, Posbility: 0.0003
Next Token :  , Posbility: 0.0004
Next Token :  =, Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0001
Next Token : with, Posbility: 0.0001
Next Token : or, Posbility: 0.0001
Next Token : plus, Posbility: 0.0003
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _4_, Posbility: 0.0001
Next Token : _1_, Posbility: 0.0001
Next Token : _3_, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : two, Posbility: 0.0001
Next Token : all, Posbility: 0.0001
Next Token : vowel, Posbility: 0.0003
Next Token : other, Posbility: 0.0005
Next Token : self, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0007
Next Token :  and, Posbility: 0.0013
Next Token :  , Posbility: 0.0045
Next Token :  =, Posbility: 0.0109
Next Token : _, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0002
Next Token : with, Posbility: 0.0003
Next Token : of, Posbility: 0.0004
Next Token : plus, Posbility: 0.0005
Next Token : and, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0002
Next Token : same, Posbility: 0.0002
Next Token : vowel, Posbility: 0.0004
Next Token : other, Posbility: 0.0007
Next Token : self, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  , Posbility: 0.0021
Next Token : 
, Posbility: 0.0024
Next Token : _, Posbility: 0.0178
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0007
Next Token :  function, Posbility: 0.0011
Next Token :  ..., Posbility: 0.0020
Next Token : 
, Posbility: 0.0669
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0008
Next Token : \, Posbility: 0.0012
Next Token : 
, Posbility: 0.0040
Next Token : neighbors, Posbility: 0.0052
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0000
Next Token : concat, Posbility: 0.0000
Next Token : filter, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : _, Posbility: 0.0005
Next Token : 
, Posbility: 0.0159
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : candidates, Posbility: 0.0000
Next Token : \, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : (, Posbility: 0.0012
Next Token : neighbors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : avo, Posbility: 0.0000
Next Token : voxel, Posbility: 0.0000
Next Token : vo, Posbility: 0.0000
Next Token : vocab, Posbility: 0.0000
Next Token : vowel, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0019
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_
 score:False
Error type: noerr
---------------------------
Next Token : for, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0025
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : as, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 0.0110
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : AND, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : as, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0052
Next Token : _, Posbility: 0.3184
Next Token :  , Posbility: 0.6758
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0001
Next Token : \, Posbility: 0.0007
Next Token : neighbors, Posbility: 0.0008
Next Token : 
, Posbility: 0.0012
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  fun, Posbility: 0.0001
Next Token : fn, Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token : function, Posbility: 0.0006
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : y, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : ), Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : '^, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ", Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ^, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : ), Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ), Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ), Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0004
Next Token : ), Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : );, Posbility: 0.0009
Next Token :  , Posbility: 0.0179
Next Token : ), Posbility: 0.9805
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0005
Next Token :  in, Posbility: 0.0025
Next Token :  , Posbility: 0.0037
Next Token : 

, Posbility: 0.3750
Next Token : 
, Posbility: 0.6172
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0038
Next Token : module, Posbility: 0.0056
Next Token : in, Posbility: 0.0063
Next Token : (, Posbility: 0.0071
Next Token : let, Posbility: 0.9375
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0129
Next Token :  all, Posbility: 0.0129
Next Token :  rec, Posbility: 0.0166
Next Token :  count, Posbility: 0.0581
Next Token :  , Posbility: 0.7070
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0041
Next Token : s, Posbility: 0.0053
Next Token : neighbor, Posbility: 0.0053
Next Token : vowel, Posbility: 0.0099
Next Token : neighbors, Posbility: 0.8867
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 2, Posbility: 0.0004
Next Token :  =, Posbility: 0.0046
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0011
Next Token : all, Posbility: 0.0013
Next Token : with, Posbility: 0.0013
Next Token : and, Posbility: 0.0040
Next Token : of, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _3_, Posbility: 0.0001
Next Token : _4_, Posbility: 0.0001
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : cons, Posbility: 0.0009
Next Token : char, Posbility: 0.0015
Next Token : non, Posbility: 0.0019
Next Token : all, Posbility: 0.0074
Next Token : vowel, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 0.0019
Next Token : s, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : 2, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0067
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0006
Next Token : of, Posbility: 0.0006
Next Token : with, Posbility: 0.0006
Next Token : plus, Posbility: 0.0013
Next Token : and, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _4_, Posbility: 0.0000
Next Token : _3_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : other, Posbility: 0.0006
Next Token : neighbors, Posbility: 0.0006
Next Token : all, Posbility: 0.0008
Next Token : vowel, Posbility: 0.0013
Next Token : self, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : s, Posbility: 0.0009
Next Token :  =, Posbility: 0.0015
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0001
Next Token : with, Posbility: 0.0001
Next Token : all, Posbility: 0.0001
Next Token : plus, Posbility: 0.0002
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _4_, Posbility: 0.0000
Next Token : _3_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : super, Posbility: 0.0001
Next Token : same, Posbility: 0.0001
Next Token : all, Posbility: 0.0001
Next Token : other, Posbility: 0.0001
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : but, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _4_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : same, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : other, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0010
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0000
Next Token : of, Posbility: 0.0000
Next Token : to, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0000
Next Token : _4_, Posbility: 0.0000
Next Token : _3_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : six, Posbility: 0.0000
Next Token : other, Posbility: 0.0001
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :  and, Posbility: 0.0009
Next Token :  =, Posbility: 0.0097
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : to, Posbility: 0.0001
Next Token : with, Posbility: 0.0001
Next Token : of, Posbility: 0.0001
Next Token : plus, Posbility: 0.0001
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token : same, Posbility: 0.0001
Next Token : other, Posbility: 0.0001
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 0.0011
Next Token : _, Posbility: 0.0179
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0004
Next Token :   , Posbility: 0.0005
Next Token :  ..., Posbility: 0.0010
Next Token : 
, Posbility: 0.0330
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0004
Next Token : \, Posbility: 0.0005
Next Token : 
, Posbility: 0.0015
Next Token : neighbors, Posbility: 0.0028
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : reduce, Posbility: 0.0000
Next Token : concat, Posbility: 0.0000
Next Token : filter, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token : 
, Posbility: 0.0052
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : neighbour, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : \, Posbility: 0.0001
Next Token : (, Posbility: 0.0007
Next Token : neighbors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : avo, Posbility: 0.0000
Next Token : vo, Posbility: 0.0000
Next Token : vocab, Posbility: 0.0000
Next Token : voxel, Posbility: 0.0000
Next Token : vowel, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_
 score:False
Error type: noerr
---------------------------
Next Token : this, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0015
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : as, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0474
Next Token : _, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token : as, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  and, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0021
Next Token : _, Posbility: 0.1475
Next Token :  , Posbility: 0.8477
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0001
Next Token : neighbors, Posbility: 0.0004
Next Token : \, Posbility: 0.0004
Next Token : 
, Posbility: 0.0006
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : fn, Posbility: 0.0001
Next Token :  fun, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token : function, Posbility: 0.0004
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0005
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ), Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token : ), Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : ^, Posbility: 0.0004
Next Token : ), Posbility: 0.0012
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : x, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token : ^, Posbility: 0.0003
Next Token : );, Posbility: 0.0013
Next Token :  , Posbility: 0.1191
Next Token : ), Posbility: 0.8789
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0008
Next Token :  , Posbility: 0.0029
Next Token :  in, Posbility: 0.0047
Next Token : 

, Posbility: 0.3730
Next Token : 
, Posbility: 0.6133
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)

 score:False
Error type: noerr
---------------------------
Next Token : 

, Posbility: 0.0026
Next Token : module, Posbility: 0.0052
Next Token : in, Posbility: 0.0072
Next Token : (, Posbility: 0.0077
Next Token : let, Posbility: 0.9414
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0087
Next Token :  all, Posbility: 0.0112
Next Token :  rec, Posbility: 0.0112
Next Token :  count, Posbility: 0.0391
Next Token :  , Posbility: 0.7852
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0029
Next Token : neighbor, Posbility: 0.0029
Next Token : s, Posbility: 0.0043
Next Token : vowel, Posbility: 0.0049
Next Token : neighbors, Posbility: 0.9258
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  of, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : 2, Posbility: 0.0002
Next Token :  =, Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0006
Next Token : with, Posbility: 0.0006
Next Token : all, Posbility: 0.0008
Next Token : and, Posbility: 0.0017
Next Token : of, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _3_, Posbility: 0.0000
Next Token : _4_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : cons, Posbility: 0.0005
Next Token : char, Posbility: 0.0007
Next Token : non, Posbility: 0.0009
Next Token : all, Posbility: 0.0036
Next Token : vowel, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowel
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0008
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  =, Posbility: 0.0059
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : of, Posbility: 0.0003
Next Token : all, Posbility: 0.0004
Next Token : with, Posbility: 0.0004
Next Token : plus, Posbility: 0.0007
Next Token : and, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0000
Next Token : _3_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : two, Posbility: 0.0002
Next Token : other, Posbility: 0.0003
Next Token : all, Posbility: 0.0004
Next Token : vowel, Posbility: 0.0004
Next Token : self, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : s, Posbility: 0.0003
Next Token :  =, Posbility: 0.0012
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : plus, Posbility: 0.0001
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _1_, Posbility: 0.0000
Next Token : _4_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : same, Posbility: 0.0000
Next Token : other, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  =, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : but, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : same, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : as, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : but, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ..., Posbility: 0.0000
Next Token : _1_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : six, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : or, Posbility: 0.0000
Next Token : of, Posbility: 0.0000
Next Token : to, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token : _4_, Posbility: 0.0000
Next Token : _3_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : other, Posbility: 0.0000
Next Token : six, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token :  and, Posbility: 0.0010
Next Token :  =, Posbility: 0.0085
Next Token : _, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : to, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : of, Posbility: 0.0001
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : same, Posbility: 0.0000
Next Token : six, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : other, Posbility: 0.0001
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : 
, Posbility: 0.0005
Next Token : _, Posbility: 0.0041
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  ..., Posbility: 0.0005
Next Token : 
, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : \, Posbility: 0.0003
Next Token : 
, Posbility: 0.0008
Next Token : neighbors, Posbility: 0.0019
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : reduce, Posbility: 0.0000
Next Token : filter, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : 
, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : candidates, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : (, Posbility: 0.0003
Next Token : neighbors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : vo, Posbility: 0.0000
Next Token : avo, Posbility: 0.0000
Next Token : vocab, Posbility: 0.0000
Next Token : voxel, Posbility: 0.0000
Next Token : vowel, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token : S, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_
 score:False
Error type: noerr
---------------------------
Next Token : AND, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : same, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0007
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : as, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : same, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0032
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : as, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token : 
, Posbility: 0.0006
Next Token : _, Posbility: 0.3770
Next Token :  , Posbility: 0.6211
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : ^, Posbility: 0.0003
Next Token : \, Posbility: 0.0004
Next Token : neighbors, Posbility: 0.0046
Next Token : (, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (
 score:False
Error type: noerr
---------------------------
Next Token : fn, Posbility: 0.0001
Next Token :  fun, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : function, Posbility: 0.0007
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^{, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ), Posbility: 0.0001
Next Token : ^, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^{, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token : ^, Posbility: 0.0003
Next Token : ), Posbility: 0.0008
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : x, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ^, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : );, Posbility: 0.0007
Next Token :  , Posbility: 0.0474
Next Token : ), Posbility: 0.9492
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0004
Next Token :  , Posbility: 0.0024
Next Token :  in, Posbility: 0.0040
Next Token : 

, Posbility: 0.3184
Next Token : 
, Posbility: 0.6719
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)

 score:False
Error type: noerr
---------------------------
Next Token : ```, Posbility: 0.0034
Next Token : module, Posbility: 0.0067
Next Token : in, Posbility: 0.0076
Next Token : (, Posbility: 0.0103
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let
 score:False
Error type: noerr
---------------------------
Next Token :  is, Posbility: 0.0071
Next Token :  all, Posbility: 0.0091
Next Token :  rec, Posbility: 0.0117
Next Token :  count, Posbility: 0.0248
Next Token :  , Posbility: 0.8203
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0020
Next Token : n, Posbility: 0.0026
Next Token : s, Posbility: 0.0034
Next Token : vowel, Posbility: 0.0049
Next Token : neighbors, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors
 score:False
Error type: noerr
---------------------------
Next Token :  of, Posbility: 0.0001
Next Token : 2, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0003
Next Token : count, Posbility: 0.0004
Next Token : all, Posbility: 0.0005
Next Token : and, Posbility: 0.0010
Next Token : of, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : _3_, Posbility: 0.0000
Next Token : _4_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0005
Next Token : char, Posbility: 0.0005
Next Token : non, Posbility: 0.0007
Next Token : all, Posbility: 0.0040
Next Token : vowel, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : z, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 0.0005
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token : ,, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 0.0036
Next Token : _, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_
 score:False
Error type: noerr
---------------------------
Next Token : of, Posbility: 0.0002
Next Token : with, Posbility: 0.0002
Next Token : all, Posbility: 0.0002
Next Token : plus, Posbility: 0.0004
Next Token : and, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _3_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_
 score:False
Error type: noerr
---------------------------
Next Token : neighbors, Posbility: 0.0001
Next Token : other, Posbility: 0.0002
Next Token : vowel, Posbility: 0.0002
Next Token : all, Posbility: 0.0003
Next Token : self, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : but, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : _4_, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : same, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : other, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : but, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : all, Posbility: 0.0000
Next Token : this, Posbility: 0.0000
Next Token : same, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0002
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : as, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : but, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ..., Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : same, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0003
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : as, Posbility: 0.0000
Next Token : but, Posbility: 0.0000
Next Token : or, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : _4_, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : this, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : six, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  and, Posbility: 0.0001
Next Token :  =, Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : to, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : of, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : _2_, Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : other, Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : six, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  and, Posbility: 0.0007
Next Token :  =, Posbility: 0.0229
Next Token : _, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : plus, Posbility: 0.0000
Next Token : to, Posbility: 0.0000
Next Token : of, Posbility: 0.0001
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : _2_, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  =, Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : same, Posbility: 0.0000
Next Token : other, Posbility: 0.0001
Next Token : six, Posbility: 0.0001
Next Token : s, Posbility: 0.0001
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0002
Next Token : =, Posbility: 0.0002
Next Token : 
, Posbility: 0.0003
Next Token : _, Posbility: 0.0052
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self =
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0002
Next Token :   , Posbility: 0.0003
Next Token :  ..., Posbility: 0.0005
Next Token : 
, Posbility: 0.0097
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : \, Posbility: 0.0002
Next Token : 
, Posbility: 0.0005
Next Token : neighbors, Posbility: 0.0012
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.
 score:False
Error type: noerr
---------------------------
Next Token : concat, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : filter, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : map, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0009
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map 
 score:False
Error type: noerr
---------------------------
Next Token : candidates, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : neighbors, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_
 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0000
Next Token : for, Posbility: 0.0000
Next Token : and, Posbility: 0.0000
Next Token :  of, Posbility: 0.0000
Next Token : of, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of
 score:False
Error type: noerr
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_
 score:False
Error type: noerr
---------------------------
Next Token : vo, Posbility: 0.0000
Next Token : avo, Posbility: 0.0000
Next Token : vocab, Posbility: 0.0000
Next Token : voxel, Posbility: 0.0000
Next Token : vowel, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowel
 score:False
Error type: noerr
---------------------------
Next Token : S, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : s, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token :  , Posbility: 0.0005
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_
 score:False
Error type: noerr
---------------------------
Next Token : of, Posbility: 0.0000
Next Token : all, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_
 score:False
Error type: noerr
---------------------------
Next Token : sel, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : 和, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : same, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0009
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : as, Posbility: 0.0000
Next Token : with, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : this, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0086
Next Token : _, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_
 score:False
Error type: noerr
---------------------------
Next Token : with, Posbility: 0.0000
Next Token : as, Posbility: 0.0000
Next Token : AND, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Next Token : and, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and
 score:False
Error type: noerr
---------------------------
Next Token : -, Posbility: 0.0000
Next Token :  self, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : same, Posbility: 0.0000
Next Token : Self, Posbility: 0.0000
Next Token : super, Posbility: 0.0000
Next Token : self, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  and, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token : _, Posbility: 0.2227
Next Token :  , Posbility: 0.7773
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self 
 score:False
Error type: noerr
---------------------------
Next Token : ^, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : \, Posbility: 0.0003
Next Token : neighbors, Posbility: 0.0012
Next Token : (, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : fn, Posbility: 0.0000
Next Token :  fun, Posbility: 0.0000
Next Token : function, Posbility: 0.0003
Next Token : fun, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  v, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun 
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ->, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x 
 score:False
Error type: noerr
---------------------------
Next Token : ::, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token :  =>, Posbility: 0.0000
Next Token : →, Posbility: 0.0000
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x ->
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> 
 score:False
Error type: noerr
---------------------------
Next Token : neighbors, Posbility: 0.0000
Next Token : List, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ 
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x 
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ 
 score:False
Error type: noerr
---------------------------
Next Token : y, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x 
 score:False
Error type: noerr
---------------------------
Next Token : ), Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : '^, Posbility: 0.0000
Next Token : ^2, Posbility: 0.0000
Next Token : ^, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^
 score:False
Error type: noerr
---------------------------
Next Token :  ..., Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ 
 score:False
Error type: noerr
---------------------------
Next Token : \, Posbility: 0.0000
Next Token : y, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : x, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ^, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count those characters which have vowels as their neighbors in the given string. *)
let vowels = "aeiouy"
let neighbors = ["a", "e", "i", "o", "u"]
let neighbors_of_vowels = List.map neighbors (fun x -> x ^ x)
let neighbors_of_vowels_and_self = List.map neighbors_of_vowels (fun x -> x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self = List.map neighbors_of_vowels_and_self (fun x -> x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x ^ x ^ x ^ x ^ x)
let neighbors_of_vowels_and_self_and_self_and_self_and_self_and_self_and_self_and_self = List.map neighbors_of_vowels_and_self_and_self_and_self_and_self (fun x -> x ^ x ^ x ^ x 
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>