code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let
 score:0
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  is, Posbility: 0.0152
Next Token :  three, Posbility: 0.0172
Next Token :  count, Posbility: 0.1631
Next Token :  , Posbility: 0.2100
Next Token :  rec, Posbility: 0.4434
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  loop, Posbility: 0.0172
Next Token :  is, Posbility: 0.0250
Next Token :  find, Posbility: 0.0250
Next Token :  , Posbility: 0.2373
Next Token :  count, Posbility: 0.5039
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0091
Next Token : -, Posbility: 0.0103
Next Token :  , Posbility: 0.0359
Next Token :  =, Posbility: 0.0859
Next Token : _, Posbility: 0.8164
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0236
Next Token : items, Posbility: 0.0439
Next Token : equal, Posbility: 0.0723
Next Token : same, Posbility: 0.0820
Next Token : ident, Posbility: 0.4727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_ident
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0061
Next Token : _, Posbility: 0.0167
Next Token : s, Posbility: 0.0167
Next Token :  =, Posbility: 0.0275
Next Token : ical, Posbility: 0.9102
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0292
Next Token : s, Posbility: 0.1309
Next Token :  , Posbility: 0.1680
Next Token :  =, Posbility: 0.1680
Next Token : _, Posbility: 0.4551
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : three, Posbility: 0.0454
Next Token : position, Posbility: 0.0659
Next Token : positions, Posbility: 0.0659
Next Token : in, Posbility: 0.1089
Next Token : items, Posbility: 0.2305
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0317
Next Token :  i, Posbility: 0.0408
Next Token : _, Posbility: 0.1426
Next Token :  =, Posbility: 0.1826
Next Token :  , Posbility: 0.4375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0479
Next Token : n, Posbility: 0.0542
Next Token : lst, Posbility: 0.0615
Next Token : x, Posbility: 0.1670
Next Token : (, Posbility: 0.2754
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : i, Posbility: 0.0371
Next Token : x, Posbility: 0.0889
Next Token : list, Posbility: 0.0889
Next Token : a, Posbility: 0.1143
Next Token : l, Posbility: 0.1465
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  , Posbility: 0.0192
Next Token : 0,, Posbility: 0.0217
Next Token : ,, Posbility: 0.0247
Next Token : 1,, Posbility: 0.4375
Next Token : 1, Posbility: 0.4375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : _, Posbility: 0.0186
Next Token :  l, Posbility: 0.0835
Next Token : ::, Posbility: 0.0835
Next Token : :, Posbility: 0.1377
Next Token :  , Posbility: 0.6172
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : r, Posbility: 0.0005
Next Token : ;, Posbility: 0.0010
Next Token : ,, Posbility: 0.0052
Next Token : ::, Posbility: 0.1055
Next Token : :, Posbility: 0.8828
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 :
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  string, Posbility: 0.0830
Next Token :  ', Posbility: 0.1367
Next Token :  int, Posbility: 0.1758
Next Token :  list, Posbility: 0.2256
Next Token :  , Posbility: 0.2891
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : [', Posbility: 0.0371
Next Token : (, Posbility: 0.0476
Next Token : seq, Posbility: 0.0540
Next Token : t, Posbility: 0.1289
Next Token : List, Posbility: 0.3984
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  int, Posbility: 0.0298
Next Token : <, Posbility: 0.0557
Next Token :  , Posbility: 0.0811
Next Token : ), Posbility: 0.1514
Next Token : ., Posbility: 0.5273
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : list, Posbility: 0.0013
Next Token : (, Posbility: 0.0015
Next Token : List, Posbility: 0.0084
Next Token : T, Posbility: 0.1157
Next Token : t, Posbility: 0.8555
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0013
Next Token : ,, Posbility: 0.0019
Next Token :  *), Posbility: 0.0021
Next Token :  , Posbility: 0.0108
Next Token : ), Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0014
Next Token : 
, Posbility: 0.0072
Next Token :  =, Posbility: 0.0135
Next Token :  l, Posbility: 0.0251
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0005
Next Token : n, Posbility: 0.0005
Next Token : 
, Posbility: 0.0008
Next Token : :, Posbility: 0.0109
Next Token : (, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : n, Posbility: 0.0006
Next Token : list, Posbility: 0.0012
Next Token : r, Posbility: 0.0024
Next Token : i, Posbility: 0.0028
Next Token : l, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 2), Posbility: 0.0003
Next Token : 3, Posbility: 0.0004
Next Token :  , Posbility: 0.0004
Next Token : 1, Posbility: 0.0019
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :  =, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : :, Posbility: 0.0017
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 :
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :  list, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  int, Posbility: 0.0003
Next Token : List, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : Seq, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token : ),, Posbility: 0.0001
Next Token : ):, Posbility: 0.0003
Next Token :  , Posbility: 0.0007
Next Token : ), Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0071
Next Token : 
, Posbility: 0.0103
Next Token :  l, Posbility: 0.0117
Next Token :  =, Posbility: 0.1250
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0017
Next Token : (), Posbility: 0.0084
Next Token : n, Posbility: 0.0157
Next Token : :, Posbility: 0.0903
Next Token : (, Posbility: 0.8594
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : list, Posbility: 0.0093
Next Token : pos, Posbility: 0.0105
Next Token : n, Posbility: 0.0153
Next Token : i, Posbility: 0.0471
Next Token : l, Posbility: 0.8359
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 1, Posbility: 0.0004
Next Token : 2, Posbility: 0.0005
Next Token :  , Posbility: 0.0010
Next Token : _, Posbility: 0.0012
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ), Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : :, Posbility: 0.0007
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ::, Posbility: 0.0000
Next Token : :, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 :
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  int, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token : List, Posbility: 0.0006
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : 
 score:False
Error type: Syntaxerr.Expecting_continue
---------------------------
Next Token : Array, Posbility: 0.0000
Next Token : Option, Posbility: 0.0000
Next Token : Int, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : t, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t
 score:False
Error type: Syntaxerr.Unclosed_continue
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : ):, Posbility: 0.0009
Next Token : ), Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t)
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  acc, Posbility: 0.0265
Next Token : 
, Posbility: 0.0300
Next Token :  i, Posbility: 0.0300
Next Token :  , Posbility: 0.1523
Next Token :  =, Posbility: 0.6836
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  function, Posbility: 0.0020
Next Token : 

, Posbility: 0.0038
Next Token :  match, Posbility: 0.0244
Next Token :  , Posbility: 0.0457
Next Token : 
, Posbility: 0.9180
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : let, Posbility: 0.0033
Next Token : 	, Posbility: 0.0062
Next Token :    , Posbility: 0.0091
Next Token :     , Posbility: 0.1611
Next Token :   , Posbility: 0.8164
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0085
Next Token : List, Posbility: 0.0264
Next Token : let, Posbility: 0.1182
Next Token : if, Posbility: 0.2207
Next Token : match, Posbility: 0.6016
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0089
Next Token :  String, Posbility: 0.0114
Next Token :  [, Posbility: 0.0146
Next Token :  l, Posbility: 0.1387
Next Token :  , Posbility: 0.8008
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : L, Posbility: 0.0048
Next Token : Seq, Posbility: 0.0101
Next Token : Compare, Posbility: 0.0115
Next Token : (, Posbility: 0.3789
Next Token : List, Posbility: 0.5508
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : Compare, Posbility: 0.0001
Next Token : _, Posbility: 0.0004
Next Token : s, Posbility: 0.0005
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : find, Posbility: 0.0820
Next Token : zip, Posbility: 0.0820
Next Token : fold, Posbility: 0.0928
Next Token : mem, Posbility: 0.1050
Next Token : length, Posbility: 0.1533
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0059
Next Token :  with, Posbility: 0.0160
Next Token : (, Posbility: 0.0262
Next Token :  , Posbility: 0.0713
Next Token :  l, Posbility: 0.8711
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0105
Next Token : 2, Posbility: 0.0286
Next Token : 3, Posbility: 0.0286
Next Token : 1,, Posbility: 0.3477
Next Token : 1, Posbility: 0.5742
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  and, Posbility: 0.0072
Next Token :  l, Posbility: 0.0119
Next Token :  =, Posbility: 0.0322
Next Token :  , Posbility: 0.0879
Next Token :  with, Posbility: 0.8320
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0003
Next Token :   , Posbility: 0.0015
Next Token :  , Posbility: 0.0019
Next Token : 

, Posbility: 0.0025
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0003
Next Token :       , Posbility: 0.0013
Next Token :    , Posbility: 0.0013
Next Token :     , Posbility: 0.0330
Next Token :   , Posbility: 0.9648
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : [, Posbility: 0.0001
Next Token : case, Posbility: 0.0002
Next Token : 0, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0059
Next Token :  1, Posbility: 0.0160
Next Token :  , Posbility: 0.0437
Next Token :  [], Posbility: 0.0437
Next Token :  0, Posbility: 0.8750
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0049
Next Token :  when, Posbility: 0.0055
Next Token :  =>, Posbility: 0.0092
Next Token :  |, Posbility: 0.0281
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ,, Posbility: 0.0001
Next Token : →, Posbility: 0.0002
Next Token : ::, Posbility: 0.0005
Next Token : if, Posbility: 0.0025
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0659
Next Token :  [], Posbility: 0.0659
Next Token :  match, Posbility: 0.0659
Next Token :  0, Posbility: 0.1797
Next Token :  , Posbility: 0.4883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0214
Next Token : (, Posbility: 0.0354
Next Token : (), Posbility: 0.2305
Next Token : List, Posbility: 0.2617
Next Token : return, Posbility: 0.2949
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return
 score:False
Error type: noerr
---------------------------
Next Token :  !, Posbility: 0.0425
Next Token :  [], Posbility: 0.1157
Next Token :  l, Posbility: 0.1157
Next Token :  , Posbility: 0.3145
Next Token :  0, Posbility: 0.3145
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
 score:False
Error type: noerr
---------------------------
Next Token :  |, Posbility: 0.0024
Next Token :   , Posbility: 0.0031
Next Token : L, Posbility: 0.0039
Next Token :  , Posbility: 0.0156
Next Token : 
, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  
 score:False
Error type: noerr
---------------------------
Next Token : else, Posbility: 0.0001
Next Token : ;, Posbility: 0.0001
Next Token : when, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : |, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0398
Next Token :  l, Posbility: 0.0654
Next Token :  i, Posbility: 0.0654
Next Token :  1, Posbility: 0.2949
Next Token :  , Posbility: 0.4844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0060
Next Token : length, Posbility: 0.0393
Next Token : x, Posbility: 0.0571
Next Token : n, Posbility: 0.3730
Next Token : _, Posbility: 0.4785
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  as, Posbility: 0.0016
Next Token :   , Posbility: 0.0034
Next Token : ,, Posbility: 0.0034
Next Token :  when, Posbility: 0.0286
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : -, Posbility: 0.0002
Next Token : →, Posbility: 0.0003
Next Token : ::, Posbility: 0.0039
Next Token : if, Posbility: 0.0330
Next Token : ->, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0073
Next Token :  {, Posbility: 0.0094
Next Token :  match, Posbility: 0.1143
Next Token :  , Posbility: 0.1885
Next Token : 
, Posbility: 0.6602
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0047
Next Token :      , Posbility: 0.0069
Next Token :   , Posbility: 0.0165
Next Token :       , Posbility: 0.4258
Next Token :     , Posbility: 0.5469
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0153
Next Token : List, Posbility: 0.0197
Next Token : if, Posbility: 0.1865
Next Token : match, Posbility: 0.2393
Next Token : let, Posbility: 0.5078
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  len, Posbility: 0.0403
Next Token :  count, Posbility: 0.0403
Next Token :  l, Posbility: 0.1807
Next Token :  rec, Posbility: 0.1807
Next Token :  , Posbility: 0.2969
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : item, Posbility: 0.0449
Next Token : ident, Posbility: 0.0579
Next Token : x, Posbility: 0.0742
Next Token : (, Posbility: 0.1079
Next Token : n, Posbility: 0.1777
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0073
Next Token : 2, Posbility: 0.0082
Next Token : _, Posbility: 0.0420
Next Token : 1, Posbility: 0.2412
Next Token :  =, Posbility: 0.6562
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0299
Next Token :  match, Posbility: 0.0299
Next Token : 
, Posbility: 0.0815
Next Token :  count, Posbility: 0.2207
Next Token :  , Posbility: 0.6016
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0261
Next Token : length, Posbility: 0.0261
Next Token : ref, Posbility: 0.0261
Next Token : if, Posbility: 0.0378
Next Token : List, Posbility: 0.7617
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : Compare, Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0172
Next Token : mem, Posbility: 0.0221
Next Token : find, Posbility: 0.0284
Next Token : fold, Posbility: 0.0364
Next Token : length, Posbility: 0.8320
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0038
Next Token : _, Posbility: 0.0063
Next Token : (, Posbility: 0.0103
Next Token :  , Posbility: 0.0461
Next Token :  l, Posbility: 0.9258
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2,, Posbility: 0.0039
Next Token : 1,, Posbility: 0.0083
Next Token : 3, Posbility: 0.0479
Next Token : 2, Posbility: 0.3535
Next Token : 1, Posbility: 0.5820
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0050
Next Token : 
, Posbility: 0.0064
Next Token :  , Posbility: 0.0082
Next Token :  =, Posbility: 0.0173
Next Token :  in, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0004
Next Token :  match, Posbility: 0.0005
Next Token : 

, Posbility: 0.0025
Next Token :  , Posbility: 0.0052
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0003
Next Token :       , Posbility: 0.0031
Next Token :    , Posbility: 0.0140
Next Token :     , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0220
Next Token : List, Posbility: 0.0464
Next Token : match, Posbility: 0.1621
Next Token : if, Posbility: 0.2676
Next Token : let, Posbility: 0.4414
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0172
Next Token :  i, Posbility: 0.0469
Next Token :  rec, Posbility: 0.1270
Next Token :  l, Posbility: 0.2100
Next Token :  , Posbility: 0.3457
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0471
Next Token : x, Posbility: 0.0605
Next Token : ident, Posbility: 0.0605
Next Token : m, Posbility: 0.0996
Next Token : n, Posbility: 0.1650
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0356
Next Token :  =, Posbility: 0.1245
Next Token : _, Posbility: 0.1592
Next Token : 2, Posbility: 0.2637
Next Token : 1, Posbility: 0.2988
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : l, Posbility: 0.0009
Next Token : n, Posbility: 0.0013
Next Token :  , Posbility: 0.0045
Next Token : _, Posbility: 0.0051
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0118
Next Token :  l, Posbility: 0.0195
Next Token : 
, Posbility: 0.0530
Next Token :  count, Posbility: 0.2373
Next Token :  , Posbility: 0.6445
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0117
Next Token : (, Posbility: 0.0317
Next Token : if, Posbility: 0.0361
Next Token : n, Posbility: 0.1260
Next Token : List, Posbility: 0.7227
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0154
Next Token : find, Posbility: 0.0198
Next Token : count, Posbility: 0.0198
Next Token : mem, Posbility: 0.0198
Next Token : length, Posbility: 0.8398
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0013
Next Token : _, Posbility: 0.0027
Next Token : (, Posbility: 0.0064
Next Token :  , Posbility: 0.0289
Next Token :  l, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0002
Next Token : 2,, Posbility: 0.0009
Next Token : 3, Posbility: 0.0031
Next Token : 1, Posbility: 0.0371
Next Token : 2, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0009
Next Token :  +, Posbility: 0.0009
Next Token :  , Posbility: 0.0010
Next Token :  with, Posbility: 0.0025
Next Token :  in, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :   , Posbility: 0.0003
Next Token : 

, Posbility: 0.0005
Next Token :  , Posbility: 0.0046
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :       , Posbility: 0.0009
Next Token :    , Posbility: 0.0012
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0036
Next Token : List, Posbility: 0.0036
Next Token : match, Posbility: 0.0432
Next Token : if, Posbility: 0.0713
Next Token : let, Posbility: 0.8672
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0010
Next Token :  i, Posbility: 0.0019
Next Token :  rec, Posbility: 0.0021
Next Token :  l, Posbility: 0.0040
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0007
Next Token : x, Posbility: 0.0007
Next Token : r, Posbility: 0.0007
Next Token : m, Posbility: 0.0031
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 12, Posbility: 0.0003
Next Token : 1, Posbility: 0.0004
Next Token :  =, Posbility: 0.0005
Next Token : 3, Posbility: 0.0110
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token : =, Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :  l, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  count, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : if, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0052
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : find, Posbility: 0.0000
Next Token : filter, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0004
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 2, Posbility: 0.0032
Next Token : 3, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  with, Posbility: 0.0002
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :  in, Posbility: 0.0002
Next Token :  , Posbility: 0.0010
Next Token : 

, Posbility: 0.0259
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0001
Next Token :   , Posbility: 0.0004
Next Token :       , Posbility: 0.0008
Next Token :    , Posbility: 0.0140
Next Token :     , Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0082
Next Token : (, Posbility: 0.0135
Next Token : match, Posbility: 0.0996
Next Token : let, Posbility: 0.2715
Next Token : if, Posbility: 0.5742
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  String, Posbility: 0.0013
Next Token :  ((, Posbility: 0.0057
Next Token :  not, Posbility: 0.0065
Next Token : 
, Posbility: 0.0107
Next Token :  , Posbility: 0.9648
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token : Int, Posbility: 0.0003
Next Token : List, Posbility: 0.0171
Next Token : (, Posbility: 0.0464
Next Token : n, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0284
Next Token :  !=, Posbility: 0.0366
Next Token :  , Posbility: 0.0996
Next Token :  =, Posbility: 0.3477
Next Token : 1, Posbility: 0.4453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0226
Next Token :  ==, Posbility: 0.0226
Next Token :  !=, Posbility: 0.0615
Next Token :  , Posbility: 0.3125
Next Token :  =, Posbility: 0.5156
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : ?, Posbility: 0.0003
Next Token :  1, Posbility: 0.0059
Next Token :  0, Posbility: 0.1182
Next Token :  , Posbility: 0.8750
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : 2, Posbility: 0.0003
Next Token : 3, Posbility: 0.0009
Next Token : List, Posbility: 0.0025
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0082
Next Token :  , Posbility: 0.0135
Next Token :  &&, Posbility: 0.0781
Next Token :  and, Posbility: 0.1289
Next Token : 2, Posbility: 0.7422
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0063
Next Token :  &&, Posbility: 0.0598
Next Token :  then, Posbility: 0.0869
Next Token :  and, Posbility: 0.1836
Next Token :  =, Posbility: 0.6406
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0002
Next Token :  ?, Posbility: 0.0002
Next Token :  1, Posbility: 0.0015
Next Token :  0, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0005
Next Token : 2, Posbility: 0.0005
Next Token : 3, Posbility: 0.0015
Next Token : List, Posbility: 0.0041
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  =, Posbility: 0.0342
Next Token :  *, Posbility: 0.0342
Next Token :  &&, Posbility: 0.0564
Next Token :  and, Posbility: 0.1196
Next Token :  then, Posbility: 0.6875
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0034
Next Token :  match, Posbility: 0.0073
Next Token :  count, Posbility: 0.0082
Next Token :  , Posbility: 0.3105
Next Token : 
, Posbility: 0.6562
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0015
Next Token :     , Posbility: 0.0031
Next Token :         , Posbility: 0.0084
Next Token :      , Posbility: 0.0156
Next Token :       , Posbility: 0.9688
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0649
Next Token : List, Posbility: 0.1069
Next Token : if, Posbility: 0.1553
Next Token : return, Posbility: 0.2559
Next Token : let, Posbility: 0.3281
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0198
Next Token :  i, Posbility: 0.0327
Next Token :  rec, Posbility: 0.0889
Next Token :  l, Posbility: 0.2412
Next Token :  , Posbility: 0.3984
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0354
Next Token : (, Posbility: 0.0752
Next Token : x, Posbility: 0.0850
Next Token : ident, Posbility: 0.1089
Next Token : n, Posbility: 0.1235
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0220
Next Token : _, Posbility: 0.0986
Next Token : 3, Posbility: 0.1118
Next Token : 1, Posbility: 0.2363
Next Token :  =, Posbility: 0.3906
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0150
Next Token :  0, Posbility: 0.0408
Next Token : 
, Posbility: 0.0408
Next Token :  count, Posbility: 0.0408
Next Token :  , Posbility: 0.8164
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0219
Next Token : if, Posbility: 0.0281
Next Token : ref, Posbility: 0.0408
Next Token : n, Posbility: 0.2656
Next Token : List, Posbility: 0.5625
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0075
Next Token : iter, Posbility: 0.0075
Next Token : map, Posbility: 0.0204
Next Token : fold, Posbility: 0.0552
Next Token : length, Posbility: 0.8633
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0013
Next Token :  [, Posbility: 0.0021
Next Token : (, Posbility: 0.0157
Next Token :  , Posbility: 0.1162
Next Token :  l, Posbility: 0.8594
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0016
Next Token :  in, Posbility: 0.0074
Next Token : 2, Posbility: 0.0425
Next Token : 3, Posbility: 0.0898
Next Token : 1, Posbility: 0.8555
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0012
Next Token :  +, Posbility: 0.0022
Next Token :  , Posbility: 0.0031
Next Token :  *, Posbility: 0.0031
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :   , Posbility: 0.0002
Next Token :  [, Posbility: 0.0003
Next Token :  , Posbility: 0.0036
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0007
Next Token :      , Posbility: 0.0110
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0649
Next Token : return, Posbility: 0.0835
Next Token : List, Posbility: 0.0947
Next Token : if, Posbility: 0.1562
Next Token : let, Posbility: 0.5430
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0222
Next Token :  i, Posbility: 0.0603
Next Token :  rec, Posbility: 0.0603
Next Token :  l, Posbility: 0.1641
Next Token :  , Posbility: 0.4453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0317
Next Token : ident, Posbility: 0.0361
Next Token : m, Posbility: 0.0525
Next Token : x, Posbility: 0.0767
Next Token : n, Posbility: 0.3887
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0244
Next Token : 3, Posbility: 0.0244
Next Token : 2, Posbility: 0.0403
Next Token :  =, Posbility: 0.2314
Next Token : 1, Posbility: 0.6289
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0017
Next Token : n, Posbility: 0.0019
Next Token : _, Posbility: 0.0021
Next Token :  , Posbility: 0.0045
Next Token :  =, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0063
Next Token :  l, Posbility: 0.0170
Next Token : 
, Posbility: 0.0170
Next Token :  count, Posbility: 0.0170
Next Token :  , Posbility: 0.9258
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0023
Next Token : Array, Posbility: 0.0034
Next Token : (, Posbility: 0.0039
Next Token : n, Posbility: 0.0286
Next Token : List, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : Ext, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0030
Next Token : fold, Posbility: 0.0039
Next Token : mem, Posbility: 0.0039
Next Token : map, Posbility: 0.0082
Next Token : length, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : _, Posbility: 0.0005
Next Token : (, Posbility: 0.0009
Next Token :  , Posbility: 0.0046
Next Token :  l, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 3, Posbility: 0.0103
Next Token : 1, Posbility: 0.0593
Next Token : 2, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0001
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0062
Next Token : return, Posbility: 0.0170
Next Token : List, Posbility: 0.0170
Next Token : if, Posbility: 0.0278
Next Token : let, Posbility: 0.9219
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0019
Next Token :  i, Posbility: 0.0024
Next Token :  rec, Posbility: 0.0024
Next Token :  l, Posbility: 0.0137
Next Token :  , Posbility: 0.9609
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0015
Next Token : s, Posbility: 0.0015
Next Token : m, Posbility: 0.0019
Next Token : x, Posbility: 0.0031
Next Token : n, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0005
Next Token : 1, Posbility: 0.0006
Next Token :  =, Posbility: 0.0066
Next Token : 3, Posbility: 0.0066
Next Token : 2, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  l, Posbility: 0.0005
Next Token :  count, Posbility: 0.0005
Next Token :  0, Posbility: 0.0007
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : if, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : n, Posbility: 0.0110
Next Token : List, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : filter, Posbility: 0.0000
Next Token : map, Posbility: 0.0000
Next Token : mem, Posbility: 0.0001
Next Token : count, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0006
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0002
Next Token : 2, Posbility: 0.0012
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token : 

, Posbility: 0.0015
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0001
Next Token :     , Posbility: 0.0004
Next Token :         , Posbility: 0.0005
Next Token :      , Posbility: 0.0140
Next Token :       , Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0464
Next Token : return, Posbility: 0.0525
Next Token : match, Posbility: 0.0596
Next Token : if, Posbility: 0.3438
Next Token : let, Posbility: 0.4395
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0189
Next Token :  i, Posbility: 0.0515
Next Token :  l, Posbility: 0.1406
Next Token :  rec, Posbility: 0.1406
Next Token :  , Posbility: 0.3809
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0413
Next Token : m, Posbility: 0.0413
Next Token : x, Posbility: 0.0771
Next Token : ident, Posbility: 0.0874
Next Token : n, Posbility: 0.2373
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 12, Posbility: 0.0273
Next Token : _, Posbility: 0.0845
Next Token : 1, Posbility: 0.1387
Next Token : 3, Posbility: 0.2949
Next Token :  =, Posbility: 0.3340
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0122
Next Token :  match, Posbility: 0.0156
Next Token :  count, Posbility: 0.0201
Next Token : 
, Posbility: 0.0258
Next Token :  , Posbility: 0.8555
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0275
Next Token : (, Posbility: 0.0352
Next Token : if, Posbility: 0.0747
Next Token : n, Posbility: 0.2598
Next Token : List, Posbility: 0.4863
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2., Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0076
Next Token : mem, Posbility: 0.0076
Next Token : map, Posbility: 0.0126
Next Token : fold, Posbility: 0.0208
Next Token : length, Posbility: 0.8789
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ((, Posbility: 0.0035
Next Token :  [, Posbility: 0.0058
Next Token : (, Posbility: 0.0095
Next Token :  , Posbility: 0.1157
Next Token :  l, Posbility: 0.8555
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0023
Next Token :  in, Posbility: 0.0049
Next Token : 2, Posbility: 0.0221
Next Token : 3, Posbility: 0.0283
Next Token : 1, Posbility: 0.9375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0012
Next Token :  *, Posbility: 0.0012
Next Token :  , Posbility: 0.0028
Next Token :  +, Posbility: 0.0046
Next Token :  in, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  match, Posbility: 0.0003
Next Token : 

, Posbility: 0.0007
Next Token :  , Posbility: 0.0041
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0001
Next Token :     , Posbility: 0.0008
Next Token :         , Posbility: 0.0010
Next Token :      , Posbility: 0.0203
Next Token :       , Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0535
Next Token : List, Posbility: 0.0605
Next Token : return, Posbility: 0.0688
Next Token : if, Posbility: 0.1865
Next Token : let, Posbility: 0.5742
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0126
Next Token :  i, Posbility: 0.0267
Next Token :  rec, Posbility: 0.0344
Next Token :  l, Posbility: 0.0728
Next Token :  , Posbility: 0.6914
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0112
Next Token : r, Posbility: 0.0112
Next Token : m, Posbility: 0.0143
Next Token : x, Posbility: 0.0304
Next Token : n, Posbility: 0.7812
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0064
Next Token : 2, Posbility: 0.0082
Next Token : 3, Posbility: 0.0135
Next Token :  =, Posbility: 0.2119
Next Token : 1, Posbility: 0.7422
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ', Posbility: 0.0003
Next Token : n, Posbility: 0.0004
Next Token : _, Posbility: 0.0006
Next Token :  , Posbility: 0.0019
Next Token :  =, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token :  count, Posbility: 0.0009
Next Token : 
, Posbility: 0.0019
Next Token :  0, Posbility: 0.0019
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0002
Next Token : if, Posbility: 0.0006
Next Token : (, Posbility: 0.0010
Next Token : n, Posbility: 0.0096
Next Token : List, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Ext, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : find, Posbility: 0.0003
Next Token : map, Posbility: 0.0003
Next Token : count, Posbility: 0.0004
Next Token : mem, Posbility: 0.0007
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 3, Posbility: 0.0040
Next Token : 1, Posbility: 0.0085
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  match, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0032
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0098
Next Token : List, Posbility: 0.0162
Next Token : return, Posbility: 0.0208
Next Token : if, Posbility: 0.0566
Next Token : let, Posbility: 0.8867
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0013
Next Token :  i, Posbility: 0.0015
Next Token :  rec, Posbility: 0.0027
Next Token :  l, Posbility: 0.0066
Next Token :  , Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0006
Next Token : m, Posbility: 0.0007
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 0.0019
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0006
Next Token : 1, Posbility: 0.0011
Next Token : 3, Posbility: 0.0039
Next Token :  =, Posbility: 0.0291
Next Token : 2, Posbility: 0.9648
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : =, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token : 
, Posbility: 0.0004
Next Token :  0, Posbility: 0.0004
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0046
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : map, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0004
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0002
Next Token : 2, Posbility: 0.0007
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :       , Posbility: 0.0000
Next Token :  [, Posbility: 0.0000
Next Token :  , Posbility: 0.0006
Next Token : 

, Posbility: 0.0017
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0001
Next Token :         , Posbility: 0.0005
Next Token :     , Posbility: 0.0005
Next Token :      , Posbility: 0.0179
Next Token :       , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0498
Next Token : match, Posbility: 0.0564
Next Token : return, Posbility: 0.0820
Next Token : let, Posbility: 0.3672
Next Token : if, Posbility: 0.3672
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0019
Next Token :  not, Posbility: 0.0031
Next Token : 
, Posbility: 0.0051
Next Token :  ((, Posbility: 0.0051
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ref, Posbility: 0.0012
Next Token : Seq, Posbility: 0.0017
Next Token : (, Posbility: 0.0439
Next Token : List, Posbility: 0.0564
Next Token : n, Posbility: 0.8828
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0045
Next Token :  ==, Posbility: 0.0058
Next Token :  , Posbility: 0.0258
Next Token :  =, Posbility: 0.0898
Next Token : 1, Posbility: 0.8555
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0081
Next Token :  <=, Posbility: 0.0092
Next Token :  +, Posbility: 0.0194
Next Token :  , Posbility: 0.1118
Next Token :  =, Posbility: 0.8281
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token :  4, Posbility: 0.0001
Next Token :  1, Posbility: 0.0064
Next Token :  0, Posbility: 0.0471
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0012
Next Token : List, Posbility: 0.0012
Next Token : 3, Posbility: 0.0019
Next Token : 2, Posbility: 0.0025
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  then, Posbility: 0.0063
Next Token : 1, Posbility: 0.0103
Next Token :  &&, Posbility: 0.0170
Next Token :  and, Posbility: 0.0281
Next Token : 2, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0063
Next Token :  &&, Posbility: 0.0366
Next Token :  and, Posbility: 0.0771
Next Token :  then, Posbility: 0.1279
Next Token :  =, Posbility: 0.7344
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token :  2*, Posbility: 0.0001
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0007
Next Token : 3, Posbility: 0.0007
Next Token : (, Posbility: 0.0009
Next Token : List, Posbility: 0.0025
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0039
Next Token : 1, Posbility: 0.0064
Next Token :  and, Posbility: 0.0106
Next Token :  &&, Posbility: 0.0106
Next Token :  then, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0034
Next Token :  count, Posbility: 0.0064
Next Token :  0, Posbility: 0.0093
Next Token :  , Posbility: 0.3086
Next Token : 
, Posbility: 0.6562
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0011
Next Token :           , Posbility: 0.0021
Next Token : 	, Posbility: 0.0084
Next Token :        , Posbility: 0.0123
Next Token :         , Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0295
Next Token : if, Posbility: 0.0430
Next Token : List, Posbility: 0.1494
Next Token : let, Posbility: 0.3164
Next Token : return, Posbility: 0.3594
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0713
Next Token :  l, Posbility: 0.0713
Next Token : 
, Posbility: 0.0713
Next Token :  1, Posbility: 0.0713
Next Token :  , Posbility: 0.5273
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0339
Next Token : if, Posbility: 0.0383
Next Token : (, Posbility: 0.1182
Next Token : List, Posbility: 0.1719
Next Token : n, Posbility: 0.5312
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0464
Next Token :  *, Posbility: 0.0525
Next Token : ;, Posbility: 0.0674
Next Token : 1, Posbility: 0.3418
Next Token : 
, Posbility: 0.4395
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0008
Next Token :         , Posbility: 0.0015
Next Token :      , Posbility: 0.0024
Next Token :     , Posbility: 0.0075
Next Token :       , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      
 score:False
Error type: noerr
---------------------------
Next Token : els, Posbility: 0.0004
Next Token : let, Posbility: 0.0006
Next Token : end, Posbility: 0.0007
Next Token : elif, Posbility: 0.0046
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0061
Next Token :  {, Posbility: 0.0079
Next Token :  match, Posbility: 0.0089
Next Token :  , Posbility: 0.3340
Next Token : 
, Posbility: 0.6250
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0005
Next Token : 	, Posbility: 0.0007
Next Token :       , Posbility: 0.0019
Next Token :        , Posbility: 0.0179
Next Token :         , Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0330
Next Token : List, Posbility: 0.0371
Next Token : if, Posbility: 0.0613
Next Token : let, Posbility: 0.2432
Next Token : return, Posbility: 0.5156
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0095
Next Token :  0;, Posbility: 0.0095
Next Token :  , Posbility: 0.1914
Next Token :  count, Posbility: 0.1914
Next Token :  0, Posbility: 0.5195
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0027
Next Token :  , Posbility: 0.0050
Next Token :  +, Posbility: 0.0073
Next Token : 

, Posbility: 0.0253
Next Token : 
, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0027
Next Token : else, Posbility: 0.0044
Next Token :       , Posbility: 0.0064
Next Token :   , Posbility: 0.0287
Next Token :     , Posbility: 0.9531
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    
 score:False
Error type: noerr
---------------------------
Next Token : els, Posbility: 0.0009
Next Token : let, Posbility: 0.0011
Next Token : elif, Posbility: 0.0019
Next Token : end, Posbility: 0.0179
Next Token : else, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0036
Next Token :  0, Posbility: 0.0076
Next Token :  match, Posbility: 0.0085
Next Token :  , Posbility: 0.1953
Next Token : 
, Posbility: 0.7695
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :    , Posbility: 0.0011
Next Token :         , Posbility: 0.0065
Next Token :      , Posbility: 0.0107
Next Token :     , Posbility: 0.0138
Next Token :       , Posbility: 0.9688
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0250
Next Token : match, Posbility: 0.0320
Next Token : if, Posbility: 0.1436
Next Token : return, Posbility: 0.3457
Next Token : let, Posbility: 0.3906
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  v, Posbility: 0.0154
Next Token :  i, Posbility: 0.0420
Next Token :  l, Posbility: 0.0537
Next Token :  rec, Posbility: 0.1465
Next Token :  , Posbility: 0.5117
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0312
Next Token : f, Posbility: 0.0312
Next Token : m, Posbility: 0.0515
Next Token : x, Posbility: 0.0752
Next Token : n, Posbility: 0.3359
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0045
Next Token : 3, Posbility: 0.0124
Next Token : _, Posbility: 0.0159
Next Token : 1, Posbility: 0.1709
Next Token :  =, Posbility: 0.7656
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  l, Posbility: 0.0063
Next Token :  count, Posbility: 0.0104
Next Token : 
, Posbility: 0.0104
Next Token :  Math, Posbility: 0.0104
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0166
Next Token : min, Posbility: 0.0214
Next Token : if, Posbility: 0.0242
Next Token : n, Posbility: 0.1084
Next Token : List, Posbility: 0.8008
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : fold, Posbility: 0.0024
Next Token : mem, Posbility: 0.0031
Next Token : find, Posbility: 0.0031
Next Token : min, Posbility: 0.0051
Next Token : length, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0007
Next Token :  max, Posbility: 0.0019
Next Token : (, Posbility: 0.0050
Next Token :  , Posbility: 0.0289
Next Token :  l, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0002
Next Token :  in, Posbility: 0.0051
Next Token : 3, Posbility: 0.0066
Next Token : 2, Posbility: 0.0109
Next Token : 1, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0013
Next Token :  *, Posbility: 0.0015
Next Token :  , Posbility: 0.0017
Next Token :  +, Posbility: 0.0036
Next Token :  in, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Next Token :  , Posbility: 0.0008
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :           , Posbility: 0.0001
Next Token :         , Posbility: 0.0013
Next Token :      , Posbility: 0.0019
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0022
Next Token : match, Posbility: 0.0037
Next Token : return, Posbility: 0.0165
Next Token : if, Posbility: 0.0737
Next Token : let, Posbility: 0.8984
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0039
Next Token :  rec, Posbility: 0.0049
Next Token :  i, Posbility: 0.0082
Next Token :  l, Posbility: 0.0105
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0024
Next Token : r, Posbility: 0.0024
Next Token : x, Posbility: 0.0030
Next Token : m, Posbility: 0.0136
Next Token : n, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0018
Next Token : 3, Posbility: 0.0023
Next Token : 2, Posbility: 0.0081
Next Token :  =, Posbility: 0.0466
Next Token : 1, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : a, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token :  , Posbility: 0.0006
Next Token : _, Posbility: 0.0006
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0009
Next Token :  l, Posbility: 0.0012
Next Token :  0, Posbility: 0.0012
Next Token : 
, Posbility: 0.0015
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0004
Next Token : if, Posbility: 0.0011
Next Token : (, Posbility: 0.0021
Next Token : n, Posbility: 0.0292
Next Token : List, Posbility: 0.9648
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : member, Posbility: 0.0001
Next Token : count, Posbility: 0.0001
Next Token : find, Posbility: 0.0002
Next Token : mem, Posbility: 0.0004
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token :  , Posbility: 0.0012
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 1, Posbility: 0.0052
Next Token : 3, Posbility: 0.0067
Next Token : 2, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0004
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0007
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0023
Next Token : match, Posbility: 0.0023
Next Token : return, Posbility: 0.0170
Next Token : if, Posbility: 0.0464
Next Token : let, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0015
Next Token :  k, Posbility: 0.0015
Next Token :  i, Posbility: 0.0024
Next Token :  l, Posbility: 0.0031
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : c, Posbility: 0.0011
Next Token : r, Posbility: 0.0015
Next Token : x, Posbility: 0.0019
Next Token : m, Posbility: 0.0051
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0005
Next Token : 1, Posbility: 0.0009
Next Token : 3, Posbility: 0.0064
Next Token :  =, Posbility: 0.0369
Next Token : 2, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token : _, Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  count, Posbility: 0.0004
Next Token :  1, Posbility: 0.0004
Next Token : 
, Posbility: 0.0008
Next Token :  0, Posbility: 0.0008
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0003
Next Token : if, Posbility: 0.0010
Next Token : (, Posbility: 0.0015
Next Token : n, Posbility: 0.0228
Next Token : List, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : min, Posbility: 0.0000
Next Token : find, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : mem, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0007
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 4, Posbility: 0.0001
Next Token : 1, Posbility: 0.0003
Next Token : 2, Posbility: 0.0009
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0013
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0052
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0102
Next Token : match, Posbility: 0.0102
Next Token : return, Posbility: 0.0752
Next Token : let, Posbility: 0.3379
Next Token : if, Posbility: 0.5547
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0015
Next Token :  0, Posbility: 0.0017
Next Token : 
, Posbility: 0.0031
Next Token :  ((, Posbility: 0.0066
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : Compare, Posbility: 0.0005
Next Token : Int, Posbility: 0.0008
Next Token : List, Posbility: 0.0101
Next Token : (, Posbility: 0.0747
Next Token : n, Posbility: 0.9062
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  >=, Posbility: 0.0057
Next Token : 2, Posbility: 0.0095
Next Token :  , Posbility: 0.0422
Next Token :  =, Posbility: 0.0698
Next Token : 1, Posbility: 0.8516
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0186
Next Token :  >=, Posbility: 0.0238
Next Token :  +, Posbility: 0.0305
Next Token :  , Posbility: 0.2891
Next Token :  =, Posbility: 0.6133
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  4, Posbility: 0.0001
Next Token :  ((, Posbility: 0.0001
Next Token :  1, Posbility: 0.0023
Next Token :  0, Posbility: 0.0474
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0024
Next Token : 3, Posbility: 0.0024
Next Token : List, Posbility: 0.0024
Next Token : (, Posbility: 0.0178
Next Token : n, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0149
Next Token :  &&, Posbility: 0.0405
Next Token :  and, Posbility: 0.0405
Next Token :  then, Posbility: 0.0405
Next Token : 2, Posbility: 0.8125
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0398
Next Token :  and, Posbility: 0.0840
Next Token :  &&, Posbility: 0.0840
Next Token :  =, Posbility: 0.1079
Next Token :  then, Posbility: 0.6211
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0016
Next Token :  count, Posbility: 0.0027
Next Token :  , Posbility: 0.0471
Next Token : 
, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :          , Posbility: 0.0003
Next Token :           , Posbility: 0.0009
Next Token : 	, Posbility: 0.0013
Next Token :        , Posbility: 0.0025
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0327
Next Token : count, Posbility: 0.0420
Next Token : if, Posbility: 0.1465
Next Token : let, Posbility: 0.3105
Next Token : return, Posbility: 0.3984
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0115
Next Token :  1, Posbility: 0.0115
Next Token :  0, Posbility: 0.0845
Next Token :  count, Posbility: 0.2295
Next Token :  , Posbility: 0.6250
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0104
Next Token : if, Posbility: 0.0221
Next Token : (, Posbility: 0.0991
Next Token : List, Posbility: 0.0991
Next Token : n, Posbility: 0.7305
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0383
Next Token :  +, Posbility: 0.1045
Next Token :  *, Posbility: 0.1719
Next Token : 1, Posbility: 0.2832
Next Token : 
, Posbility: 0.3652
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :      , Posbility: 0.0003
Next Token :     , Posbility: 0.0005
Next Token :         , Posbility: 0.0008
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      
 score:False
Error type: noerr
---------------------------
Next Token : els, Posbility: 0.0013
Next Token : let, Posbility: 0.0015
Next Token : if, Posbility: 0.0017
Next Token : elif, Posbility: 0.0109
Next Token : else, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0005
Next Token :  match, Posbility: 0.0005
Next Token : if, Posbility: 0.0011
Next Token :  , Posbility: 0.4062
Next Token : 
, Posbility: 0.5898
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :           , Posbility: 0.0002
Next Token : 	, Posbility: 0.0003
Next Token :       , Posbility: 0.0006
Next Token :        , Posbility: 0.0019
Next Token :         , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0139
Next Token : match, Posbility: 0.0139
Next Token : let, Posbility: 0.1318
Next Token : if, Posbility: 0.2178
Next Token : return, Posbility: 0.5938
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return
 score:False
Error type: noerr
---------------------------
Next Token :  max, Posbility: 0.0101
Next Token :  Math, Posbility: 0.0101
Next Token :  , Posbility: 0.2031
Next Token :  count, Posbility: 0.2031
Next Token :  0, Posbility: 0.5508
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0040
Next Token :  *, Posbility: 0.0074
Next Token :  +, Posbility: 0.0095
Next Token : 

, Posbility: 0.2168
Next Token : 
, Posbility: 0.7539
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0

 score:False
Error type: noerr
---------------------------
Next Token : in, Posbility: 0.0064
Next Token :       , Posbility: 0.0184
Next Token : 

, Posbility: 0.0728
Next Token :   , Posbility: 0.2715
Next Token :     , Posbility: 0.4473
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    
 score:False
Error type: noerr
---------------------------
Next Token : else, Posbility: 0.0076
Next Token : 
, Posbility: 0.0092
Next Token : es, Posbility: 0.0234
Next Token : endif, Posbility: 0.0283
Next Token : end, Posbility: 0.8828
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    end
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  |, Posbility: 0.0016
Next Token :  , Posbility: 0.0072
Next Token : ;, Posbility: 0.0082
Next Token : 

, Posbility: 0.3945
Next Token : 
, Posbility: 0.5742
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    end

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    end


 score:True
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    end;
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    end 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    end |
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
 score:False
Error type: noerr
---------------------------
Next Token : fff, Posbility: 0.0140
Next Token : ;, Posbility: 0.0203
Next Token : 

, Posbility: 0.1699
Next Token : f, Posbility: 0.2188
Next Token : 
, Posbility: 0.4629
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif

 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0195
Next Token : endif, Posbility: 0.0208
Next Token : else, Posbility: 0.0933
Next Token : let, Posbility: 0.1357
Next Token :   , Posbility: 0.4727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0222
Next Token : in, Posbility: 0.0325
Next Token : end, Posbility: 0.0776
Next Token : |, Posbility: 0.3066
Next Token : else, Posbility: 0.4473
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  else
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  {, Posbility: 0.0044
Next Token :  match, Posbility: 0.0081
Next Token :  0, Posbility: 0.0081
Next Token :  , Posbility: 0.1270
Next Token : 
, Posbility: 0.8281
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  else

 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  else 
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  else 0
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  else match
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  else {
 score:False
Error type: Syntaxerr.Other_stop
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  |
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0090
Next Token :  [], Posbility: 0.0115
Next Token :  l, Posbility: 0.0148
Next Token :  0, Posbility: 0.0850
Next Token :  , Posbility: 0.8086
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0034
Next Token : (, Posbility: 0.0044
Next Token : x, Posbility: 0.0322
Next Token : n, Posbility: 0.1855
Next Token : _, Posbility: 0.7344
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  when, Posbility: 0.0019
Next Token :  then, Posbility: 0.0021
Next Token :  =>, Posbility: 0.0027
Next Token :  as, Posbility: 0.0084
Next Token :  , Posbility: 0.9688
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : :, Posbility: 0.0001
Next Token : →, Posbility: 0.0001
Next Token : ::, Posbility: 0.0013
Next Token : if, Posbility: 0.0017
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0181
Next Token :  count, Posbility: 0.0181
Next Token :  fail, Posbility: 0.0299
Next Token :  , Posbility: 0.2832
Next Token : 
, Posbility: 0.6016
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :       , Posbility: 0.0010
Next Token :   , Posbility: 0.0019
Next Token :    , Posbility: 0.0067
Next Token :     , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0354
Next Token : match, Posbility: 0.0403
Next Token : return, Posbility: 0.0664
Next Token : if, Posbility: 0.0752
Next Token : let, Posbility: 0.7148
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  i, Posbility: 0.0116
Next Token :  v, Posbility: 0.0116
Next Token :  rec, Posbility: 0.0854
Next Token :  l, Posbility: 0.1416
Next Token :  , Posbility: 0.6328
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0166
Next Token : m, Posbility: 0.0273
Next Token : (, Posbility: 0.0310
Next Token : x, Posbility: 0.0398
Next Token : n, Posbility: 0.7031
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0025
Next Token : 2, Posbility: 0.0025
Next Token : _, Posbility: 0.0042
Next Token : 1, Posbility: 0.1787
Next Token :  =, Posbility: 0.8008
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0023
Next Token :  0, Posbility: 0.0023
Next Token :  l, Posbility: 0.0063
Next Token :  count, Posbility: 0.0466
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0004
Next Token : length, Posbility: 0.0015
Next Token : (, Posbility: 0.0017
Next Token : n, Posbility: 0.0019
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2., Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0003
Next Token : fold, Posbility: 0.0003
Next Token : mem, Posbility: 0.0004
Next Token : head, Posbility: 0.0007
Next Token : length, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0001
Next Token : _, Posbility: 0.0003
Next Token : (, Posbility: 0.0008
Next Token :  , Posbility: 0.0046
Next Token :  l, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1,, Posbility: 0.0001
Next Token :  in, Posbility: 0.0012
Next Token : 3, Posbility: 0.0015
Next Token : 2, Posbility: 0.0085
Next Token : 1, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  , Posbility: 0.0003
Next Token : ;, Posbility: 0.0003
Next Token :  +, Posbility: 0.0007
Next Token :  in, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : 

, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :       , Posbility: 0.0003
Next Token :    , Posbility: 0.0017
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0035
Next Token : match, Posbility: 0.0057
Next Token : return, Posbility: 0.0156
Next Token : if, Posbility: 0.1152
Next Token : let, Posbility: 0.8516
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0023
Next Token :  i, Posbility: 0.0063
Next Token :  rec, Posbility: 0.0103
Next Token :  l, Posbility: 0.0219
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0024
Next Token : x, Posbility: 0.0024
Next Token : r, Posbility: 0.0024
Next Token : m, Posbility: 0.0175
Next Token : n, Posbility: 0.9570
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0023
Next Token : 0, Posbility: 0.0023
Next Token : 2, Posbility: 0.0173
Next Token :  =, Posbility: 0.0286
Next Token : 1, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0001
Next Token :  in, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  0, Posbility: 0.0005
Next Token :  l, Posbility: 0.0005
Next Token :  count, Posbility: 0.0067
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : if, Posbility: 0.0002
Next Token : length, Posbility: 0.0004
Next Token : (, Posbility: 0.0007
Next Token : n, Posbility: 0.0041
Next Token : List, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : head, Posbility: 0.0001
Next Token : count, Posbility: 0.0001
Next Token : find, Posbility: 0.0002
Next Token : mem, Posbility: 0.0003
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0007
Next Token : 3, Posbility: 0.0019
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0003
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0009
Next Token : return, Posbility: 0.0023
Next Token : match, Posbility: 0.0023
Next Token : if, Posbility: 0.0471
Next Token : let, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0004
Next Token :  i, Posbility: 0.0004
Next Token :  rec, Posbility: 0.0008
Next Token :  l, Posbility: 0.0017
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0003
Next Token : c, Posbility: 0.0003
Next Token : x, Posbility: 0.0004
Next Token : m, Posbility: 0.0019
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token :  =, Posbility: 0.0109
Next Token : 3, Posbility: 0.0109
Next Token : 2, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  l, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  count, Posbility: 0.0012
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : length, Posbility: 0.0002
Next Token : (, Posbility: 0.0003
Next Token : n, Posbility: 0.0041
Next Token : List, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : append, Posbility: 0.0000
Next Token : find, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0002
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0003
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 

, Posbility: 0.0012
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :    , Posbility: 0.0028
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0047
Next Token : return, Posbility: 0.0128
Next Token : match, Posbility: 0.0128
Next Token : let, Posbility: 0.2578
Next Token : if, Posbility: 0.7031
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  not, Posbility: 0.0007
Next Token : 
, Posbility: 0.0008
Next Token :  0, Posbility: 0.0008
Next Token :  ((, Posbility: 0.0015
Next Token :  , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : List, Posbility: 0.0040
Next Token : (, Posbility: 0.0179
Next Token : n, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  ==, Posbility: 0.0009
Next Token : 2, Posbility: 0.0024
Next Token :  , Posbility: 0.0065
Next Token :  =, Posbility: 0.0177
Next Token : 1, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  <=, Posbility: 0.0075
Next Token :  >=, Posbility: 0.0096
Next Token :  +, Posbility: 0.0124
Next Token :  , Posbility: 0.0913
Next Token :  =, Posbility: 0.8672
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :  1, Posbility: 0.0023
Next Token :  0, Posbility: 0.0474
Next Token :  , Posbility: 0.9492
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0005
Next Token : 3, Posbility: 0.0005
Next Token : (, Posbility: 0.0015
Next Token : List, Posbility: 0.0015
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 1, Posbility: 0.0015
Next Token :  &&, Posbility: 0.0031
Next Token :  and, Posbility: 0.0040
Next Token :  then, Posbility: 0.0085
Next Token : 2, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  +, Posbility: 0.0048
Next Token :  =, Posbility: 0.0214
Next Token :  and, Posbility: 0.0214
Next Token :  &&, Posbility: 0.0352
Next Token :  then, Posbility: 0.9062
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :  0, Posbility: 0.0005
Next Token :  count, Posbility: 0.0015
Next Token :  , Posbility: 0.0140
Next Token : 
, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :     , Posbility: 0.0002
Next Token :        , Posbility: 0.0002
Next Token :         , Posbility: 0.0013
Next Token :      , Posbility: 0.0013
Next Token :       , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : List, Posbility: 0.0167
Next Token : count, Posbility: 0.0167
Next Token : if, Posbility: 0.0457
Next Token : return, Posbility: 0.3359
Next Token : let, Posbility: 0.5547
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0058
Next Token :  i, Posbility: 0.0075
Next Token :  rec, Posbility: 0.0297
Next Token :  l, Posbility: 0.0337
Next Token :  , Posbility: 0.8672
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : f, Posbility: 0.0044
Next Token : (, Posbility: 0.0049
Next Token : m, Posbility: 0.0056
Next Token : x, Posbility: 0.0081
Next Token : n, Posbility: 0.9414
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 2, Posbility: 0.0008
Next Token : _, Posbility: 0.0017
Next Token : 3, Posbility: 0.0040
Next Token : 1, Posbility: 0.0139
Next Token :  =, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  0, Posbility: 0.0002
Next Token :  match, Posbility: 0.0003
Next Token : 
, Posbility: 0.0004
Next Token :  count, Posbility: 0.0032
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Next Token : (, Posbility: 0.0006
Next Token : n, Posbility: 0.0140
Next Token : List, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : count, Posbility: 0.0000
Next Token : append, Posbility: 0.0000
Next Token : fold, Posbility: 0.0001
Next Token : mem, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  [, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0015
Next Token :  l, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token :  in, Posbility: 0.0002
Next Token : 3, Posbility: 0.0012
Next Token : 2, Posbility: 0.0025
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  +, Posbility: 0.0003
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 

, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :      , Posbility: 0.0003
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : match, Posbility: 0.0004
Next Token : List, Posbility: 0.0005
Next Token : if, Posbility: 0.0031
Next Token : return, Posbility: 0.0067
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  a, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0002
Next Token :  i, Posbility: 0.0003
Next Token :  l, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : p, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : m, Posbility: 0.0003
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0002
Next Token : 3, Posbility: 0.0005
Next Token : 2, Posbility: 0.0009
Next Token :  =, Posbility: 0.0067
Next Token : 1, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : length, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0005
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 3, Posbility: 0.0002
Next Token : 1, Posbility: 0.0003
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in

 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :      , Posbility: 0.0001
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : match, Posbility: 0.0003
Next Token : if, Posbility: 0.0032
Next Token : return, Posbility: 0.0041
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  rec, Posbility: 0.0001
Next Token :  k, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Next Token :  l, Posbility: 0.0003
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : x, Posbility: 0.0001
Next Token : m, Posbility: 0.0001
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 3, Posbility: 0.0006
Next Token :  =, Posbility: 0.0025
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 =
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = 
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0003
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :  , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
 score:False
Error type: Syntaxerr.Other_continue
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :      , Posbility: 0.0010
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      
 score:False
Error type: noerr
---------------------------
Next Token : count, Posbility: 0.0033
Next Token : match, Posbility: 0.0033
Next Token : return, Posbility: 0.0240
Next Token : let, Posbility: 0.4824
Next Token : if, Posbility: 0.4824
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  not, Posbility: 0.0002
Next Token :  ((, Posbility: 0.0002
Next Token :  count, Posbility: 0.0003
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if 
 score:False
Error type: noerr
---------------------------
Next Token : Int, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0041
Next Token : List, Posbility: 0.0041
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n
 score:False
Error type: noerr
---------------------------
Next Token :  >=, Posbility: 0.0007
Next Token : 2, Posbility: 0.0031
Next Token :  , Posbility: 0.0066
Next Token :  =, Posbility: 0.0139
Next Token : 1, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0026
Next Token :  >=, Posbility: 0.0030
Next Token :  +, Posbility: 0.0056
Next Token :  , Posbility: 0.0466
Next Token :  =, Posbility: 0.9375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 =
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0000
Next Token :  4, Posbility: 0.0000
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 0.0025
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0003
Next Token : 3, Posbility: 0.0003
Next Token : (, Posbility: 0.0007
Next Token : List, Posbility: 0.0019
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n
 score:False
Error type: noerr
---------------------------
Next Token :  &&, Posbility: 0.0005
Next Token :  and, Posbility: 0.0009
Next Token : 1, Posbility: 0.0012
Next Token :  then, Posbility: 0.0052
Next Token : 2, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0024
Next Token :  =, Posbility: 0.0031
Next Token :  and, Posbility: 0.0031
Next Token :  &&, Posbility: 0.0108
Next Token :  then, Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0001
Next Token :  {, Posbility: 0.0001
Next Token :  count, Posbility: 0.0007
Next Token :  , Posbility: 0.0059
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then

 score:False
Error type: noerr
---------------------------
Next Token :          , Posbility: 0.0001
Next Token :           , Posbility: 0.0001
Next Token : 	, Posbility: 0.0003
Next Token :        , Posbility: 0.0012
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0088
Next Token : List, Posbility: 0.0145
Next Token : count, Posbility: 0.0239
Next Token : let, Posbility: 0.1377
Next Token : return, Posbility: 0.7930
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0009
Next Token :  1, Posbility: 0.0023
Next Token :  0, Posbility: 0.0063
Next Token :  count, Posbility: 0.0466
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0023
Next Token : 2, Posbility: 0.0050
Next Token : (, Posbility: 0.0105
Next Token : List, Posbility: 0.0286
Next Token : n, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0038
Next Token : 1, Posbility: 0.0170
Next Token :  *, Posbility: 0.0170
Next Token :  +, Posbility: 0.0281
Next Token : 
, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :      , Posbility: 0.0001
Next Token :     , Posbility: 0.0002
Next Token :         , Posbility: 0.0002
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0003
Next Token : end, Posbility: 0.0004
Next Token : els, Posbility: 0.0007
Next Token : elif, Posbility: 0.0025
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0003
Next Token :  {, Posbility: 0.0009
Next Token : if, Posbility: 0.0021
Next Token :  , Posbility: 0.0292
Next Token : 
, Posbility: 0.9648
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token : 	, Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0007
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        
 score:False
Error type: noerr
---------------------------
Next Token : count, Posbility: 0.0026
Next Token : if, Posbility: 0.0043
Next Token : List, Posbility: 0.0043
Next Token : let, Posbility: 0.0466
Next Token : return, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return
 score:False
Error type: noerr
---------------------------
Next Token :  0;, Posbility: 0.0021
Next Token :  1, Posbility: 0.0056
Next Token :  , Posbility: 0.0413
Next Token :  count, Posbility: 0.1123
Next Token :  0, Posbility: 0.8281
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0001
Next Token : 

, Posbility: 0.0003
Next Token :  , Posbility: 0.0006
Next Token :  +, Posbility: 0.0006
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :      , Posbility: 0.0001
Next Token :   , Posbility: 0.0005
Next Token :       , Posbility: 0.0259
Next Token :     , Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0004
Next Token : endif, Posbility: 0.0005
Next Token : els, Posbility: 0.0006
Next Token : elif, Posbility: 0.0046
Next Token : else, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0002
Next Token :  {, Posbility: 0.0003
Next Token : if, Posbility: 0.0018
Next Token :  , Posbility: 0.0420
Next Token : 
, Posbility: 0.9531
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0002
Next Token :      , Posbility: 0.0005
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0036
Next Token : List, Posbility: 0.0036
Next Token : if, Posbility: 0.0210
Next Token : let, Posbility: 0.4219
Next Token : return, Posbility: 0.5391
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return
 score:False
Error type: noerr
---------------------------
Next Token :  max, Posbility: 0.0055
Next Token :  0;, Posbility: 0.0150
Next Token :  , Posbility: 0.0405
Next Token :  count, Posbility: 0.1104
Next Token :  0, Posbility: 0.8164
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
 score:False
Error type: noerr
---------------------------
Next Token :  (*, Posbility: 0.0005
Next Token :  *, Posbility: 0.0005
Next Token :  , Posbility: 0.0012
Next Token : 

, Posbility: 0.0674
Next Token : 
, Posbility: 0.9258
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0

 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0084
Next Token : endif, Posbility: 0.0334
Next Token : end, Posbility: 0.0430
Next Token :     , Posbility: 0.1406
Next Token :   , Posbility: 0.5898
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  
 score:False
Error type: noerr
---------------------------
Next Token : else, Posbility: 0.0471
Next Token : es, Posbility: 0.0535
Next Token : endif, Posbility: 0.1455
Next Token : end, Posbility: 0.2715
Next Token : |, Posbility: 0.3477
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  |
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0033
Next Token :  [], Posbility: 0.0043
Next Token :  l, Posbility: 0.0063
Next Token :  0, Posbility: 0.0193
Next Token :  , Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0025
Next Token : (), Posbility: 0.0042
Next Token : x, Posbility: 0.0240
Next Token : n, Posbility: 0.0449
Next Token : _, Posbility: 0.9023
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _
 score:False
Error type: noerr
---------------------------
Next Token :  then, Posbility: 0.0007
Next Token :  |, Posbility: 0.0008
Next Token :  =>, Posbility: 0.0035
Next Token :  as, Posbility: 0.0075
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0001
Next Token :  =>, Posbility: 0.0001
Next Token : if, Posbility: 0.0002
Next Token : ::, Posbility: 0.0019
Next Token : ->, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0132
Next Token :  fail, Posbility: 0.0217
Next Token :  0, Posbility: 0.0591
Next Token :  , Posbility: 0.1602
Next Token : 
, Posbility: 0.7188
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0002
Next Token :   , Posbility: 0.0005
Next Token :       , Posbility: 0.0008
Next Token :    , Posbility: 0.0046
Next Token :     , Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0183
Next Token : List, Posbility: 0.0234
Next Token : if, Posbility: 0.0302
Next Token : return, Posbility: 0.1729
Next Token : let, Posbility: 0.6836
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0036
Next Token :  count, Posbility: 0.0036
Next Token :  rec, Posbility: 0.0302
Next Token :  l, Posbility: 0.0496
Next Token :  , Posbility: 0.8789
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let 
 score:False
Error type: noerr
---------------------------
Next Token : r, Posbility: 0.0034
Next Token : m, Posbility: 0.0063
Next Token : (, Posbility: 0.0081
Next Token : x, Posbility: 0.0104
Next Token : n, Posbility: 0.9336
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0005
Next Token : 3, Posbility: 0.0006
Next Token : _, Posbility: 0.0008
Next Token : 1, Posbility: 0.0471
Next Token :  =, Posbility: 0.9492
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0002
Next Token :  0, Posbility: 0.0003
Next Token :  l, Posbility: 0.0004
Next Token :  count, Posbility: 0.0009
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = 
 score:False
Error type: noerr
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : length, Posbility: 0.0002
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0003
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.
 score:False
Error type: noerr
---------------------------
Next Token : fold, Posbility: 0.0000
Next Token : count, Posbility: 0.0001
Next Token : head, Posbility: 0.0001
Next Token : mem, Posbility: 0.0001
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token :  , Posbility: 0.0009
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token :  in, Posbility: 0.0007
Next Token : 3, Posbility: 0.0007
Next Token : 2, Posbility: 0.0041
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0002
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in

 score:False
Error type: noerr
---------------------------
Next Token :         , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0002
Next Token :       , Posbility: 0.0003
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0004
Next Token : match, Posbility: 0.0005
Next Token : return, Posbility: 0.0031
Next Token : if, Posbility: 0.0067
Next Token : let, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0002
Next Token :  i, Posbility: 0.0002
Next Token :  rec, Posbility: 0.0007
Next Token :  l, Posbility: 0.0015
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : x, Posbility: 0.0001
Next Token : r, Posbility: 0.0001
Next Token : (, Posbility: 0.0002
Next Token : m, Posbility: 0.0009
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0002
Next Token : 0, Posbility: 0.0003
Next Token :  =, Posbility: 0.0025
Next Token : 2, Posbility: 0.0025
Next Token : 1, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0001
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = 
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0006
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.
 score:False
Error type: noerr
---------------------------
Next Token : head, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l
 score:False
Error type: noerr
---------------------------
Next Token : 5, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0001
Next Token : 3, Posbility: 0.0006
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :    , Posbility: 0.0001
Next Token :       , Posbility: 0.0001
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0002
Next Token : match, Posbility: 0.0003
Next Token : return, Posbility: 0.0015
Next Token : if, Posbility: 0.0052
Next Token : let, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let
 score:False
Error type: noerr
---------------------------
Next Token :  i, Posbility: 0.0000
Next Token :  k, Posbility: 0.0001
Next Token :  rec, Posbility: 0.0001
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let 
 score:False
Error type: noerr
---------------------------
Next Token : r, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : m, Posbility: 0.0002
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0000
Next Token : 0, Posbility: 0.0001
Next Token :  =, Posbility: 0.0022
Next Token : 3, Posbility: 0.0025
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : n, Posbility: 0.0004
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List
 score:False
Error type: noerr
---------------------------
Next Token :  , Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.
 score:False
Error type: noerr
---------------------------
Next Token : len, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 2, Posbility: 0.0002
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0000
Next Token :   , Posbility: 0.0001
Next Token :       , Posbility: 0.0002
Next Token :    , Posbility: 0.0015
Next Token :     , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0056
Next Token : match, Posbility: 0.0056
Next Token : return, Posbility: 0.0413
Next Token : let, Posbility: 0.1123
Next Token : if, Posbility: 0.8281
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0002
Next Token :  0, Posbility: 0.0002
Next Token :  not, Posbility: 0.0003
Next Token :  ((, Posbility: 0.0004
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if 
 score:False
Error type: noerr
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : List, Posbility: 0.0025
Next Token : (, Posbility: 0.0052
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n
 score:False
Error type: noerr
---------------------------
Next Token :  >=, Posbility: 0.0005
Next Token :  , Posbility: 0.0024
Next Token : 2, Posbility: 0.0040
Next Token :  =, Posbility: 0.0066
Next Token : 1, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1
 score:False
Error type: noerr
---------------------------
Next Token :  +, Posbility: 0.0046
Next Token :  <=, Posbility: 0.0046
Next Token :  >=, Posbility: 0.0060
Next Token :  , Posbility: 0.0933
Next Token :  =, Posbility: 0.8867
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 =
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token :  1, Posbility: 0.0005
Next Token :  0, Posbility: 0.0179
Next Token :  , Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 0.0002
Next Token : (, Posbility: 0.0004
Next Token : List, Posbility: 0.0009
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n
 score:False
Error type: noerr
---------------------------
Next Token : 1, Posbility: 0.0004
Next Token :  and, Posbility: 0.0005
Next Token : 2,, Posbility: 0.0005
Next Token :  then, Posbility: 0.0032
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2
 score:False
Error type: noerr
---------------------------
Next Token :  ||, Posbility: 0.0016
Next Token :  and, Posbility: 0.0050
Next Token :  +, Posbility: 0.0050
Next Token :  &&, Posbility: 0.0200
Next Token :  then, Posbility: 0.9609
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  0, Posbility: 0.0004
Next Token :  , Posbility: 0.0046
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0001
Next Token :        , Posbility: 0.0001
Next Token :      , Posbility: 0.0004
Next Token :         , Posbility: 0.0007
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      
 score:False
Error type: noerr
---------------------------
Next Token : List, Posbility: 0.0035
Next Token : count, Posbility: 0.0045
Next Token : if, Posbility: 0.0095
Next Token : return, Posbility: 0.1162
Next Token : let, Posbility: 0.8594
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0011
Next Token :  i, Posbility: 0.0011
Next Token :  l, Posbility: 0.0051
Next Token :  rec, Posbility: 0.0066
Next Token :  , Posbility: 0.9766
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let 
 score:False
Error type: noerr
---------------------------
Next Token : f, Posbility: 0.0005
Next Token : m, Posbility: 0.0007
Next Token : (, Posbility: 0.0010
Next Token : x, Posbility: 0.0010
Next Token : n, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : 3, Posbility: 0.0005
Next Token : 1, Posbility: 0.0028
Next Token :  =, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n =
 score:False
Error type: noerr
---------------------------
Next Token :  match, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  count, Posbility: 0.0013
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : (, Posbility: 0.0002
Next Token : n, Posbility: 0.0015
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List
 score:False
Error type: noerr
---------------------------
Next Token : 1., Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.
 score:False
Error type: noerr
---------------------------
Next Token : count, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : append, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0005
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l
 score:False
Error type: noerr
---------------------------
Next Token : 4, Posbility: 0.0000
Next Token :  in, Posbility: 0.0001
Next Token : 3, Posbility: 0.0004
Next Token : 2, Posbility: 0.0010
Next Token : 1, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1
 score:False
Error type: noerr
---------------------------
Next Token : ;, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Next Token :      , Posbility: 0.0001
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0001
Next Token : List, Posbility: 0.0001
Next Token : if, Posbility: 0.0007
Next Token : return, Posbility: 0.0013
Next Token : let, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  k, Posbility: 0.0000
Next Token :  rec, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  l, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token :  =, Posbility: 0.0013
Next Token : 1, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1
 score:False
Error type: noerr
---------------------------
Next Token : =, Posbility: 0.0000
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0001
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.
 score:False
Error type: noerr
---------------------------
Next Token : LENGTH, Posbility: 0.0000
Next Token : size, Posbility: 0.0000
Next Token : 长度, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l
 score:False
Error type: noerr
---------------------------
Next Token : 2,, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 3, Posbility: 0.0001
Next Token : 1, Posbility: 0.0001
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2
 score:False
Error type: noerr
---------------------------
Next Token :  int, Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token :   , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :     , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : match, Posbility: 0.0000
Next Token : if, Posbility: 0.0004
Next Token : return, Posbility: 0.0004
Next Token : let, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let
 score:False
Error type: noerr
---------------------------
Next Token :  a, Posbility: 0.0000
Next Token :  i, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token :  l, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let 
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token : x, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : m, Posbility: 0.0000
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 3, Posbility: 0.0002
Next Token :  =, Posbility: 0.0004
Next Token : 2, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2
 score:False
Error type: noerr
---------------------------
Next Token :  in, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  =, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 =
 score:False
Error type: noerr
---------------------------
Next Token :  l, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  0, Posbility: 0.0000
Next Token :  count, Posbility: 0.0000
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : n, Posbility: 0.0000
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.
 score:False
Error type: noerr
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Next Token : LENGTH, Posbility: 0.0000
Next Token : 长度, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0000
Next Token :  k, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token : in, Posbility: 0.0000
Next Token :  int, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  in, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :       , Posbility: 0.0000
Next Token :  , Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :      , Posbility: 0.0008
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0008
Next Token : count, Posbility: 0.0022
Next Token : return, Posbility: 0.0449
Next Token : let, Posbility: 0.0449
Next Token : if, Posbility: 0.9023
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  count, Posbility: 0.0001
Next Token :  not, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if 
 score:False
Error type: noerr
---------------------------
Next Token : Int, Posbility: 0.0000
Next Token : let, Posbility: 0.0001
Next Token : (, Posbility: 0.0015
Next Token : List, Posbility: 0.0025
Next Token : n, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n
 score:False
Error type: noerr
---------------------------
Next Token :  >=, Posbility: 0.0004
Next Token :  , Posbility: 0.0040
Next Token : 2, Posbility: 0.0040
Next Token :  =, Posbility: 0.0052
Next Token : 1, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1
 score:False
Error type: noerr
---------------------------
Next Token :  <=, Posbility: 0.0016
Next Token :  >=, Posbility: 0.0021
Next Token :  +, Posbility: 0.0030
Next Token :  , Posbility: 0.0469
Next Token :  =, Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 =
 score:False
Error type: noerr
---------------------------
Next Token : n, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token :  1, Posbility: 0.0003
Next Token :  0, Posbility: 0.0019
Next Token :  , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = 
 score:False
Error type: noerr
---------------------------
Next Token : 2, Posbility: 0.0001
Next Token : 3, Posbility: 0.0001
Next Token : (, Posbility: 0.0004
Next Token : List, Posbility: 0.0012
Next Token : n, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n
 score:False
Error type: noerr
---------------------------
Next Token : 2,, Posbility: 0.0001
Next Token :  and, Posbility: 0.0003
Next Token : 1, Posbility: 0.0004
Next Token :  then, Posbility: 0.0019
Next Token : 2, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2
 score:False
Error type: noerr
---------------------------
Next Token :  ?, Posbility: 0.0005
Next Token :  and, Posbility: 0.0009
Next Token :  +, Posbility: 0.0019
Next Token :  &&, Posbility: 0.0052
Next Token :  then, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
 score:False
Error type: noerr
---------------------------
Next Token :  {, Posbility: 0.0000
Next Token :  0, Posbility: 0.0001
Next Token :  count, Posbility: 0.0001
Next Token :  , Posbility: 0.0019
Next Token : 
, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then

 score:False
Error type: noerr
---------------------------
Next Token :       , Posbility: 0.0001
Next Token :           , Posbility: 0.0001
Next Token : 	, Posbility: 0.0002
Next Token :        , Posbility: 0.0006
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        
 score:False
Error type: noerr
---------------------------
Next Token : if, Posbility: 0.0029
Next Token : List, Posbility: 0.0038
Next Token : count, Posbility: 0.0079
Next Token : let, Posbility: 0.0588
Next Token : return, Posbility: 0.9180
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return
 score:False
Error type: noerr
---------------------------
Next Token :  rec, Posbility: 0.0005
Next Token :  1, Posbility: 0.0009
Next Token :  0, Posbility: 0.0025
Next Token :  count, Posbility: 0.0041
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0001
Next Token : 2, Posbility: 0.0003
Next Token : (, Posbility: 0.0012
Next Token : List, Posbility: 0.0085
Next Token : n, Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0007
Next Token :  , Posbility: 0.0010
Next Token : 1, Posbility: 0.0019
Next Token :  +, Posbility: 0.0036
Next Token : 
, Posbility: 0.9922
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n

 score:False
Error type: noerr
---------------------------
Next Token :        , Posbility: 0.0000
Next Token :      , Posbility: 0.0000
Next Token :     , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0001
Next Token : let, Posbility: 0.0001
Next Token : els, Posbility: 0.0002
Next Token : elif, Posbility: 0.0005
Next Token : else, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
 score:False
Error type: noerr
---------------------------
Next Token :  0, Posbility: 0.0000
Next Token :  {, Posbility: 0.0005
Next Token : if, Posbility: 0.0015
Next Token :  , Posbility: 0.0124
Next Token : 
, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else

 score:False
Error type: noerr
---------------------------
Next Token :           , Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Next Token :       , Posbility: 0.0001
Next Token :        , Posbility: 0.0004
Next Token :         , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        
 score:False
Error type: noerr
---------------------------
Next Token : count, Posbility: 0.0010
Next Token : if, Posbility: 0.0021
Next Token : List, Posbility: 0.0021
Next Token : let, Posbility: 0.0201
Next Token : return, Posbility: 0.9688
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0003
Next Token :  1, Posbility: 0.0009
Next Token :  , Posbility: 0.0066
Next Token :  count, Posbility: 0.0178
Next Token :  0, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0000
Next Token :  +, Posbility: 0.0001
Next Token :  , Posbility: 0.0003
Next Token : 

, Posbility: 0.0003
Next Token : 
, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0

 score:False
Error type: noerr
---------------------------
Next Token :    , Posbility: 0.0000
Next Token :      , Posbility: 0.0001
Next Token :   , Posbility: 0.0007
Next Token :       , Posbility: 0.0159
Next Token :     , Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    
 score:False
Error type: noerr
---------------------------
Next Token : let, Posbility: 0.0001
Next Token : end, Posbility: 0.0003
Next Token : els, Posbility: 0.0006
Next Token : elif, Posbility: 0.0007
Next Token : else, Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0001
Next Token :  {, Posbility: 0.0002
Next Token : if, Posbility: 0.0019
Next Token :  , Posbility: 0.0229
Next Token : 
, Posbility: 0.9727
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else

 score:False
Error type: noerr
---------------------------
Next Token :   , Posbility: 0.0000
Next Token :         , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Next Token :      , Posbility: 0.0006
Next Token :       , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      
 score:False
Error type: noerr
---------------------------
Next Token : 0, Posbility: 0.0014
Next Token : List, Posbility: 0.0022
Next Token : if, Posbility: 0.0101
Next Token : let, Posbility: 0.0742
Next Token : return, Posbility: 0.9062
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0009
Next Token :  0;, Posbility: 0.0009
Next Token :  , Posbility: 0.0066
Next Token :  count, Posbility: 0.0066
Next Token :  0, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
 score:False
Error type: noerr
---------------------------
Next Token :  *, Posbility: 0.0002
Next Token :  , Posbility: 0.0005
Next Token :   , Posbility: 0.0006
Next Token : 

, Posbility: 0.1187
Next Token : 
, Posbility: 0.8789
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0

 score:False
Error type: noerr
---------------------------
Next Token :     , Posbility: 0.0092
Next Token : ;, Posbility: 0.0110
Next Token : end, Posbility: 0.0386
Next Token : let, Posbility: 0.1953
Next Token :   , Posbility: 0.2520
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0087
Next Token : else, Posbility: 0.0087
Next Token : es, Posbility: 0.0092
Next Token : end, Posbility: 0.1855
Next Token : |, Posbility: 0.7344
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  |
 score:False
Error type: noerr
---------------------------
Next Token : _, Posbility: 0.0018
Next Token :  l, Posbility: 0.0056
Next Token :  [], Posbility: 0.0118
Next Token :  0, Posbility: 0.0172
Next Token :  , Posbility: 0.9375
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | 
 score:False
Error type: noerr
---------------------------
Next Token : (, Posbility: 0.0016
Next Token : (), Posbility: 0.0023
Next Token : x, Posbility: 0.0171
Next Token : n, Posbility: 0.0320
Next Token : _, Posbility: 0.9297
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _
 score:False
Error type: noerr
---------------------------
Next Token : 
, Posbility: 0.0005
Next Token :  =>, Posbility: 0.0010
Next Token :  |, Posbility: 0.0013
Next Token :  as, Posbility: 0.0059
Next Token :  , Posbility: 0.9883
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ 
 score:False
Error type: noerr
---------------------------
Next Token : end, Posbility: 0.0000
Next Token : (, Posbility: 0.0001
Next Token : _, Posbility: 0.0002
Next Token : ::, Posbility: 0.0012
Next Token : ->, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
 score:False
Error type: noerr
---------------------------
Next Token :  count, Posbility: 0.0044
Next Token :  fail, Posbility: 0.0198
Next Token :  0, Posbility: 0.0537
Next Token :  , Posbility: 0.2412
Next Token : 
, Posbility: 0.6562
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->

 score:False
Error type: noerr
---------------------------
Next Token :      , Posbility: 0.0001
Next Token :       , Posbility: 0.0003
Next Token :   , Posbility: 0.0004
Next Token :    , Posbility: 0.0036
Next Token :     , Posbility: 0.9961
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    
 score:False
Error type: noerr
---------------------------
Next Token : match, Posbility: 0.0107
Next Token : if, Posbility: 0.0156
Next Token : List, Posbility: 0.0227
Next Token : return, Posbility: 0.1484
Next Token : let, Posbility: 0.7500
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let
 score:False
Error type: noerr
---------------------------
Next Token :  v, Posbility: 0.0011
Next Token :  a, Posbility: 0.0016
Next Token :  rec, Posbility: 0.0153
Next Token :  l, Posbility: 0.0222
Next Token :  , Posbility: 0.9453
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let 
 score:False
Error type: noerr
---------------------------
Next Token : (), Posbility: 0.0015
Next Token : m, Posbility: 0.0015
Next Token : (, Posbility: 0.0022
Next Token : x, Posbility: 0.0028
Next Token : n, Posbility: 0.9805
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0002
Next Token : 0, Posbility: 0.0002
Next Token : _, Posbility: 0.0003
Next Token : 1, Posbility: 0.0159
Next Token :  =, Posbility: 0.9844
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n =
 score:False
Error type: noerr
---------------------------
Next Token :  1, Posbility: 0.0001
Next Token :  l, Posbility: 0.0001
Next Token :  0, Posbility: 0.0001
Next Token :  count, Posbility: 0.0002
Next Token :  , Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = 
 score:False
Error type: noerr
---------------------------
Next Token : 3, Posbility: 0.0000
Next Token : length, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token : n, Posbility: 0.0002
Next Token : List, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List
 score:False
Error type: noerr
---------------------------
Next Token : s, Posbility: 0.0000
Next Token : 2., Posbility: 0.0000
Next Token : 1., Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.
 score:False
Error type: noerr
---------------------------
Next Token : size, Posbility: 0.0000
Next Token : mem, Posbility: 0.0000
Next Token : head, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Next Token : length, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length
 score:False
Error type: noerr
---------------------------
Next Token :  list, Posbility: 0.0000
Next Token : _, Posbility: 0.0001
Next Token : (, Posbility: 0.0001
Next Token :  , Posbility: 0.0004
Next Token :  l, Posbility: 1.0000
---------------------------
code:
 (* Write a function to count number items that are identical in the same position of three given lists. *)
let rec count_identical_items (l1 : List.t) (l2 : List.t) (l3 : List.t) =
  match List.length l1 with
  | 0 -> return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 = n then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 = n then
        return n
      else
        return 0
    else
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    endif
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l1 in
    let n1 = List.length l2 in
    let n2 = List.length l3 in
    if n1 = n2 then
      let n = List.length l1 in
      let n1 = List.length l2 in
      let n2 = List.length l3 in
      if n1 = n2 then
        return n
      else
        return 0
    else
      return 0
  | _ ->
    let n = List.length l
 score:False


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>